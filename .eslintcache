[{"C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\index.js":"1","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\App.js":"2","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\store.js":"3","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\components\\NavBar.js":"4","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\Pages\\Home.js":"5","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\Pages\\Cart.js":"6","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\Pages\\authPages\\RegisterComplete.js":"7","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\Pages\\authPages\\Login.js":"8","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\components\\routes\\AdminRoute.js":"9","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\Pages\\authPages\\Register.js":"10","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\Pages\\Shop.js":"11","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\Pages\\adminPages\\AdminDashboard.js":"12","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\Pages\\adminPages\\CreateProduct.js":"13","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\components\\routes\\PrivateRoute.js":"14","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\Pages\\adminPages\\AdminCategories.js":"15","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\Pages\\adminPages\\UpdateProduct.js":"16","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\Pages\\userPages\\UserProfile.js":"17","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\Pages\\adminPages\\AdminProducts.js":"18","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\Pages\\userPages\\PurchaseHistory.js":"19","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\reducers\\userReducer.js":"20","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\types\\userTypes.js":"21","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\components\\SideNav.js":"22","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\firebase.js":"23","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\controllers\\categoryControllers.js":"24","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\controllers\\authControllers.js":"25","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\controllers\\productControllers.js":"26","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\components\\admin\\AdminNav.js":"27","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\components\\admin\\AdminSideNav.js":"28","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\components\\HomeCard.js":"29","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\components\\ContactUs.js":"30","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\Pages\\Product.js":"31","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\Pages\\Category.js":"32","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\reducers\\cartReducers.js":"33","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\types\\cartTypes.js":"34","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\components\\CartTable.js":"35","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\controllers\\userControllers.js":"36","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\Pages\\Checkout.js":"37","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\Pages\\OrderSuccess.js":"38","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\components\\UserOrder.js":"39","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\controllers\\adminControllers.js":"40","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\Pages\\UserOrderPage.js":"41","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\Pages\\authPages\\ForgotPassword.js":"42","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\components\\BankTransferPayment.js":"43","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\components\\PhonePayment.js":"44","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\Pages\\adminPages\\AdminOrder.js":"45","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\Pages\\adminPages\\Comments.js":"46","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\components\\UserMessage.js":"47"},{"size":383,"mtime":1609438319426,"results":"48","hashOfConfig":"49"},{"size":5640,"mtime":1611395350506,"results":"50","hashOfConfig":"49"},{"size":856,"mtime":1609947743048,"results":"51","hashOfConfig":"49"},{"size":7973,"mtime":1611166621843,"results":"52","hashOfConfig":"49"},{"size":5925,"mtime":1611224819568,"results":"53","hashOfConfig":"49"},{"size":7987,"mtime":1610874804489,"results":"54","hashOfConfig":"49"},{"size":5000,"mtime":1611223198470,"results":"55","hashOfConfig":"49"},{"size":5818,"mtime":1610625348008,"results":"56","hashOfConfig":"49"},{"size":516,"mtime":1609438319423,"results":"57","hashOfConfig":"49"},{"size":3635,"mtime":1609438319420,"results":"58","hashOfConfig":"49"},{"size":5466,"mtime":1610296947654,"results":"59","hashOfConfig":"49"},{"size":6141,"mtime":1611310917676,"results":"60","hashOfConfig":"49"},{"size":12107,"mtime":1610295768384,"results":"61","hashOfConfig":"49"},{"size":525,"mtime":1609438319424,"results":"62","hashOfConfig":"49"},{"size":6828,"mtime":1609438319417,"results":"63","hashOfConfig":"49"},{"size":12578,"mtime":1610295800367,"results":"64","hashOfConfig":"49"},{"size":5949,"mtime":1611396070478,"results":"65","hashOfConfig":"49"},{"size":6766,"mtime":1611395491611,"results":"66","hashOfConfig":"49"},{"size":4281,"mtime":1611311024594,"results":"67","hashOfConfig":"49"},{"size":433,"mtime":1609438319428,"results":"68","hashOfConfig":"49"},{"size":164,"mtime":1609438319429,"results":"69","hashOfConfig":"49"},{"size":2939,"mtime":1609438319422,"results":"70","hashOfConfig":"49"},{"size":631,"mtime":1609835760133,"results":"71","hashOfConfig":"49"},{"size":807,"mtime":1609934587822,"results":"72","hashOfConfig":"49"},{"size":476,"mtime":1609438319424,"results":"73","hashOfConfig":"49"},{"size":1159,"mtime":1609800110150,"results":"74","hashOfConfig":"49"},{"size":2262,"mtime":1611392015080,"results":"75","hashOfConfig":"49"},{"size":3417,"mtime":1611392029572,"results":"76","hashOfConfig":"49"},{"size":4977,"mtime":1611174501676,"results":"77","hashOfConfig":"49"},{"size":5482,"mtime":1611396033560,"results":"78","hashOfConfig":"49"},{"size":5306,"mtime":1610619882678,"results":"79","hashOfConfig":"49"},{"size":2938,"mtime":1610874699658,"results":"80","hashOfConfig":"49"},{"size":354,"mtime":1610355507025,"results":"81","hashOfConfig":"49"},{"size":134,"mtime":1610355521261,"results":"82","hashOfConfig":"49"},{"size":4169,"mtime":1610019605085,"results":"83","hashOfConfig":"49"},{"size":1949,"mtime":1610877927389,"results":"84","hashOfConfig":"49"},{"size":11079,"mtime":1610874932665,"results":"85","hashOfConfig":"49"},{"size":7362,"mtime":1611219185148,"results":"86","hashOfConfig":"49"},{"size":6052,"mtime":1611310863841,"results":"87","hashOfConfig":"49"},{"size":975,"mtime":1611395564938,"results":"88","hashOfConfig":"49"},{"size":7776,"mtime":1611218073795,"results":"89","hashOfConfig":"49"},{"size":3877,"mtime":1610878754774,"results":"90","hashOfConfig":"49"},{"size":2447,"mtime":1611172571509,"results":"91","hashOfConfig":"49"},{"size":2573,"mtime":1611172605615,"results":"92","hashOfConfig":"49"},{"size":5679,"mtime":1611392391675,"results":"93","hashOfConfig":"49"},{"size":2711,"mtime":1611395716607,"results":"94","hashOfConfig":"49"},{"size":399,"mtime":1611395195482,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"l6n5ia",{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"98"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"98"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"98"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"98"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"98"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"98"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"98"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"98"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"98"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"98"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"98"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"98"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"98"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"98"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"98"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"98"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"98"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"98"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"205","messages":"206","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\index.js",[],["209","210"],"C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\App.js",["211"],"C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\store.js",[],"C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\components\\NavBar.js",[],"C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\Pages\\Home.js",["212","213"],"import React, { useState, useEffect } from 'react'\r\nimport { listProducts } from '../controllers/productControllers'\r\nimport { Button, CircularProgress, Container, Grid } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core'\r\nimport { Alert } from '@material-ui/lab'\r\nimport { Link } from 'react-router-dom'\r\nimport { listCategories } from '../controllers/categoryControllers'\r\nimport logo from '../public/logo.png'\r\nimport HomeCard from '../components/HomeCard'\r\nimport ContactUs from '../components/ContactUs'\r\nimport { Link as ScrollLink } from 'react-scroll'\r\nimport ShopIcon from '@material-ui/icons/Shop'\r\n\r\nconst useStyles = makeStyles({\r\n  flexContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    padding: 0,\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n    margin: '15px 0',\r\n  },\r\n  link: {\r\n    textDecoration: 'none',\r\n  },\r\n  button: {\r\n    color: 'white',\r\n    backgroundColor: 'black',\r\n    margin: '10px',\r\n\r\n    '&:hover': {\r\n      color: '#e3f2fd',\r\n      backgroundColor: 'black',\r\n    },\r\n  },\r\n})\r\n\r\nconst Home = () => {\r\n  const [state, setState] = useState({\r\n    newArrivals: [],\r\n    loading: '',\r\n    error: '',\r\n    categories: '',\r\n  })\r\n\r\n  const newArivalsValues = {\r\n    sort: 'createdAt',\r\n    order: -1,\r\n    limit: 3,\r\n  }\r\n\r\n  const { newArrivals, loading, error, categories } = state\r\n\r\n  const classes = useStyles()\r\n\r\n  const getProducts = async () => {\r\n    setState({ ...state, loading: true })\r\n    try {\r\n      const newProducts = await listProducts(newArivalsValues)\r\n      const categories = await listCategories()\r\n      setState({\r\n        ...state,\r\n        newArrivals: newProducts.data,\r\n        categories: categories.data,\r\n        loading: false,\r\n      })\r\n    } catch (error) {\r\n      console.log(error)\r\n      setState({ ...state, loading: false, error: error.response.data.error })\r\n    }\r\n  }\r\n\r\n  useEffect(() => getProducts(), [])\r\n\r\n  return (\r\n    <>\r\n      <Grid container direction=\"row\">\r\n        <Grid style={{ margin: '10px 0' }} item md={2} xs={12}>\r\n          <img style={{ height: '60px' }} src={logo} />\r\n        </Grid>\r\n        <Grid style={{ margin: '10px' }} item md={8} xs={12}>\r\n          <ScrollLink\r\n            offset={-80}\r\n            to=\"categories\"\r\n            spy={true}\r\n            smooth={true}\r\n            duration={1000}\r\n          >\r\n            <Button>Categories</Button>\r\n          </ScrollLink>\r\n\r\n          <ScrollLink\r\n            offset={-80}\r\n            to=\"contactUs\"\r\n            spy={true}\r\n            smooth={true}\r\n            duration={1000}\r\n          >\r\n            <Button>Contact us</Button>\r\n          </ScrollLink>\r\n          <ScrollLink\r\n            offset={-80}\r\n            to=\"about\"\r\n            spy={true}\r\n            smooth={true}\r\n            duration={1000}\r\n          >\r\n            <Button>About</Button>\r\n          </ScrollLink>\r\n\r\n          <Link className={classes.link} to=\"/shop\">\r\n            <Button\r\n              startIcon={<ShopIcon />}\r\n              size=\"small\"\r\n              className={classes.button}\r\n              variant=\"contained\"\r\n            >\r\n              Go To Shop\r\n            </Button>\r\n          </Link>\r\n        </Grid>\r\n      </Grid>\r\n      <Container maxWidth=\"md\" style={{ marginBottom: '100px' }}>\r\n        {error && (\r\n          <Alert\r\n            style={{ margin: '15px 0' }}\r\n            severity=\"error\"\r\n            onClose={() => {\r\n              setState({ ...state, error: false })\r\n            }}\r\n          >\r\n            {error}\r\n          </Alert>\r\n        )}\r\n        <h1\r\n          style={{\r\n            textAlign: 'center',\r\n            color: 'black',\r\n            fontSize: '30px',\r\n            backgroundColor: '#fafafa',\r\n          }}\r\n        >\r\n          New Arrivals\r\n        </h1>\r\n        {loading ? (\r\n          <div style={{ textAlign: 'center', margin: '15px 0' }}>\r\n            <CircularProgress />\r\n          </div>\r\n        ) : (\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              flexWrap: 'wrap',\r\n              justifyContent: 'center',\r\n            }}\r\n          >\r\n            {newArrivals &&\r\n              newArrivals.map((item, i) => <HomeCard key={i} item={item} />)}\r\n          </div>\r\n        )}\r\n\r\n        <h1\r\n          id=\"categories\"\r\n          style={{\r\n            textAlign: 'center',\r\n            color: 'black',\r\n            fontSize: '30px',\r\n            backgroundColor: '#fafafa',\r\n          }}\r\n        >\r\n          Categories\r\n        </h1>\r\n\r\n        <div style={{ margin: '50px 0' }} className={classes.flexContainer}>\r\n          {loading ? (\r\n            <CircularProgress />\r\n          ) : (\r\n            categories &&\r\n            categories.map((c, i) => (\r\n              <Link\r\n                style={{ margin: '10px' }}\r\n                key={i}\r\n                className={classes.link}\r\n                to={`/category/${c.slug}`}\r\n              >\r\n                <Button\r\n                  style={{\r\n                    color: 'GrayText',\r\n                    fontSize: '18px',\r\n                  }}\r\n                >\r\n                  {c.name}\r\n                </Button>\r\n              </Link>\r\n            ))\r\n          )}\r\n        </div>\r\n\r\n        <h2\r\n          id=\"contactUs\"\r\n          style={{\r\n            textAlign: 'center',\r\n            color: 'black',\r\n            fontSize: '30px',\r\n            backgroundColor: '#fafafa',\r\n          }}\r\n        >\r\n          Contact Us\r\n        </h2>\r\n        <div>\r\n          <ContactUs />\r\n        </div>\r\n\r\n        <h2\r\n          id=\"about\"\r\n          style={{\r\n            textAlign: 'center',\r\n            color: 'black',\r\n            fontSize: '30px',\r\n            backgroundColor: '#fafafa',\r\n            marginBottom: '200px',\r\n          }}\r\n        >\r\n          About and Policy rules\r\n        </h2>\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\Pages\\Cart.js",["214"],"import React, { useState } from 'react'\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart'\r\nimport { useSelector } from 'react-redux'\r\nimport {\r\n  Button,\r\n  CircularProgress,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormLabel,\r\n  Grid,\r\n  Radio,\r\n  RadioGroup,\r\n} from '@material-ui/core'\r\nimport { Link } from 'react-router-dom'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\nimport CartTable from '../components/CartTable'\r\nimport { makeStyles } from '@material-ui/core'\r\nimport { userCart } from '../controllers/userControllers'\r\n\r\nconst useStyles = makeStyles({\r\n  checkoutButton: {\r\n    color: 'white',\r\n    backgroundColor: '#43a047',\r\n    '&:hover': {\r\n      backgroundColor: '#388e3c',\r\n    },\r\n  },\r\n  link: {\r\n    textDecoration: 'none',\r\n  },\r\n})\r\n\r\nconst Cart = ({ history }) => {\r\n  const classes = useStyles()\r\n  const cart = useSelector((state) => state.cart)\r\n  const user = useSelector((state) => state.user)\r\n\r\n  const [state, setState] = useState({\r\n    delivery: '',\r\n    error: '',\r\n    paymentMethod: '',\r\n    loading: '',\r\n  })\r\n\r\n  const { delivery, paymentMethod, error, loading } = state\r\n\r\n  const getProductsTotal = () => {\r\n    return (\r\n      cart &&\r\n      cart.reduce((currentValue, nextValue) => {\r\n        return Number(currentValue + nextValue.price * nextValue.count)\r\n      }, 0)\r\n    )\r\n  }\r\n\r\n  const processToCheckout = async () => {\r\n    setState({ ...state, loading: true })\r\n    try {\r\n      const res = await userCart({ cart, delivery, paymentMethod }, user.token)\r\n      setState({ ...state, loading: false })\r\n      if (res.data.ok) {\r\n        return history.push('/checkout')\r\n      }\r\n    } catch (error) {\r\n      setState({ ...state, loading: false, error: error.response.data.error })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n        }}\r\n      >\r\n        <h1 style={{ display: 'inline' }}>Your Cart </h1>\r\n        <ShoppingCartIcon style={{ marginLeft: '15px', fontSize: '35px' }} />\r\n      </div>\r\n      <Grid container style={{ margin: '40px 0' }}>\r\n        <Grid item xs={12} md={8}>\r\n          {cart && cart.length < 1 ? (\r\n            <div style={{ margin: '20px' }}>\r\n              <h3 style={{ display: 'inline' }}>Your cart is empty.</h3>\r\n              <Tooltip placement=\"top-end\" title=\"Go back to Shop\">\r\n                <Link\r\n                  style={{\r\n                    color: 'blue',\r\n                    marginLeft: '10px',\r\n                    textDecoration: 'none',\r\n                  }}\r\n                  to={'/shop'}\r\n                >\r\n                  Continue shopping\r\n                </Link>\r\n              </Tooltip>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              <div>\r\n                <h3>Your Cart has {cart.length} Items.</h3>\r\n                <CartTable cart={cart} />\r\n              </div>\r\n              <div>\r\n                <h3>Delivery</h3>\r\n                <FormControl component=\"fieldset\">\r\n                  <FormLabel component=\"legend\">\r\n                    Choose Delivery Method\r\n                  </FormLabel>\r\n                  <RadioGroup\r\n                    aria-label=\"delivery\"\r\n                    value={delivery}\r\n                    onChange={(e) =>\r\n                      setState({ ...state, delivery: e.target.value })\r\n                    }\r\n                  >\r\n                    <FormControlLabel\r\n                      value=\"16\"\r\n                      control={<Radio />}\r\n                      label=\"Regular, registered with tracking number: ₪ 16\"\r\n                    />\r\n                    <FormControlLabel\r\n                      value=\"26\"\r\n                      control={<Radio />}\r\n                      label=\"Boxit: ₪ 26\"\r\n                    />\r\n                    <FormControlLabel\r\n                      value=\"59\"\r\n                      control={<Radio />}\r\n                      label=\"Express delivery (Two days delivery to your house, after the package is sent): ₪ 59\"\r\n                    />\r\n                    <FormControlLabel\r\n                      value=\"0\"\r\n                      control={<Radio />}\r\n                      label=\"Self Pickup (Tel-Aviv Israel)\"\r\n                    />\r\n                  </RadioGroup>\r\n                </FormControl>\r\n              </div>\r\n              <div>\r\n                <h3>Payment </h3>\r\n                <FormControl component=\"fieldset\">\r\n                  <FormLabel component=\"legend\">\r\n                    Choose Payment Method\r\n                  </FormLabel>\r\n                  <RadioGroup\r\n                    aria-label=\"delivery\"\r\n                    value={paymentMethod}\r\n                    onChange={(e) =>\r\n                      setState({ ...state, paymentMethod: e.target.value })\r\n                    }\r\n                  >\r\n                    <FormControlLabel\r\n                      value=\"0\"\r\n                      control={<Radio />}\r\n                      label=\"Direct bank transfer\"\r\n                    />\r\n                    <FormControlLabel\r\n                      value=\"1\"\r\n                      control={<Radio />}\r\n                      label=\"Pay by phone (credit card, bit or any other)\"\r\n                    />\r\n                    <FormControlLabel\r\n                      value=\"2\"\r\n                      control={<Radio />}\r\n                      label=\"PayPal (+5% to total price)\"\r\n                    />\r\n                  </RadioGroup>\r\n                </FormControl>\r\n              </div>\r\n            </>\r\n          )}\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={4}>\r\n          <h2>Cart Summary:</h2>\r\n          <hr></hr>\r\n          <h3>Products</h3>\r\n          <div>\r\n            {cart &&\r\n              cart.map((p, i) => (\r\n                <div key={i}>\r\n                  <p>\r\n                    {p.name} x {p.count} = ₪{p.price * p.count}\r\n                  </p>\r\n                </div>\r\n              ))}\r\n          </div>\r\n          <hr></hr>\r\n          <div>\r\n            <h3>Delivery price</h3>\r\n            <p style={{ fontSize: '18px' }}>\r\n              ₪{delivery && cart.length > 0 && delivery}\r\n            </p>\r\n          </div>\r\n          <hr></hr>\r\n          <div>\r\n            <h3>Payment fee</h3>\r\n            <p style={{ fontSize: '18px' }}>\r\n              {paymentMethod === '2'\r\n                ? 'Payment with PayPal +5%'\r\n                : 'No payment fee.'}\r\n            </p>\r\n          </div>\r\n          <hr></hr>\r\n          <h3>\r\n            Total price:{' '}\r\n            <span style={{ marginLeft: '10px', fontSize: '1.5rem' }}>\r\n              ₪\r\n              {paymentMethod === '2' &&\r\n                cart.length > 0 &&\r\n                delivery &&\r\n                Math.round((getProductsTotal() + Number(delivery)) * 1.05)}\r\n              {paymentMethod !== '2' &&\r\n                cart.length > 0 &&\r\n                delivery &&\r\n                Math.round(getProductsTotal() + Number(delivery))}\r\n            </span>\r\n          </h3>\r\n          <hr></hr>\r\n          {loading && (\r\n            <div style={{ textAlign: 'center', margin: '15px 0' }}>\r\n              <CircularProgress />\r\n            </div>\r\n          )}\r\n          {!user && (\r\n            <p style={{ color: 'GrayText' }}>\r\n              Please{' '}\r\n              <Link to=\"/login\" className={classes.link}>\r\n                log-In\r\n              </Link>{' '}\r\n              in order to continue to checkout.\r\n            </p>\r\n          )}\r\n          {user && (\r\n            <Button\r\n              disabled={cart.length < 1 || !delivery || !paymentMethod}\r\n              fullWidth\r\n              variant=\"contained\"\r\n              className={classes.checkoutButton}\r\n              onClick={processToCheckout}\r\n            >\r\n              Proccess to Checkout\r\n            </Button>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Cart\r\n","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\Pages\\authPages\\RegisterComplete.js",["215"],"import React, { useState, useEffect } from 'react'\r\nimport { auth } from '../../firebase'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { REGISTER_USER } from '../../types/userTypes'\r\nimport { createUser } from '../../controllers/authControllers'\r\nimport {\r\n  Container,\r\n  makeStyles,\r\n  Button,\r\n  TextField,\r\n  CircularProgress,\r\n} from '@material-ui/core'\r\nimport { Alert } from '@material-ui/lab'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  inputField: {\r\n    '& label.Mui-focused': {\r\n      color: '#311b92',\r\n    },\r\n    '& .MuiInput-underline:after': {\r\n      borderBottomColor: '#311b92',\r\n    },\r\n    marginBottom: '20px',\r\n  },\r\n  button: {\r\n    marginBottom: '20px',\r\n  },\r\n}))\r\n\r\nconst RegisterComplete = ({ history }) => {\r\n  const user = useSelector((state) => state.user)\r\n  const dispatch = useDispatch()\r\n\r\n  const classes = useStyles()\r\n\r\n  const [values, setValues] = useState({\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n    loading: '',\r\n    error: '',\r\n  })\r\n\r\n  const { email, password, confirmPassword, loading, error } = values\r\n\r\n  if (user) {\r\n    localStorage.setItem(\r\n      'userInfo',\r\n      JSON.stringify({\r\n        email: user.email,\r\n        token: user.token,\r\n        role: user.role,\r\n        id: user.id,\r\n      })\r\n    )\r\n\r\n    history.push('/user/profile')\r\n  }\r\n\r\n  useEffect(() => {\r\n    setValues({\r\n      ...values,\r\n      email: window.localStorage.getItem('emailForRegistration'),\r\n    })\r\n  }, [])\r\n\r\n  const handleChange = (e) => {\r\n    setValues({ ...values, [e.target.name]: e.target.value })\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    setValues({ ...values, loading: true })\r\n\r\n    if (password !== confirmPassword) {\r\n      return setValues({\r\n        ...values,\r\n        loading: false,\r\n        error: 'The passwords do not match, please try again.',\r\n      })\r\n    }\r\n\r\n    if (password.length < 8) {\r\n      return setValues({\r\n        ...values,\r\n        loading: false,\r\n        error: 'Password has to be at least 8 characters long.',\r\n      })\r\n    }\r\n\r\n    try {\r\n      const result = await auth.signInWithEmailLink(email, window.location.href)\r\n\r\n      if (result.user.emailVerified) {\r\n        //remove email from local storage\r\n        window.localStorage.removeItem('emailForRegistration')\r\n        //get user id token\r\n        let user = auth.currentUser\r\n        await user.updatePassword(password)\r\n        const idTokenResult = await user.getIdTokenResult()\r\n\r\n        //redux store\r\n        createUser(idTokenResult.token)\r\n          .then((res) =>\r\n            dispatch({\r\n              type: REGISTER_USER,\r\n              payload: {\r\n                email: res.data.email,\r\n                token: idTokenResult.token,\r\n                role: res.data.role,\r\n                id: res.data._id,\r\n              },\r\n            })\r\n          )\r\n          .catch((error) =>\r\n            setValues({\r\n              ...values,\r\n              loading: false,\r\n              error: error.response.data.error,\r\n            })\r\n          )\r\n      }\r\n    } catch (error) {\r\n      setValues({ ...values, loading: false, error: error.message })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container\r\n      maxWidth={'sm'}\r\n      style={{ textAlign: 'center', paddingTop: '20px' }}\r\n    >\r\n      <h1>Complete Registration</h1>\r\n\r\n      {loading && <CircularProgress color=\"black\" />}\r\n      {error && (\r\n        <Alert\r\n          style={{ margin: '15px 0' }}\r\n          severity=\"error\"\r\n          onClose={() => {\r\n            setValues({ ...values, error: false })\r\n          }}\r\n        >\r\n          {error}\r\n        </Alert>\r\n      )}\r\n\r\n      <form onSubmit={handleSubmit} autoComplete=\"off\">\r\n        <TextField\r\n          onChange={handleChange}\r\n          className={classes.inputField}\r\n          value={email}\r\n          name=\"email\"\r\n          label=\"Email\"\r\n          fullWidth\r\n          type=\"email\"\r\n          helperText=\"Enter your email\"\r\n          disabled\r\n          required\r\n        />\r\n\r\n        <TextField\r\n          onChange={handleChange}\r\n          className={classes.inputField}\r\n          value={password}\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          fullWidth\r\n          type=\"password\"\r\n          helperText=\"Enter your password\"\r\n          required\r\n        />\r\n\r\n        <TextField\r\n          onChange={handleChange}\r\n          className={classes.inputField}\r\n          value={confirmPassword}\r\n          name=\"confirmPassword\"\r\n          label=\"Confirm passwrod\"\r\n          fullWidth\r\n          type=\"password\"\r\n          helperText=\"Enter your password again\"\r\n          required\r\n        />\r\n\r\n        <Button\r\n          style={{ backgroundColor: '#7e57c2', color: 'white' }}\r\n          className={classes.button}\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n        >\r\n          Complete Registration\r\n        </Button>\r\n      </form>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default RegisterComplete\r\n","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\Pages\\authPages\\Login.js",[],"C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\components\\routes\\AdminRoute.js",[],"C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\Pages\\authPages\\Register.js",["216"],"import { Container, makeStyles, Button, TextField } from '@material-ui/core'\r\nimport React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SendIcon from '@material-ui/icons/Send'\r\nimport { auth } from '../../firebase'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport { Alert } from '@material-ui/lab'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  inputField: {\r\n    '& label.Mui-focused': {\r\n      color: '#7e57c2',\r\n    },\r\n    '& .MuiInput-underline:after': {\r\n      borderBottomColor: '#7e57c2',\r\n    },\r\n    marginBottom: '20px',\r\n    padding: '5px',\r\n  },\r\n  button: {\r\n    marginBottom: '20px',\r\n  },\r\n}))\r\n\r\nconst Register = ({ history }) => {\r\n  const { REACT_APP_CLIENT_URL } = process.env\r\n  const classes = useStyles()\r\n\r\n  const user = useSelector((state) => state.user)\r\n\r\n  const [state, setState] = useState({\r\n    email: '',\r\n    loading: '',\r\n    error: '',\r\n    success: '',\r\n  })\r\n\r\n  if (user && user.role === 'admin') {\r\n    history.push('/admin/dashboard')\r\n  } else if (user && user.role !== 'admin') {\r\n    // check if intended\r\n    let intended = history.location.state\r\n    if (intended) {\r\n      history.push(intended.from)\r\n    } else {\r\n      history.push('/user/profile')\r\n    }\r\n  }\r\n\r\n  const { email, error, loading, success } = state\r\n\r\n  const handleChange = (e) => {\r\n    setState({ ...state, [e.target.name]: e.target.value })\r\n  }\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault()\r\n    setState({ ...state, loading: true })\r\n    try {\r\n      const config = {\r\n        url: `${REACT_APP_CLIENT_URL}/register/complete`,\r\n        handleCodeInApp: true,\r\n      }\r\n\r\n      await auth.sendSignInLinkToEmail(email, config)\r\n\r\n      //save user email in local storage\r\n      window.localStorage.setItem('emailForRegistration', email)\r\n      setState({\r\n        ...state,\r\n        email: '',\r\n        loading: false,\r\n        success: `Email was succefully sent to ${email}, check your mailbox to finish the registration.`,\r\n      })\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container\r\n      maxWidth={'sm'}\r\n      style={{ textAlign: 'center', paddingTop: '20px' }}\r\n    >\r\n      <h1>Register</h1>\r\n      <p style={{ color: 'gray' }}>\r\n        Please enter a valid email, confirmation link will be sent to your\r\n        mailbox in order to complete your registration.\r\n      </p>\r\n      {loading && <CircularProgress color='black' />}\r\n      {success && (\r\n        <Alert\r\n          style={{ margin: '15px 0' }}\r\n          onClose={() => {\r\n            setState({ ...state, success: false })\r\n          }}\r\n        >\r\n          {success}\r\n        </Alert>\r\n      )}\r\n\r\n      <form onSubmit={submitHandler} autoComplete='off'>\r\n        <TextField\r\n          onChange={handleChange}\r\n          className={classes.inputField}\r\n          value={email}\r\n          name='email'\r\n          label='Email'\r\n          fullWidth\r\n          type='email'\r\n          helperText='Enter your email'\r\n          required\r\n        />\r\n\r\n        <Button\r\n          style={{ backgroundColor: '#7e57c2', color: 'white' }}\r\n          className={classes.button}\r\n          type='submit'\r\n          fullWidth\r\n          startIcon={<SendIcon />}\r\n          variant='contained'\r\n        >\r\n          Submit Registration\r\n        </Button>\r\n      </form>\r\n      <p>\r\n        Already have an account?{' '}\r\n        <Link style={{ color: 'GrayText', marginLeft: '5px' }} to='/login'>\r\n          Login\r\n        </Link>\r\n      </p>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Register\r\n","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\Pages\\Shop.js",["217","218","219","220","221"],"import {\r\n  Button,\r\n  CircularProgress,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n} from '@material-ui/core'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { listCategories } from '../controllers/categoryControllers'\r\nimport { makeStyles } from '@material-ui/core'\r\nimport { getProducts } from '../controllers/productControllers'\r\nimport HomeCard from '../components/HomeCard'\r\nimport { Pagination, PaginationItem } from '@material-ui/lab'\r\n\r\nconst useStyles = makeStyles({\r\n  flexContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    padding: 0,\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n    margin: '15px 0',\r\n  },\r\n  link: {\r\n    textDecoration: 'none',\r\n    display: 'block',\r\n  },\r\n})\r\n\r\nconst Shop = ({ match }) => {\r\n  const classes = useStyles()\r\n\r\n  const pageNumber = match.params.pageNumber || 1\r\n\r\n  const [state, setState] = useState({\r\n    loading: '',\r\n    error: '',\r\n    categories: '',\r\n    products: [],\r\n    page: '',\r\n    pages: '',\r\n    pageSize: '',\r\n    sort: '',\r\n    order: '',\r\n    filter: {},\r\n  })\r\n\r\n  const {\r\n    loading,\r\n    error,\r\n    categories,\r\n    products,\r\n    page,\r\n    pages,\r\n    pageSize,\r\n    filter,\r\n    sort,\r\n    order,\r\n  } = state\r\n\r\n  const onLoad = async () => {\r\n    setState({ ...state, loading: true })\r\n    try {\r\n      const categories = await listCategories()\r\n      const res = await getProducts(pageNumber, 8, sort, order)\r\n      setState({\r\n        ...state,\r\n        loading: false,\r\n        categories: categories.data,\r\n        products: res.data.products,\r\n        page: res.data.page,\r\n        pages: res.data.pages,\r\n        pageSize: res.data.pageSize,\r\n      })\r\n    } catch (error) {\r\n      console.log(error)\r\n      setState({ ...state, loading: false, error: error.response.data.error })\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    onLoad()\r\n  }, [pageNumber, sort, order])\r\n\r\n  const handleFilterChange = (e) => {\r\n    setState({\r\n      ...state,\r\n      sort: e.target.value.sort,\r\n      order: e.target.value.order,\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1 style={{ textAlign: 'center' }}>Shop</h1>\r\n      <h2\r\n        style={{\r\n          textAlign: 'center',\r\n          color: 'black',\r\n          backgroundColor: '#fafafa',\r\n        }}\r\n      >\r\n        Categories and Filters\r\n      </h2>\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          flexWrap: 'wrap',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n        }}\r\n      >\r\n        <h4 style={{ display: 'inline', margin: '8px 15px 0 15px' }}>\r\n          {' '}\r\n          Filter products:\r\n        </h4>\r\n        <FormControl style={{ margin: ' 0 15px', width: '300px' }}>\r\n          <InputLabel id=\"filters\">Choose filter</InputLabel>\r\n          <Select\r\n            labelId=\"filters\"\r\n            id=\"filters\"\r\n            onChange={handleFilterChange}\r\n            defaultValue=\"\"\r\n          >\r\n            <MenuItem value={{ sort: 'createdAt', order: -1 }}>\r\n              Default: From newest to oldest\r\n            </MenuItem>\r\n            <MenuItem value={{ sort: 'price', order: -1 }}>\r\n              Price: from highest to lowest\r\n            </MenuItem>\r\n            <MenuItem value={{ sort: 'price', order: 1 }}>\r\n              Price: from lowest to highest\r\n            </MenuItem>\r\n\r\n            {/* <MenuItem value={{ sort: 'sold', order: '-1' }}>\r\n              Most popular products\r\n            </MenuItem> */}\r\n            <MenuItem value={{ sort: 'sold', order: -1 }}>\r\n              Best sellers\r\n            </MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </div>\r\n      <div style={{ margin: '20px 0' }} className={classes.flexContainer}>\r\n        {loading ? (\r\n          <CircularProgress />\r\n        ) : (\r\n          categories &&\r\n          categories.map((c, i) => (\r\n            <Link\r\n              style={{ margin: '10px' }}\r\n              key={i}\r\n              className={classes.link}\r\n              to={`/category/${c.slug}`}\r\n            >\r\n              <Button\r\n                style={{\r\n                  color: 'GrayText',\r\n                  fontSize: '18px',\r\n                }}\r\n              >\r\n                {c.name}\r\n              </Button>\r\n            </Link>\r\n          ))\r\n        )}\r\n      </div>\r\n\r\n      <h2\r\n        style={{\r\n          textAlign: 'center',\r\n          color: 'black',\r\n          backgroundColor: '#fafafa',\r\n        }}\r\n      >\r\n        Products\r\n      </h2>\r\n      <div\r\n        style={{ display: 'flex', flexWrap: 'wrap', justifyContent: 'center' }}\r\n      >\r\n        {loading ? (\r\n          <CircularProgress />\r\n        ) : (\r\n          products.map((p, i) => <HomeCard key={i} item={p} />)\r\n        )}\r\n      </div>\r\n      <div\r\n        style={{\r\n          marginBottom: '50px',\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n        }}\r\n      >\r\n        {pages && (\r\n          <Pagination\r\n            hidePrevButton\r\n            hideNextButton\r\n            showFirstButton\r\n            showLastButton\r\n            color=\"primary\"\r\n            count={pages}\r\n            renderItem={(item) => (\r\n              <PaginationItem\r\n                component={Link}\r\n                page={pageNumber}\r\n                to={`/shop/${item.page}`}\r\n                {...item}\r\n              />\r\n            )}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Shop\r\n","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\Pages\\adminPages\\AdminDashboard.js",["222","223","224"],"import {\r\n  Button,\r\n  CircularProgress,\r\n  Hidden,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n} from '@material-ui/core'\r\nimport { Alert, Pagination, PaginationItem } from '@material-ui/lab'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport AdminNav from '../../components/admin/AdminNav'\r\nimport AdminSideNav from '../../components/admin/AdminSideNav'\r\nimport { getOrders } from '../../controllers/adminControllers'\r\nimport ClearIcon from '@material-ui/icons/Clear'\r\nimport CheckIcon from '@material-ui/icons/Check'\r\nimport { makeStyles } from '@material-ui/core'\r\nimport moment from 'moment'\r\n\r\nconst useStyles = makeStyles({\r\n  link: {\r\n    textDecoration: 'none',\r\n  },\r\n})\r\n\r\nconst AdminDashboard = ({ match }) => {\r\n  const classes = useStyles()\r\n  const user = useSelector((state) => state.user)\r\n  const [state, setState] = useState({\r\n    orders: [],\r\n    loading: '',\r\n    error: '',\r\n    page: '',\r\n    pages: '',\r\n    pageSize: '',\r\n  })\r\n\r\n  const pageNumber = match.params.pageNumber || 1\r\n\r\n  const { orders, loading, error, page, pages, pageSize } = state\r\n\r\n  const listOrders = async () => {\r\n    setState({ ...state, loading: true })\r\n    try {\r\n      const { data } = await getOrders(user.token, pageNumber)\r\n      setState({\r\n        ...state,\r\n        loading: false,\r\n        orders: data.orders,\r\n        pages: data.pages,\r\n        page: data.page,\r\n        pageSize: data.pageSize,\r\n      })\r\n    } catch (error) {\r\n      console.log(error)\r\n      setState({ ...state, loading: false, error: error.message })\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    listOrders()\r\n  }, [pageNumber])\r\n\r\n  return (\r\n    <div>\r\n      <h1 style={{ textAlign: 'center', margin: '30px 0' }}>Admin Dashboard</h1>\r\n\r\n      <Hidden smDown>\r\n        <AdminNav />\r\n      </Hidden>\r\n\r\n      <Hidden mdUp>\r\n        <AdminSideNav />\r\n      </Hidden>\r\n\r\n      <h2 style={{ textAlign: 'center', margin: '30px 0' }}>Orders</h2>\r\n      <div>\r\n        {loading && (\r\n          <div style={{ textAlign: 'center', margin: '15px 0' }}>\r\n            <CircularProgress />\r\n          </div>\r\n        )}\r\n\r\n        {error && (\r\n          <Alert\r\n            style={{ margin: '15px 0' }}\r\n            severity=\"error\"\r\n            onClose={() => {\r\n              setState({ ...state, error: false })\r\n            }}\r\n          >\r\n            {error}\r\n          </Alert>\r\n        )}\r\n\r\n        <div>\r\n          <TableContainer component={Paper}>\r\n            <Table aria-label=\"customized table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align=\"left\">Created At</TableCell>\r\n                  <TableCell align=\"left\">Order Status</TableCell>\r\n                  <TableCell align=\"left\">Is Paid</TableCell>\r\n                  <TableCell align=\"left\">User Email</TableCell>\r\n                  <TableCell align=\"left\">Payment Method</TableCell>\r\n                  <TableCell align=\"left\">Track Number</TableCell>\r\n                  <TableCell align=\"left\">Total Price</TableCell>\r\n                  <TableCell align=\"left\"></TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {orders && orders.length > 0\r\n                  ? orders.map((o, i) => (\r\n                      <TableRow key={i}>\r\n                        <TableCell>\r\n                          {moment(o.createdAt).format('MMMM Do YYYY')}\r\n                        </TableCell>\r\n                        <TableCell>{o.orderStatus}</TableCell>\r\n                        <TableCell>\r\n                          {o.isPaid === true ? (\r\n                            <CheckIcon style={{ color: 'green' }} />\r\n                          ) : (\r\n                            <ClearIcon style={{ color: 'red' }} />\r\n                          )}\r\n                        </TableCell>\r\n                        <TableCell>{o.personalInfo.email}</TableCell>\r\n                        <TableCell>\r\n                          {o.paymentInfo.paymentMethod === '0'\r\n                            ? 'Bank Transfer'\r\n                            : o.paymentInfo.paymentMethod === '1'\r\n                            ? 'Phone payment'\r\n                            : 'PayPal'}\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          {o.trackNumber ? (\r\n                            o.trackNumber\r\n                          ) : (\r\n                            <ClearIcon style={{ color: 'red' }} />\r\n                          )}\r\n                        </TableCell>\r\n                        <TableCell>₪{o.paymentInfo.amount}</TableCell>\r\n                        <TableCell>\r\n                          <Link\r\n                            className={classes.link}\r\n                            to={`/admin/order/${o._id}`}\r\n                          >\r\n                            <Button variant=\"outlined\" color=\"secondary\">\r\n                              View and Edit\r\n                            </Button>\r\n                          </Link>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))\r\n                  : null}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </div>\r\n\r\n        <div\r\n          style={{\r\n            margin: '15px 0 50px 0',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n          }}\r\n        >\r\n          {pages && (\r\n            <Pagination\r\n              hidePrevButton\r\n              hideNextButton\r\n              showFirstButton\r\n              showLastButton\r\n              color=\"primary\"\r\n              count={pages}\r\n              renderItem={(item) => (\r\n                <PaginationItem\r\n                  component={Link}\r\n                  page={pageNumber}\r\n                  to={`/admin/dashboard/${item.page}`}\r\n                  {...item}\r\n                />\r\n              )}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AdminDashboard\r\n","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\Pages\\adminPages\\CreateProduct.js",["225","226"],"import {\r\n  Badge,\r\n  Button,\r\n  CircularProgress,\r\n  FormControl,\r\n  Hidden,\r\n  InputLabel,\r\n  MenuItem,\r\n  Paper,\r\n  Select,\r\n  TextField,\r\n} from '@material-ui/core'\r\nimport React, { useState, useEffect } from 'react'\r\nimport AdminNav from '../../components/admin/AdminNav'\r\nimport AdminSideNav from '../../components/admin/AdminSideNav'\r\nimport { listCategories } from '../../controllers/categoryControllers'\r\nimport { useSelector } from 'react-redux'\r\nimport { productCreate } from '../../controllers/productControllers'\r\nimport { storage } from '../../firebase'\r\nimport { Alert } from '@material-ui/lab'\r\nimport Resizer from 'react-image-file-resizer'\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload'\r\nimport CreateIcon from '@material-ui/icons/Create'\r\n\r\nconst CreateProduct = () => {\r\n  const user = useSelector((state) => state.user)\r\n\r\n  const [state, setState] = useState({\r\n    loading: '',\r\n    uploadLoading: '',\r\n    error: '',\r\n    uploadError: '',\r\n    success: '',\r\n    categories: '',\r\n    loadCategories: '',\r\n    name: '',\r\n    category: '',\r\n    image: [],\r\n    description: '',\r\n    price: '',\r\n    quantity: '',\r\n  })\r\n\r\n  const [imgUrl, setImgUrl] = useState([])\r\n\r\n  const {\r\n    loading,\r\n    uploadLoading,\r\n    error,\r\n    uploadError,\r\n    success,\r\n    categories,\r\n    loadCategories,\r\n    name,\r\n    category,\r\n    image,\r\n    description,\r\n    price,\r\n    quantity,\r\n  } = state\r\n\r\n  const getCategories = async () => {\r\n    setState({ ...state, loadCategories: true })\r\n    try {\r\n      const { data } = await listCategories()\r\n      setState({ ...state, loadCategories: false, categories: data })\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  useEffect(() => getCategories(), [])\r\n\r\n  const handleCategoryChange = (e) => {\r\n    setState({ ...state, category: e.target.value })\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    setState({ ...state, [e.target.name]: e.target.value })\r\n  }\r\n\r\n  const handleImageChange = async (e) => {\r\n    setState({ ...state, image: e.target.files })\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    setState({ ...state, loading: true })\r\n    try {\r\n      await productCreate(user.token, {\r\n        name,\r\n        description,\r\n        category,\r\n        price,\r\n        quantity,\r\n        images: imgUrl,\r\n      })\r\n      setState({\r\n        ...state,\r\n        name: '',\r\n        category: '',\r\n        image: [],\r\n        description: '',\r\n        price: '',\r\n        quantity: '',\r\n        loading: false,\r\n        error: false,\r\n        success: 'Product created succefully',\r\n      })\r\n      setImgUrl([])\r\n    } catch (error) {\r\n      setState({\r\n        ...state,\r\n        error: error.response.data.error,\r\n        loading: false,\r\n        success: false,\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleUpload = async () => {\r\n    setState({ ...state, uploadLoading: true })\r\n\r\n    if (image.length === 0) {\r\n      return setState({\r\n        ...state,\r\n        uploadLoading: false,\r\n        uploadError: 'Please choose at least one image to upload.',\r\n      })\r\n    }\r\n    for (let i = 0, len = image.length; i < len; i++) {\r\n      const resizeFile = (file) =>\r\n        new Promise((resolve) => {\r\n          Resizer.imageFileResizer(\r\n            file,\r\n            600,\r\n            600,\r\n            'JPEG',\r\n            100,\r\n            0,\r\n            (uri) => {\r\n              resolve(uri)\r\n            },\r\n            'base64'\r\n          )\r\n        })\r\n\r\n      const file = image[i]\r\n      const newFile = await resizeFile(file)\r\n      let imgString = newFile.split('base64,')[1]\r\n      let id = uuidv4()\r\n\r\n      const uploadTask = storage\r\n        .ref(`images/${id}`)\r\n        .putString(imgString, 'base64', { contentType: 'image/jpeg' })\r\n\r\n      uploadTask.on(\r\n        'state_changed',\r\n        (snapshot) => {},\r\n        (error) => {\r\n          console.log(error)\r\n          return setState({\r\n            ...state,\r\n            uploadLoading: false,\r\n            uploadError: 'could not upload the images.',\r\n          })\r\n        },\r\n        () => {\r\n          storage\r\n            .ref('images')\r\n            .child(id)\r\n            .getDownloadURL()\r\n            .then((url) => {\r\n              setImgUrl((imgUrl) => [...imgUrl, url])\r\n              setState({ ...state, uploadLoading: false })\r\n            })\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1 style={{ textAlign: 'center', margin: '30px 0' }}>Admin Dashboard</h1>\r\n\r\n      <Hidden smDown>\r\n        <AdminNav />\r\n      </Hidden>\r\n\r\n      <Hidden mdUp>\r\n        <AdminSideNav />\r\n      </Hidden>\r\n\r\n      <h2 style={{ textAlign: 'center', margin: '30px 0' }}>Create Product</h2>\r\n      {loadCategories && (\r\n        <div style={{ textAlign: 'center', margin: '15px 0' }}>\r\n          <CircularProgress color=\"black\" />\r\n        </div>\r\n      )}\r\n      <div style={{ maxWidth: '500px', margin: 'auto' }}>\r\n        <form onSubmit={handleSubmit}>\r\n          <Paper elevation={1} style={{ padding: '15px' }}>\r\n            <TextField\r\n              onChange={handleChange}\r\n              style={{ margin: '15px 0' }}\r\n              name=\"name\"\r\n              value={name}\r\n              label=\"Name\"\r\n              fullWidth\r\n              type=\"text\"\r\n              helperText=\"Enter product name\"\r\n              required\r\n            ></TextField>\r\n\r\n            <TextField\r\n              onChange={handleChange}\r\n              style={{ margin: '15px 0' }}\r\n              name=\"description\"\r\n              value={description}\r\n              label=\"Description\"\r\n              multiline\r\n              rows={5}\r\n              fullWidth\r\n              type=\"text\"\r\n              helperText=\"Enter product description\"\r\n              required\r\n            ></TextField>\r\n\r\n            <TextField\r\n              onChange={handleChange}\r\n              style={{ margin: '15px 0' }}\r\n              name=\"price\"\r\n              value={price}\r\n              label=\"Price\"\r\n              fullWidth\r\n              type=\"number\"\r\n              helperText=\"Enter product price\"\r\n              required\r\n            ></TextField>\r\n\r\n            <TextField\r\n              onChange={handleChange}\r\n              style={{ margin: '15px 0' }}\r\n              name=\"quantity\"\r\n              value={quantity}\r\n              label=\"Quantity\"\r\n              fullWidth\r\n              type=\"number\"\r\n              helperText=\"Enter product quantity\"\r\n              required\r\n            ></TextField>\r\n\r\n            <FormControl fullWidth required style={{ margin: '15px 0' }}>\r\n              <InputLabel id=\"demo-simple-select-label\">\r\n                Select Category\r\n              </InputLabel>\r\n              <Select\r\n                onChange={handleCategoryChange}\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                value={category}\r\n              >\r\n                {categories &&\r\n                  categories.map((c) => (\r\n                    <MenuItem key={c._id} value={c._id}>\r\n                      {c.name}\r\n                    </MenuItem>\r\n                  ))}\r\n              </Select>\r\n            </FormControl>\r\n\r\n            <input\r\n              style={{\r\n                fontSize: '16px',\r\n                display: 'flex',\r\n                flexWrap: 'wrap',\r\n                marginTop: '30px',\r\n              }}\r\n              labelId=\"images\"\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              multiple\r\n              name=\"image\"\r\n              onChange={handleImageChange}\r\n            />\r\n            {uploadLoading && (\r\n              <div style={{ textAlign: 'center', margin: '15px 0' }}>\r\n                <CircularProgress color=\"black\" />\r\n              </div>\r\n            )}\r\n            {uploadError && (\r\n              <Alert\r\n                style={{ margin: '15px 0' }}\r\n                severity=\"error\"\r\n                onClose={() => {\r\n                  setState({ ...state, uploadError: false })\r\n                }}\r\n              >\r\n                {uploadError}\r\n              </Alert>\r\n            )}\r\n\r\n            <p style={{ color: 'GrayText' }}>\r\n              *Select the images you want to upload, after chosing all the\r\n              images press on upload images button to upload them to the server.\r\n            </p>\r\n            <Button\r\n              onClick={handleUpload}\r\n              startIcon={<CloudUploadIcon />}\r\n              style={{\r\n                backgroundColor: '#0d47a1',\r\n                color: 'white',\r\n                margin: '15px 0',\r\n                padding: '5px 15px',\r\n              }}\r\n            >\r\n              Upload Images\r\n            </Button>\r\n            <div>\r\n              <h4>Uploaded images preview:</h4>\r\n\r\n              {imgUrl.length === 0 ? (\r\n                <h5>No images uploaded</h5>\r\n              ) : (\r\n                <>\r\n                  <div\r\n                    style={{\r\n                      display: 'flex',\r\n                      flexDirection: 'row',\r\n                      flexWrap: 'wrap',\r\n                      justifyContent: 'center',\r\n                      width: '80%',\r\n                      margin: 'auto',\r\n                    }}\r\n                  >\r\n                    {imgUrl.map((img) => (\r\n                      <div style={{ margin: '15px' }}>\r\n                        <Badge\r\n                          onClick={() => {\r\n                            let fileRef = storage.refFromURL(img)\r\n                            fileRef\r\n                              .delete()\r\n                              .then(() => {\r\n                                // File deleted successfully\r\n                                console.log('File Deleted')\r\n                                let newArray = imgUrl.filter(\r\n                                  (image) => image !== img\r\n                                )\r\n\r\n                                setImgUrl(newArray)\r\n                              })\r\n                              .catch((error) => {\r\n                                console.log(error)\r\n                              })\r\n                          }}\r\n                          color=\"secondary\"\r\n                          badgeContent={\r\n                            <Button style={{ color: 'white' }}>Delete</Button>\r\n                          }\r\n                        >\r\n                          <img\r\n                            style={{\r\n                              maxHeight: '80px',\r\n                              width: 'auto',\r\n                            }}\r\n                            src={img}\r\n                          />\r\n                        </Badge>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </>\r\n              )}\r\n            </div>\r\n          </Paper>\r\n\r\n          {loading && (\r\n            <div style={{ textAlign: 'center', margin: '15px 0' }}>\r\n              <CircularProgress color=\"black\" />\r\n            </div>\r\n          )}\r\n          {error && (\r\n            <Alert\r\n              style={{ margin: '15px 0' }}\r\n              severity=\"error\"\r\n              onClose={() => {\r\n                setState({ ...state, error: false })\r\n              }}\r\n            >\r\n              {error}\r\n            </Alert>\r\n          )}\r\n          {success && (\r\n            <Alert\r\n              style={{ margin: '15px 0' }}\r\n              severity=\"success\"\r\n              onClose={() => {\r\n                setState({ ...state, success: false })\r\n              }}\r\n            >\r\n              {success}\r\n            </Alert>\r\n          )}\r\n\r\n          <Button\r\n            style={{\r\n              backgroundColor: 'black',\r\n              color: 'white',\r\n              margin: '40px 0 80px 0',\r\n            }}\r\n            fullWidth\r\n            startIcon={<CreateIcon />}\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n          >\r\n            Create Product\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CreateProduct\r\n","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\components\\routes\\PrivateRoute.js",[],"C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\Pages\\adminPages\\AdminCategories.js",["227"],"import {\r\n  Button,\r\n  CircularProgress,\r\n  Hidden,\r\n  List,\r\n  ListItem,\r\n  ListItemSecondaryAction,\r\n  ListItemText,\r\n  TextField,\r\n} from '@material-ui/core'\r\nimport React, { useState, useEffect } from 'react'\r\nimport AdminNav from '../../components/admin/AdminNav'\r\nimport AdminSideNav from '../../components/admin/AdminSideNav'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport {\r\n  createCategory,\r\n  listCategories,\r\n  deleteCategory,\r\n} from '../../controllers/categoryControllers'\r\nimport { useSelector } from 'react-redux'\r\nimport { Alert } from '@material-ui/lab'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport Divider from '@material-ui/core/Divider'\r\n\r\nconst AdminCategories = () => {\r\n  const user = useSelector((state) => state.user)\r\n\r\n  const [state, setState] = useState({\r\n    name: '',\r\n    loading: '',\r\n    loadCategories: '',\r\n    error: '',\r\n    success: '',\r\n    deleteSuccess: '',\r\n    deleteError: '',\r\n    categories: '',\r\n  })\r\n\r\n  const {\r\n    name,\r\n    loading,\r\n    error,\r\n    success,\r\n    loadCategories,\r\n    categories,\r\n    deleteSuccess,\r\n    deleteError,\r\n  } = state\r\n\r\n  const getCategories = async () => {\r\n    setState({ ...state, loadCategories: true })\r\n    try {\r\n      const { data } = await listCategories()\r\n      setState({ ...state, loadCategories: false, categories: data })\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  useEffect(() => getCategories(), [])\r\n\r\n  const handleChange = (e) => {\r\n    setState({ ...state, [e.target.name]: e.target.value })\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    setState({ ...state, loading: true })\r\n    try {\r\n      await createCategory(user.token, name)\r\n\r\n      const { data } = await listCategories()\r\n      setState({\r\n        ...state,\r\n        loadCategories: false,\r\n        categories: data,\r\n        success: 'Category Created succefully',\r\n        name: '',\r\n        loading: false,\r\n        error: false,\r\n      })\r\n    } catch (error) {\r\n      setState({\r\n        ...state,\r\n        loading: false,\r\n        error: error.response.data.error,\r\n        success: false,\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleDelete = async (token, slug) => {\r\n    setState({ ...state, loadCategories: true })\r\n    try {\r\n      await deleteCategory(token, slug)\r\n      const { data } = await listCategories()\r\n      setState({\r\n        ...state,\r\n        loadCategories: false,\r\n        categories: data,\r\n        deleteError: false,\r\n        deleteSuccess: 'Category Deleted succefully',\r\n      })\r\n    } catch (error) {\r\n      console.log(error)\r\n      setState({\r\n        ...state,\r\n        loadCategories: false,\r\n        deleteSuccess: false,\r\n        deleteError: error.response.data.error,\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1 style={{ textAlign: 'center', margin: '30px 0' }}>Admin Dashboard</h1>\r\n\r\n      <Hidden smDown>\r\n        <AdminNav />\r\n      </Hidden>\r\n\r\n      <Hidden mdUp>\r\n        <AdminSideNav />\r\n      </Hidden>\r\n      <h2 style={{ margin: '40px 0', textAlign: 'center' }}>Categories</h2>\r\n      <Grid container>\r\n        <Grid item md={6} xs={12}>\r\n          <h3 style={{ textAlign: 'center', backgroundColor: '#fafafa' }}>\r\n            Create new category\r\n          </h3>\r\n\r\n          {loading && (\r\n            <div style={{ textAlign: 'center', margin: '15px 0' }}>\r\n              <CircularProgress color='black' />\r\n            </div>\r\n          )}\r\n          {error && (\r\n            <Alert\r\n              style={{ margin: '15px 0' }}\r\n              severity='error'\r\n              onClose={() => {\r\n                setState({ ...state, error: false })\r\n              }}\r\n            >\r\n              {error}\r\n            </Alert>\r\n          )}\r\n\r\n          {success && (\r\n            <Alert\r\n              style={{ margin: '15px 0' }}\r\n              severity='success'\r\n              onClose={() => {\r\n                setState({ ...state, success: false })\r\n              }}\r\n            >\r\n              {success}\r\n            </Alert>\r\n          )}\r\n\r\n          <form onSubmit={handleSubmit} autoComplete='off'>\r\n            <TextField\r\n              onChange={handleChange}\r\n              value={name}\r\n              name='name'\r\n              label='Category Name'\r\n              fullWidth\r\n              type='text'\r\n              helperText='Enter Category Name'\r\n              required\r\n            />\r\n\r\n            <Button\r\n              style={{\r\n                backgroundColor: '#212121',\r\n                color: 'white',\r\n                margin: '30px 0',\r\n              }}\r\n              className={''}\r\n              type='submit'\r\n              variant='contained'\r\n            >\r\n              Submit\r\n            </Button>\r\n          </form>\r\n        </Grid>\r\n        <Grid style={{ marginBottom: '50px' }} item md={6} xs={12}>\r\n          <h3 style={{ textAlign: 'center', backgroundColor: '#fafafa' }}>\r\n            Categories list\r\n          </h3>\r\n          {loadCategories && (\r\n            <div style={{ textAlign: 'center', margin: '15px 0' }}>\r\n              <CircularProgress color='black' />\r\n            </div>\r\n          )}\r\n          {deleteSuccess && (\r\n            <Alert\r\n              style={{ margin: '15px' }}\r\n              severity='success'\r\n              onClose={() => {\r\n                setState({ ...state, deleteSuccess: false })\r\n              }}\r\n            >\r\n              {deleteSuccess}\r\n            </Alert>\r\n          )}\r\n          {deleteError && (\r\n            <Alert\r\n              style={{ margin: '15px' }}\r\n              severity='error'\r\n              onClose={() => {\r\n                setState({ ...state, deleteError: false })\r\n              }}\r\n            >\r\n              {deleteError}\r\n            </Alert>\r\n          )}\r\n\r\n          <List\r\n            style={{\r\n              width: '250px',\r\n              margin: 'auto',\r\n              overflowY: 'scroll',\r\n              maxHeight: '500px',\r\n            }}\r\n          >\r\n            {categories &&\r\n              categories.map((c) => (\r\n                <React.Fragment key={c._id}>\r\n                  <ListItem style={{ margin: '5px 0' }}>\r\n                    <ListItemText primary={c.name} />\r\n                    <ListItemSecondaryAction>\r\n                      <IconButton edge='end' aria-label='delete'>\r\n                        <DeleteIcon\r\n                          onClick={() => handleDelete(user.token, c.slug)}\r\n                        />\r\n                      </IconButton>\r\n                    </ListItemSecondaryAction>\r\n                  </ListItem>\r\n                  <Divider />\r\n                </React.Fragment>\r\n              ))}\r\n          </List>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AdminCategories\r\n","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\Pages\\adminPages\\UpdateProduct.js",["228","229"],"import {\r\n  Badge,\r\n  Button,\r\n  CircularProgress,\r\n  FormControl,\r\n  Hidden,\r\n  InputLabel,\r\n  MenuItem,\r\n  Paper,\r\n  Select,\r\n  TextField,\r\n} from '@material-ui/core'\r\nimport React, { useState, useEffect } from 'react'\r\nimport AdminNav from '../../components/admin/AdminNav'\r\nimport AdminSideNav from '../../components/admin/AdminSideNav'\r\nimport { listCategories } from '../../controllers/categoryControllers'\r\nimport { useSelector } from 'react-redux'\r\nimport {\r\n  readProduct,\r\n  productUpdate,\r\n} from '../../controllers/productControllers'\r\nimport { storage } from '../../firebase'\r\nimport { Alert } from '@material-ui/lab'\r\nimport Resizer from 'react-image-file-resizer'\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload'\r\nimport CreateIcon from '@material-ui/icons/Create'\r\n\r\nconst UpdateProduct = ({ match, history }) => {\r\n  const user = useSelector((state) => state.user)\r\n\r\n  const id = match.params.id\r\n\r\n  const [state, setState] = useState({\r\n    loading: '',\r\n    uploadLoading: '',\r\n    error: '',\r\n    uploadError: '',\r\n    success: '',\r\n    categories: '',\r\n    loadCategories: '',\r\n    name: '',\r\n    category: '',\r\n    image: [],\r\n    description: '',\r\n    price: '',\r\n    quantity: '',\r\n  })\r\n\r\n  const [imgUrl, setImgUrl] = useState([])\r\n\r\n  const {\r\n    loading,\r\n    uploadLoading,\r\n    error,\r\n    uploadError,\r\n    success,\r\n    categories,\r\n    loadCategories,\r\n    name,\r\n    category,\r\n    image,\r\n    description,\r\n    price,\r\n    quantity,\r\n  } = state\r\n\r\n  const getProduct = async () => {\r\n    setState({ ...state, loading: true })\r\n    try {\r\n      const categories = await listCategories()\r\n      const { data } = await readProduct(id)\r\n      setImgUrl(data.images && data.images)\r\n      setState({\r\n        ...state,\r\n        loading: false,\r\n        name: data.name,\r\n        category: data.category && data.category._id,\r\n        description: data.description,\r\n        price: data.price,\r\n        quantity: data.quantity,\r\n        categories: categories.data,\r\n      })\r\n      // setState({})\r\n    } catch (error) {\r\n      console.log(error)\r\n      setState({ ...state, loading: false, error: error.response.data.error })\r\n    }\r\n  }\r\n\r\n  useEffect(() => getProduct(), [])\r\n\r\n  const handleCategoryChange = (e) => {\r\n    setState({ ...state, category: e.target.value })\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    setState({ ...state, [e.target.name]: e.target.value })\r\n  }\r\n\r\n  const handleImageChange = async (e) => {\r\n    setState({ ...state, image: e.target.files })\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    setState({ ...state, loading: true })\r\n    try {\r\n      await productUpdate(id, user.token, {\r\n        name,\r\n        description,\r\n        category,\r\n        price,\r\n        quantity,\r\n        images: imgUrl,\r\n      })\r\n      setState({\r\n        ...state,\r\n        name: '',\r\n        category: '',\r\n        image: [],\r\n        description: '',\r\n        price: '',\r\n        quantity: '',\r\n        loading: false,\r\n        error: false,\r\n      })\r\n      setImgUrl([])\r\n      history.push('/admin/products')\r\n    } catch (error) {\r\n      setState({\r\n        ...state,\r\n        error: error.response.data.error,\r\n        loading: false,\r\n        success: false,\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleUpload = async () => {\r\n    setState({ ...state, uploadLoading: true })\r\n\r\n    if (image.length === 0) {\r\n      return setState({\r\n        ...state,\r\n        uploadLoading: false,\r\n        uploadError: 'Please choose at least one image to upload.',\r\n      })\r\n    }\r\n    for (let i = 0, len = image.length; i < len; i++) {\r\n      const resizeFile = (file) =>\r\n        new Promise((resolve) => {\r\n          Resizer.imageFileResizer(\r\n            file,\r\n            600,\r\n            600,\r\n            'JPEG',\r\n            100,\r\n            0,\r\n            (uri) => {\r\n              resolve(uri)\r\n            },\r\n            'base64'\r\n          )\r\n        })\r\n\r\n      const file = image[i]\r\n      const newFile = await resizeFile(file)\r\n      let imgString = newFile.split('base64,')[1]\r\n      let id = uuidv4()\r\n\r\n      const uploadTask = storage\r\n        .ref(`images/${id}`)\r\n        .putString(imgString, 'base64', { contentType: 'image/jpeg' })\r\n\r\n      uploadTask.on(\r\n        'state_changed',\r\n        (snapshot) => {},\r\n        (error) => {\r\n          console.log(error)\r\n          return setState({\r\n            ...state,\r\n            uploadLoading: false,\r\n            uploadError: 'could not upload the images.',\r\n          })\r\n        },\r\n        () => {\r\n          storage\r\n            .ref('images')\r\n            .child(id)\r\n            .getDownloadURL()\r\n            .then((url) => {\r\n              setImgUrl((imgUrl) => [...imgUrl, url])\r\n              setState({ ...state, uploadLoading: false })\r\n            })\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1 style={{ textAlign: 'center', margin: '30px 0' }}>Admin Dashboard</h1>\r\n\r\n      <Hidden smDown>\r\n        <AdminNav />\r\n      </Hidden>\r\n\r\n      <Hidden mdUp>\r\n        <AdminSideNav />\r\n      </Hidden>\r\n\r\n      <h2 style={{ textAlign: 'center', margin: '30px 0' }}>Update Product</h2>\r\n      {loadCategories && (\r\n        <div style={{ textAlign: 'center', margin: '15px 0' }}>\r\n          <CircularProgress color=\"black\" />\r\n        </div>\r\n      )}\r\n      <div style={{ maxWidth: '500px', margin: 'auto' }}>\r\n        <form onSubmit={handleSubmit}>\r\n          <Paper elevation={1} style={{ padding: '15px' }}>\r\n            <TextField\r\n              onChange={handleChange}\r\n              style={{ margin: '15px 0' }}\r\n              name=\"name\"\r\n              value={name}\r\n              label=\"Name\"\r\n              fullWidth\r\n              type=\"text\"\r\n              helperText=\"Enter product name\"\r\n              required\r\n            ></TextField>\r\n\r\n            <TextField\r\n              onChange={handleChange}\r\n              style={{ margin: '15px 0' }}\r\n              name=\"description\"\r\n              value={description}\r\n              label=\"Description\"\r\n              multiline\r\n              rows={5}\r\n              fullWidth\r\n              type=\"text\"\r\n              helperText=\"Enter product description\"\r\n              required\r\n            ></TextField>\r\n\r\n            <TextField\r\n              onChange={handleChange}\r\n              style={{ margin: '15px 0' }}\r\n              name=\"price\"\r\n              value={price}\r\n              label=\"Price\"\r\n              fullWidth\r\n              type=\"number\"\r\n              helperText=\"Enter product price\"\r\n              required\r\n            ></TextField>\r\n\r\n            <TextField\r\n              onChange={handleChange}\r\n              style={{ margin: '15px 0' }}\r\n              name=\"quantity\"\r\n              value={quantity}\r\n              label=\"Quantity\"\r\n              fullWidth\r\n              type=\"number\"\r\n              helperText=\"Enter product quantity\"\r\n              required\r\n            ></TextField>\r\n\r\n            <FormControl fullWidth required style={{ margin: '15px 0' }}>\r\n              <InputLabel id=\"demo-simple-select-label\">\r\n                Select Category\r\n              </InputLabel>\r\n              <Select\r\n                onChange={handleCategoryChange}\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                value={category}\r\n              >\r\n                {categories &&\r\n                  categories.map((c) => (\r\n                    <MenuItem key={c._id} value={c._id}>\r\n                      {c.name}\r\n                    </MenuItem>\r\n                  ))}\r\n              </Select>\r\n            </FormControl>\r\n\r\n            <input\r\n              style={{\r\n                fontSize: '16px',\r\n                display: 'flex',\r\n                flexWrap: 'wrap',\r\n                marginTop: '30px',\r\n              }}\r\n              labelId=\"images\"\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              multiple\r\n              name=\"image\"\r\n              onChange={handleImageChange}\r\n            />\r\n            {uploadLoading && (\r\n              <div style={{ textAlign: 'center', margin: '15px 0' }}>\r\n                <CircularProgress color=\"black\" />\r\n              </div>\r\n            )}\r\n            {uploadError && (\r\n              <Alert\r\n                style={{ margin: '15px 0' }}\r\n                severity=\"error\"\r\n                onClose={() => {\r\n                  setState({ ...state, uploadError: false })\r\n                }}\r\n              >\r\n                {uploadError}\r\n              </Alert>\r\n            )}\r\n\r\n            <p style={{ color: 'GrayText' }}>\r\n              *Select the images you want to upload, after chosing all the\r\n              images press on upload images button to upload them to the server.\r\n            </p>\r\n            <Button\r\n              onClick={handleUpload}\r\n              startIcon={<CloudUploadIcon />}\r\n              style={{\r\n                backgroundColor: '#0d47a1',\r\n                color: 'white',\r\n                margin: '15px 0',\r\n                padding: '5px 15px',\r\n              }}\r\n            >\r\n              Upload Images\r\n            </Button>\r\n            <div>\r\n              <h4>Uploaded images preview:</h4>\r\n\r\n              {imgUrl.length === 0 ? (\r\n                <h5>No images uploaded</h5>\r\n              ) : (\r\n                <>\r\n                  <div\r\n                    style={{\r\n                      display: 'flex',\r\n                      flexDirection: 'row',\r\n                      flexWrap: 'wrap',\r\n                      justifyContent: 'center',\r\n                      width: '80%',\r\n                      margin: 'auto',\r\n                    }}\r\n                  >\r\n                    {imgUrl.map((img) => (\r\n                      <div style={{ margin: '15px' }}>\r\n                        <Badge\r\n                          onClick={() => {\r\n                            let fileRef = storage.refFromURL(img)\r\n                            fileRef\r\n                              .delete()\r\n                              .then(() => {\r\n                                // File deleted successfully\r\n                                console.log('File Deleted')\r\n                                let newArray = imgUrl.filter(\r\n                                  (image) => image !== img\r\n                                )\r\n\r\n                                setImgUrl(newArray)\r\n                              })\r\n                              .catch((error) => {\r\n                                console.log(error)\r\n                              })\r\n                          }}\r\n                          color=\"secondary\"\r\n                          badgeContent={\r\n                            <Button style={{ color: 'white' }}>Delete</Button>\r\n                          }\r\n                        >\r\n                          <img\r\n                            style={{\r\n                              maxHeight: '80px',\r\n                              width: 'auto',\r\n                            }}\r\n                            src={img}\r\n                          />\r\n                        </Badge>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </>\r\n              )}\r\n            </div>\r\n          </Paper>\r\n\r\n          {loading && (\r\n            <div style={{ textAlign: 'center', margin: '15px 0' }}>\r\n              <CircularProgress color=\"black\" />\r\n            </div>\r\n          )}\r\n          {error && (\r\n            <Alert\r\n              style={{ margin: '15px 0' }}\r\n              severity=\"error\"\r\n              onClose={() => {\r\n                setState({ ...state, error: false })\r\n              }}\r\n            >\r\n              {error}\r\n            </Alert>\r\n          )}\r\n          {success && (\r\n            <Alert\r\n              style={{ margin: '15px 0' }}\r\n              severity=\"success\"\r\n              onClose={() => {\r\n                setState({ ...state, success: false })\r\n              }}\r\n            >\r\n              {success}\r\n            </Alert>\r\n          )}\r\n\r\n          <Button\r\n            style={{\r\n              backgroundColor: 'black',\r\n              color: 'white',\r\n              margin: '40px 0 80px 0',\r\n            }}\r\n            fullWidth\r\n            startIcon={<CreateIcon />}\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n          >\r\n            Update Product\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UpdateProduct\r\n","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\Pages\\userPages\\UserProfile.js",["230"],"C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\Pages\\adminPages\\AdminProducts.js",["231","232"],"C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\Pages\\userPages\\PurchaseHistory.js",["233","234"],"import React, { useState, useEffect } from 'react'\r\nimport { userOrders } from '../../controllers/userControllers'\r\nimport { useSelector } from 'react-redux'\r\nimport { Button, CircularProgress, makeStyles } from '@material-ui/core'\r\nimport ClearIcon from '@material-ui/icons/Clear'\r\nimport CheckIcon from '@material-ui/icons/Check'\r\nimport { Link } from 'react-router-dom'\r\nimport {\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n} from '@material-ui/core'\r\nimport moment from 'moment'\r\n\r\nconst useStyles = makeStyles({\r\n  link: {\r\n    textDecoration: 'none',\r\n  },\r\n})\r\n\r\nconst PurchaseHistory = () => {\r\n  const classes = useStyles()\r\n  const user = useSelector((state) => state.user)\r\n  const [state, setState] = useState({\r\n    orders: [],\r\n    loading: '',\r\n    error: '',\r\n  })\r\n\r\n  const { orders, loading, error } = state\r\n\r\n  const getUserOrdrs = async () => {\r\n    setState({ ...state, loading: true })\r\n    try {\r\n      const { data } = await userOrders(user.token)\r\n      console.log(data)\r\n      setState({ ...state, orders: data, loading: false })\r\n    } catch (error) {\r\n      console.log(error.message)\r\n      setState({ ...state, error: error.message, loading: false })\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getUserOrdrs()\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <h1>Purchase History</h1>\r\n      <h3>My Orders</h3>\r\n      <hr></hr>\r\n      {loading && (\r\n        <div style={{ textAlign: 'center', margin: '15px 0' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n      {orders && !loading && orders.length < 1 ? (\r\n        <p>No orders found</p>\r\n      ) : (\r\n        <div>\r\n          <TableContainer component={Paper}>\r\n            <Table aria-label=\"customized table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align=\"left\">Created At</TableCell>\r\n                  <TableCell align=\"left\">Order Status</TableCell>\r\n                  <TableCell align=\"left\">Is Paid</TableCell>\r\n                  <TableCell align=\"left\">Payment Method</TableCell>\r\n                  <TableCell align=\"left\">Track Number</TableCell>\r\n                  <TableCell align=\"left\">Total Price</TableCell>\r\n                  <TableCell align=\"left\"></TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {orders && orders.length > 0\r\n                  ? orders.map((o, i) => (\r\n                      <TableRow key={i}>\r\n                        <TableCell>\r\n                          {moment(o.createdAt).format('MMMM Do YYYY')}\r\n                        </TableCell>\r\n                        <TableCell>{o.orderStatus}</TableCell>\r\n                        <TableCell>\r\n                          {o.isPaid === true ? (\r\n                            <CheckIcon style={{ color: 'green' }} />\r\n                          ) : (\r\n                            <ClearIcon style={{ color: 'red' }} />\r\n                          )}\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          {o.paymentInfo.paymentMethod === '0'\r\n                            ? 'Bank Transfer'\r\n                            : o.paymentInfo.paymentMethod === '1'\r\n                            ? 'Phone payment'\r\n                            : 'PayPal'}\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          {o.trackNumber ? o.trackNumber : 'Not yet Recived'}\r\n                        </TableCell>\r\n                        <TableCell>₪{o.paymentInfo.amount}</TableCell>\r\n                        <TableCell>\r\n                          <Link\r\n                            className={classes.link}\r\n                            to={`/user/order/${o._id}`}\r\n                          >\r\n                            <Button variant=\"outlined\" color=\"secondary\">\r\n                              View Full Details\r\n                            </Button>\r\n                          </Link>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))\r\n                  : null}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PurchaseHistory\r\n","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\reducers\\userReducer.js",[],"C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\types\\userTypes.js",[],"C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\components\\SideNav.js",[],"C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\firebase.js",[],"C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\controllers\\categoryControllers.js",[],"C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\controllers\\authControllers.js",[],"C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\controllers\\productControllers.js",[],"C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\components\\admin\\AdminNav.js",[],"C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\components\\admin\\AdminSideNav.js",[],"C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\components\\HomeCard.js",["235"],"import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport Button from '@material-ui/core/Button'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { Link } from 'react-router-dom'\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\nimport _ from 'lodash'\r\nimport { ADD_TO_CART } from '../types/cartTypes'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 250,\r\n    height: 550,\r\n\r\n    margin: '15px',\r\n    border: '1px solid ',\r\n    borderColor: '#e1f5fe',\r\n    '&:hover': {\r\n      boxShadow:\r\n        'rgba(0, 0, 0, 0.19) 0px 10px 20px, rgba(0, 0, 0, 0.23) 0px 6px 6px',\r\n    },\r\n  },\r\n\r\n  link: {\r\n    textDecoration: 'none',\r\n    color: 'black',\r\n  },\r\n\r\n  button: {\r\n    margin: '10px',\r\n    fontWeight: '600',\r\n  },\r\n})\r\n\r\nexport default function HomeCard({ item }) {\r\n  const classes = useStyles()\r\n  const dispatch = useDispatch()\r\n\r\n  const handleAddToCart = () => {\r\n    let cart = []\r\n    if (typeof window !== undefined) {\r\n      if (localStorage.getItem('cart')) {\r\n        cart = JSON.parse(localStorage.getItem('cart'))\r\n      }\r\n      //push new product to cart\r\n      cart.push({\r\n        ...item,\r\n        count: 1,\r\n      })\r\n\r\n      //remove duplicates\r\n      let unique = _.uniqWith(cart, _.isEqual)\r\n      //save to local storage\r\n      localStorage.setItem('cart', JSON.stringify(unique))\r\n      dispatch({\r\n        type: ADD_TO_CART,\r\n        payload: unique,\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <div>\r\n        <Link className={classes.link} to={`/product/${item._id}`}>\r\n          <Tooltip placement=\"left-start\" title={`View product ${item.name}`}>\r\n            <img style={{ width: '100%' }} src={item.images[0]} />\r\n          </Tooltip>\r\n        </Link>\r\n      </div>\r\n      <div>\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            <Link className={classes.link} to={`/product/${item._id}`}>\r\n              <Tooltip\r\n                placement=\"left-start\"\r\n                title={`View product ${item.name}`}\r\n              >\r\n                <h5 style={{ margin: '0' }}>\r\n                  {item.name.substring(0, 20)}\r\n                  {item.name.length > 20 && '...'}\r\n                </h5>\r\n              </Tooltip>\r\n            </Link>\r\n          </Typography>\r\n\r\n          <Typography\r\n            style={{ fontSize: '16px' }}\r\n            variant=\"body2\"\r\n            color=\"textSecondary\"\r\n            component=\"div\"\r\n          >\r\n            <p>\r\n              Price:{' '}\r\n              <span\r\n                style={{\r\n                  color: 'black',\r\n                  marginLeft: '10px',\r\n                  fontWeight: '600',\r\n                }}\r\n              >\r\n                ₪{item.price}\r\n              </span>\r\n            </p>\r\n            <p>\r\n              Status:\r\n              {item.quantity > 0 ? (\r\n                <span\r\n                  style={{\r\n                    color: '#388e3c',\r\n                    marginLeft: '10px',\r\n                    padding: '3px 5px',\r\n                    backgroundColor: '#e8f5e9',\r\n                  }}\r\n                >\r\n                  In Stock\r\n                </span>\r\n              ) : (\r\n                <span\r\n                  style={{\r\n                    color: '#f50057',\r\n                    marginLeft: '10px',\r\n                    padding: '3px 5px',\r\n                    backgroundColor: '#fce4ec',\r\n                  }}\r\n                >\r\n                  Out of Stock\r\n                </span>\r\n              )}\r\n            </p>\r\n            <Link\r\n              className={classes.link}\r\n              to={\r\n                item.category\r\n                  ? `/category/${item.category.slug}`\r\n                  : `/pageNotFound`\r\n              }\r\n            >\r\n              <Tooltip placement=\"left-end\" title=\"View Category\">\r\n                <p style={{ color: 'gray' }}>\r\n                  Category:\r\n                  <span\r\n                    style={{\r\n                      color: 'black',\r\n                      marginLeft: '10px',\r\n                    }}\r\n                  >\r\n                    {item.category ? item.category.name : 'Category not found'}\r\n                  </span>\r\n                </p>\r\n              </Tooltip>\r\n            </Link>\r\n          </Typography>\r\n        </CardContent>\r\n      </div>\r\n\r\n      <Tooltip placement=\"left-start\" title=\"Add product to your cart\">\r\n        <Button\r\n          onClick={handleAddToCart}\r\n          className={classes.button}\r\n          disabled={item.quantity < 1}\r\n          startIcon={<ShoppingCartIcon />}\r\n          variant=\"outlined\"\r\n        >\r\n          Add to Cart\r\n        </Button>\r\n      </Tooltip>\r\n    </Card>\r\n  )\r\n}\r\n","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\components\\ContactUs.js",["236","237","238"],"C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\Pages\\Product.js",["239","240","241","242","243"],"import { Button, Grid, Tooltip } from '@material-ui/core'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { readProduct } from '../controllers/productControllers'\r\nimport { Link } from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core'\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart'\r\nimport Carousel from 'react-material-ui-carousel'\r\nimport _ from 'lodash'\r\nimport { ADD_TO_CART } from '../types/cartTypes'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nconst useStyles = makeStyles({\r\n  link: {\r\n    textDecoration: 'none',\r\n    display: 'block',\r\n    color: 'Graytext',\r\n    display: 'inline',\r\n  },\r\n  button: {\r\n    margin: '10px',\r\n    backgroundColor: 'black',\r\n    color: 'white',\r\n    '&:hover': {\r\n      margin: '10px',\r\n      backgroundColor: 'black',\r\n      color: 'white',\r\n    },\r\n  },\r\n})\r\n\r\nconst Product = ({ match, history }) => {\r\n  const productId = match.params.id\r\n\r\n  const classes = useStyles()\r\n  const dispatch = useDispatch()\r\n\r\n  const [state, setState] = useState({\r\n    product: '',\r\n    loading: '',\r\n    error: '',\r\n  })\r\n\r\n  const { product, loading, error } = state\r\n\r\n  const getProduct = async () => {\r\n    setState({ ...state, loading: true })\r\n    try {\r\n      const res = await readProduct(productId)\r\n      setState({ ...state, loading: false, product: res.data })\r\n    } catch (error) {\r\n      setState({ ...state, loading: false, error: error.response.data.error })\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getProduct()\r\n  }, [])\r\n\r\n  const goBackHandler = () => {\r\n    history.goBack()\r\n  }\r\n\r\n  const handleAddToCart = () => {\r\n    let cart = []\r\n    if (typeof window !== undefined) {\r\n      if (localStorage.getItem('cart')) {\r\n        cart = JSON.parse(localStorage.getItem('cart'))\r\n      }\r\n      //push new product to cart\r\n      cart.push({\r\n        ...product,\r\n        count: 1,\r\n      })\r\n\r\n      //remove duplicates\r\n      let unique = _.uniqWith(cart, _.isEqual)\r\n      //save to local storage\r\n      localStorage.setItem('cart', JSON.stringify(unique))\r\n      dispatch({\r\n        type: ADD_TO_CART,\r\n        payload: unique,\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div style={{ margin: '30px 0 ', overflowWrap: 'break-word' }}>\r\n      <Link className={classes.link} onClick={goBackHandler}>\r\n        <Button style={{ margin: '15px 0' }}>Go back</Button>\r\n      </Link>\r\n      <Grid container>\r\n        <Grid style={{ textAlign: 'center' }} xs={12} md={6} item>\r\n          <Carousel interval={3000} timeout={800}>\r\n            {product &&\r\n              product.images.map((p) => (\r\n                <img style={{ maxWidth: '100%' }} src={p} />\r\n              ))}\r\n          </Carousel>\r\n        </Grid>\r\n        <Grid style={{ padding: '0 15px' }} xs={12} md={6} item>\r\n          <h1 style={{ textAlign: 'center' }}>{product && product.name}</h1>\r\n          <hr></hr>\r\n          <p style={{ color: 'GrayText' }}>\r\n            Details: <br></br>{' '}\r\n            <span\r\n              style={{\r\n                color: 'black',\r\n                whiteSpace: 'pre-line',\r\n                lineHeight: '1.5rem',\r\n              }}\r\n            >\r\n              {product && product.description}\r\n            </span>\r\n          </p>\r\n\r\n          <p\r\n            style={{\r\n              color: 'GrayText',\r\n            }}\r\n          >\r\n            Price:{' '}\r\n            <span\r\n              style={{\r\n                color: 'black',\r\n                marginLeft: '10px',\r\n                fontWeight: '600',\r\n              }}\r\n            >\r\n              ₪{product.price}\r\n            </span>\r\n          </p>\r\n          <p style={{ color: 'GrayText' }}>\r\n            Status:\r\n            {product.quantity > 0 ? (\r\n              <span\r\n                style={{\r\n                  color: 'green',\r\n                  marginLeft: '10px',\r\n                }}\r\n              >\r\n                In Stock\r\n              </span>\r\n            ) : (\r\n              <span style={{ color: 'red', marginLeft: '10px' }}>\r\n                Out of stock\r\n              </span>\r\n            )}\r\n          </p>\r\n          <Link\r\n            className={classes.link}\r\n            to={\r\n              product.category\r\n                ? `/category/${product.category.slug}`\r\n                : `/pageNotFound`\r\n            }\r\n          >\r\n            <Tooltip placement=\"left-end\" title=\"View Category\">\r\n              <p>\r\n                Category:\r\n                <span\r\n                  style={{\r\n                    color: 'black',\r\n                    marginLeft: '10px',\r\n                  }}\r\n                >\r\n                  {product.category\r\n                    ? product.category.name\r\n                    : 'Category not found'}\r\n                </span>\r\n              </p>\r\n            </Tooltip>\r\n          </Link>\r\n          <hr></hr>\r\n          <Tooltip placement=\"left-start\" title=\"Add product to your cart\">\r\n            <Button\r\n              onClick={handleAddToCart}\r\n              startIcon={<ShoppingCartIcon />}\r\n              className={classes.button}\r\n              variant=\"contained\"\r\n              disabled={product.quantity < 1}\r\n            >\r\n              Add to Cart\r\n            </Button>\r\n          </Tooltip>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Product\r\n","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\Pages\\Category.js",["244","245","246","247","248","249"],"import { Button, CircularProgress } from '@material-ui/core'\r\nimport React, { useState, useEffect } from 'react'\r\nimport HomeCard from '../components/HomeCard'\r\nimport { readCategory } from '../controllers/categoryControllers'\r\nimport { Link } from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core'\r\nimport { Pagination, PaginationItem } from '@material-ui/lab'\r\n\r\nconst useStyles = makeStyles({\r\n  link: {\r\n    textDecoration: 'none',\r\n    display: 'block',\r\n    color: 'Graytext',\r\n  },\r\n})\r\n\r\nconst Category = ({ match, history }) => {\r\n  const classes = useStyles()\r\n  const slug = match.params.slug\r\n  const pageNumber = match.params.pageNumber || 1\r\n\r\n  const [state, setState] = useState({\r\n    loading: '',\r\n    error: '',\r\n    category: '',\r\n    products: [],\r\n    page: '',\r\n    pages: '',\r\n    pageSize: '',\r\n  })\r\n\r\n  const { loading, error, category, products, page, pages, pageSize } = state\r\n\r\n  const getCategory = async () => {\r\n    setState({ ...state, loading: true })\r\n    try {\r\n      const { data } = await readCategory(slug, pageNumber, 8)\r\n      setState({\r\n        ...state,\r\n        loading: false,\r\n        category: data.category,\r\n        products: data.products,\r\n        page: data.page,\r\n        pages: data.pages,\r\n        pageSize: data.pageSize,\r\n      })\r\n    } catch (error) {\r\n      setState({ ...state, error: error.response.data.error, loading: false })\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getCategory()\r\n  }, [pageNumber])\r\n\r\n  return (\r\n    <div>\r\n      {loading && (\r\n        <div style={{ textAlign: 'center', margin: '15px 0' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n      {category && <h1 style={{ textAlign: 'center' }}>{category.name}</h1>}\r\n\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          flexWrap: 'wrap',\r\n          justifyContent: 'center',\r\n        }}\r\n      >\r\n        {products &&\r\n          products.length >= 1 &&\r\n          products.map((p, i) => (\r\n            <div>\r\n              <HomeCard key={i} item={p} />\r\n            </div>\r\n          ))}\r\n      </div>\r\n\r\n      {products && products.length < 1 && (\r\n        <h3>We are sorry there are no products yet.</h3>\r\n      )}\r\n      <div\r\n        style={{\r\n          marginBottom: '50px',\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n        }}\r\n      >\r\n        {pages && (\r\n          <Pagination\r\n            hidePrevButton\r\n            hideNextButton\r\n            showFirstButton\r\n            showLastButton\r\n            color=\"primary\"\r\n            count={pages}\r\n            renderItem={(item) => (\r\n              <PaginationItem\r\n                component={Link}\r\n                page={pageNumber}\r\n                to={`/category/${category.slug}/${item.page}`}\r\n                {...item}\r\n              />\r\n            )}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Category\r\n","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\reducers\\cartReducers.js",[],"C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\types\\cartTypes.js",[],"C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\components\\CartTable.js",["250","251","252"],"import React from 'react'\r\nimport Table from '@material-ui/core/Table'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableContainer from '@material-ui/core/TableContainer'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport { Button, Tooltip } from '@material-ui/core'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport { makeStyles } from '@material-ui/core'\r\nimport { REMOVE_FROM_CART, ADD_TO_CART } from '../types/cartTypes'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nconst useStyles = makeStyles({\r\n  deleteButton: {\r\n    backgroundColor: '#d50000',\r\n    color: 'white',\r\n    '&:hover': { backgroundColor: '#f44336', color: 'white' },\r\n  },\r\n})\r\n\r\nconst CartTable = ({ cart }) => {\r\n  const classes = useStyles()\r\n  const dispatch = useDispatch()\r\n\r\n  const handleRemove = (id) => {\r\n    let cart = []\r\n\r\n    if (typeof window !== 'undefined') {\r\n      if (localStorage.getItem('cart')) {\r\n        cart = JSON.parse(localStorage.getItem('cart'))\r\n      }\r\n\r\n      cart.map((product, i) => {\r\n        if (product._id === id) {\r\n          cart.splice(i, 1)\r\n        }\r\n      })\r\n\r\n      localStorage.setItem('cart', JSON.stringify(cart))\r\n      dispatch({\r\n        type: REMOVE_FROM_CART,\r\n        payload: cart,\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <TableContainer style={{ maxWidth: '95%' }} component={Paper}>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"center\">Image</TableCell>\r\n            <TableCell align=\"center\">Name</TableCell>\r\n            <TableCell align=\"center\">Category</TableCell>\r\n            <TableCell align=\"center\">Price</TableCell>\r\n            <TableCell align=\"center\">Count</TableCell>\r\n            <TableCell align=\"center\"></TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n\r\n        <TableBody>\r\n          {cart.map((p, i) => (\r\n            <TableRow key={i}>\r\n              <TableCell align=\"center\">\r\n                {<img src={p.images[0]} style={{ height: '50px' }} />}\r\n              </TableCell>\r\n              <TableCell align=\"center\">{p.name}</TableCell>\r\n              <TableCell align=\"center\">\r\n                {p.category ? p.category.name : 'Category not found'}\r\n              </TableCell>\r\n              <TableCell align=\"center\">{p.price}₪</TableCell>\r\n              <TableCell align=\"center\">\r\n                <input\r\n                  type=\"number\"\r\n                  value={p.count}\r\n                  onChange={(e) => {\r\n                    let cart = []\r\n\r\n                    if (typeof window !== 'undefined') {\r\n                      let count = e.target.value < 1 ? 1 : e.target.value\r\n\r\n                      if (count > p.quantity) {\r\n                        return\r\n                      }\r\n\r\n                      if (localStorage.getItem('cart')) {\r\n                        cart = JSON.parse(localStorage.getItem('cart'))\r\n                      }\r\n\r\n                      cart.map((product, i) => {\r\n                        if (product._id === p._id) cart[i].count = count\r\n                      })\r\n\r\n                      localStorage.setItem('cart', JSON.stringify(cart))\r\n                      dispatch({\r\n                        type: ADD_TO_CART,\r\n                        payload: cart,\r\n                      })\r\n                    }\r\n                  }}\r\n                />\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <Tooltip placement=\"right-end\" title=\"Remove this Item?\">\r\n                  <Button\r\n                    size=\"small\"\r\n                    startIcon={<DeleteIcon />}\r\n                    variant=\"contained\"\r\n                    className={classes.deleteButton}\r\n                    onClick={() => handleRemove(p._id)}\r\n                  >\r\n                    Remove\r\n                  </Button>\r\n                </Tooltip>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  )\r\n}\r\n\r\nexport default CartTable\r\n","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\controllers\\userControllers.js",[],"C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\Pages\\Checkout.js",["253","254","255","256","257"],"import { Button, CircularProgress, Grid, TextField } from '@material-ui/core'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { getUserCart } from '../controllers/userControllers'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { makeStyles } from '@material-ui/core'\r\nimport { savePersonalInfo } from '../controllers/userControllers'\r\nimport { Alert } from '@material-ui/lab'\r\nimport { saveOrderToDB } from '../controllers/userControllers'\r\nimport { removeCart } from '../controllers/userControllers'\r\nimport { EMPTY_CART } from '../types/cartTypes'\r\n\r\nconst useStyles = makeStyles({\r\n  personalInfoButton: {\r\n    color: 'black',\r\n    backgroundColor: '#bbdefb',\r\n    '&:hover': {\r\n      backgroundColor: '#90caf9',\r\n    },\r\n  },\r\n  createOrderButton: {\r\n    color: 'white',\r\n    backgroundColor: '#388e3c',\r\n    '&:hover': {\r\n      backgroundColor: '#2e7d32',\r\n    },\r\n  },\r\n  link: {\r\n    textDecoration: 'none',\r\n    display: 'block',\r\n    color: 'Graytext',\r\n    display: 'inline',\r\n  },\r\n})\r\n\r\nconst Checkout = ({ history }) => {\r\n  const user = useSelector((state) => state.user)\r\n  const classes = useStyles()\r\n  const dispatch = useDispatch()\r\n\r\n  const [state, setState] = useState({\r\n    cartSummary: '',\r\n    loading: '',\r\n    userInfoLoading: '',\r\n    orderLoading: '',\r\n    error: '',\r\n    message: '',\r\n    success: '',\r\n    order: '',\r\n  })\r\n\r\n  const [personalInfo, setPersonalInfo] = useState({\r\n    email: user && user.email,\r\n    fullName: '',\r\n    phoneNumber: '',\r\n    city: '',\r\n    country: '',\r\n    zipCode: '',\r\n    address: '',\r\n  })\r\n\r\n  const {\r\n    cartSummary,\r\n    loading,\r\n    error,\r\n    userInfoLoading,\r\n    orderLoading,\r\n    message,\r\n    success,\r\n    order,\r\n  } = state\r\n  const {\r\n    email,\r\n    fullName,\r\n    phoneNumber,\r\n    city,\r\n    country,\r\n    zipCode,\r\n    address,\r\n  } = personalInfo\r\n\r\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth)\r\n\r\n  const handleResize = (e) => {\r\n    setWindowWidth(window.innerWidth)\r\n  }\r\n\r\n  const saveUserInfo = async (e) => {\r\n    e.preventDefault()\r\n    setState({ ...state, userInfoLoading: true })\r\n    try {\r\n      const { data } = await savePersonalInfo(personalInfo, user.token)\r\n      setState({\r\n        ...state,\r\n        userInfoLoading: false,\r\n      })\r\n      if (data.ok) {\r\n        setState({\r\n          ...state,\r\n          message:\r\n            'Your information is succefully saved, you can now create your order.',\r\n          success: true,\r\n        })\r\n      }\r\n    } catch (error) {\r\n      setState({\r\n        ...state,\r\n        userInfoLoading: false,\r\n        error: 'There was an error please try again or contact the admin.',\r\n        message: false,\r\n        success: false,\r\n      })\r\n    }\r\n  }\r\n\r\n  const userCart = async () => {\r\n    setState({ ...state, loading: true })\r\n    try {\r\n      const { data } = await getUserCart(user.token)\r\n      setState({ ...state, loading: false, cartSummary: data })\r\n    } catch (error) {\r\n      setState({\r\n        ...state,\r\n        loading: false,\r\n        error: error.response.data.error,\r\n      })\r\n    }\r\n  }\r\n\r\n  const deleteCart = async () => {\r\n    try {\r\n      const { data } = await removeCart(user.token)\r\n      if (data.ok) {\r\n        // remove from local storage\r\n        if (typeof window !== 'undefined') {\r\n          localStorage.removeItem('cart')\r\n        }\r\n        // remove from redux\r\n        dispatch({\r\n          type: EMPTY_CART,\r\n          payload: [],\r\n        })\r\n      }\r\n    } catch (error) {\r\n      setState({ ...state, error: error.response.data.error })\r\n    }\r\n  }\r\n\r\n  window.addEventListener('resize', handleResize)\r\n\r\n  useEffect(() => {\r\n    userCart()\r\n  }, [])\r\n\r\n  const onChange = (e) => {\r\n    setPersonalInfo({ ...personalInfo, [e.target.name]: e.target.value })\r\n  }\r\n\r\n  const placeOrder = async (e) => {\r\n    e.preventDefault()\r\n    setState({ ...state, orderLoading: true })\r\n    try {\r\n      const { data } = await saveOrderToDB(user.token)\r\n      if (data._id) {\r\n        await deleteCart()\r\n        history.push(`/order-success/${data._id}`)\r\n      }\r\n    } catch (error) {\r\n      setState({ ...state, orderLoading: false })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {loading && (\r\n        <div style={{ textAlign: 'center', margin: '15px 0' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n      <Grid container style={{ marginBottom: '40px' }}>\r\n        <Grid item xs={12} md={6} style={{ marginBottom: '30px' }}>\r\n          <h2>Personal Info:</h2>\r\n          {success ? (\r\n            message && (\r\n              <>\r\n                <Alert style={{ marginRight: '15px' }} severity=\"success\">\r\n                  {message}\r\n                </Alert>\r\n                <Alert\r\n                  style={{ marginRight: '15px', marginTop: '15px' }}\r\n                  severity=\"info\"\r\n                >\r\n                  *Please Note: After you click on create order, your order will\r\n                  be sent to the admin and you will not be able to change the\r\n                  details anymore. Make sure eveything is correct and if needed\r\n                  you can go back now and change it.\r\n                </Alert>\r\n              </>\r\n            )\r\n          ) : (\r\n            <form onSubmit={saveUserInfo}>\r\n              <div>\r\n                <TextField\r\n                  onChange={onChange}\r\n                  name=\"email\"\r\n                  value={email}\r\n                  required\r\n                  type=\"email\"\r\n                  style={{\r\n                    width: windowWidth > 600 ? '60%' : '100%',\r\n                    margin: '10px 0',\r\n                  }}\r\n                  label=\"Email address\"\r\n                />\r\n                <TextField\r\n                  onChange={onChange}\r\n                  name=\"fullName\"\r\n                  value={fullName}\r\n                  required\r\n                  type=\"text\"\r\n                  style={{\r\n                    width: windowWidth > 600 ? '60%' : '100%',\r\n                    margin: '10px 0',\r\n                  }}\r\n                  label=\"Full name\"\r\n                />\r\n                <TextField\r\n                  onChange={onChange}\r\n                  value={phoneNumber}\r\n                  name=\"phoneNumber\"\r\n                  required\r\n                  type=\"number\"\r\n                  style={{\r\n                    width: windowWidth > 600 ? '60%' : '100%',\r\n                    margin: '10px 0',\r\n                  }}\r\n                  label=\"Phone number\"\r\n                />\r\n                <h3>Delivery Adress:</h3>\r\n                <TextField\r\n                  onChange={onChange}\r\n                  value={city}\r\n                  name=\"city\"\r\n                  required\r\n                  type=\"text\"\r\n                  style={{\r\n                    width: windowWidth > 600 ? '60%' : '100%',\r\n                    margin: '10px 0',\r\n                  }}\r\n                  label=\"City\"\r\n                />\r\n\r\n                <TextField\r\n                  onChange={onChange}\r\n                  value={country}\r\n                  name=\"country\"\r\n                  required\r\n                  type=\"text\"\r\n                  style={{\r\n                    width: windowWidth > 600 ? '60%' : '100%',\r\n                    margin: '10px 0',\r\n                  }}\r\n                  label=\"Contry\"\r\n                />\r\n\r\n                <TextField\r\n                  onChange={onChange}\r\n                  value={zipCode}\r\n                  name=\"zipCode\"\r\n                  required\r\n                  type=\"number\"\r\n                  style={{\r\n                    width: windowWidth > 600 ? '60%' : '100%',\r\n                    margin: '10px 0',\r\n                  }}\r\n                  label=\"Postal/Zip code\"\r\n                />\r\n\r\n                <TextField\r\n                  onChange={onChange}\r\n                  value={address}\r\n                  name=\"address\"\r\n                  required\r\n                  type=\"text\"\r\n                  style={{\r\n                    width: windowWidth > 600 ? '60%' : '100%',\r\n                    margin: '10px 0',\r\n                  }}\r\n                  label=\"Address (street/home number)\"\r\n                  helperText=\"Please enter street name and home number\"\r\n                />\r\n              </div>\r\n              {userInfoLoading && (\r\n                <div style={{ textAlign: 'center', margin: '15px 0' }}>\r\n                  <CircularProgress />\r\n                </div>\r\n              )}\r\n\r\n              <Button\r\n                type=\"submit\"\r\n                className={classes.personalInfoButton}\r\n                variant=\"contained\"\r\n              >\r\n                Confirm User information\r\n              </Button>\r\n            </form>\r\n          )}\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <h2>Order Summary:</h2>\r\n          <hr></hr>\r\n          <h3>Products</h3>\r\n          <div>\r\n            {cartSummary &&\r\n              cartSummary.products.map((p, i) => (\r\n                <div key={i} style={{ display: 'flex', margin: '10px 0' }}>\r\n                  <img style={{ height: '50px' }} src={p.product.images[0]} />\r\n                  <p style={{ margin: '0 10px' }}>\r\n                    {p.product.name} x {p.count} = ₪{p.price * p.count}\r\n                  </p>\r\n                </div>\r\n              ))}\r\n          </div>\r\n          <hr></hr>\r\n          <div>\r\n            <h3>Delivery and Payment fee</h3>\r\n\r\n            <p style={{ fontSize: '18px' }}>\r\n              <span style={{ color: 'GrayText', marginRight: '5px' }}>\r\n                Delivery Price:\r\n              </span>{' '}\r\n              ₪{cartSummary && cartSummary.deliveryPrice}\r\n            </p>\r\n            <p style={{ fontSize: '18px', marginRight: '5px' }}>\r\n              <span style={{ color: 'GrayText' }}> Payment Fee: </span>\r\n              {cartSummary &&\r\n                cartSummary.paymentMethod === '2' &&\r\n                'Payment Fee +5% (PayPal payment)'}\r\n              {cartSummary &&\r\n                cartSummary.paymentMethod !== '2' &&\r\n                'No payment Fee'}\r\n            </p>\r\n          </div>\r\n          <hr></hr>\r\n          <div>\r\n            <h3>\r\n              Total price:\r\n              <span style={{ marginLeft: '10px', fontSize: '1.5rem' }}>\r\n                ₪{cartSummary && cartSummary.cartTotal}\r\n              </span>\r\n            </h3>\r\n          </div>\r\n          <hr></hr>\r\n          {orderLoading && (\r\n            <div style={{ textAlign: 'center', margin: '15px 0' }}>\r\n              <CircularProgress />\r\n            </div>\r\n          )}\r\n          <div>\r\n            {success ? (\r\n              <Button\r\n                onClick={placeOrder}\r\n                className={classes.createOrderButton}\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n              >\r\n                Finish and Create Order\r\n              </Button>\r\n            ) : null}\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Checkout\r\n","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\Pages\\OrderSuccess.js",["258","259","260","261","262"],"import React, { useState, useEffect } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport {\r\n  readOrder,\r\n  getPaypalClientId,\r\n  updatePayment,\r\n} from '../controllers/userControllers'\r\nimport { CircularProgress, Grid } from '@material-ui/core'\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport { Alert, AlertTitle } from '@material-ui/lab'\r\nimport { Link } from 'react-router-dom'\r\nimport UserOrder from '../components/UserOrder'\r\nimport { makeStyles } from '@material-ui/core'\r\nimport BankTransferPayment from '../components/BankTransferPayment'\r\nimport PhonePayment from '../components/PhonePayment'\r\n\r\nconst useStyles = makeStyles({\r\n  link: {\r\n    textDecoration: 'none',\r\n  },\r\n})\r\n\r\nconst OrderSuccess = ({ match }) => {\r\n  const classes = useStyles()\r\n  const id = match.params.id\r\n  const user = useSelector((state) => state.user)\r\n\r\n  const [state, setState] = useState({\r\n    order: '',\r\n    loading: false,\r\n    error: '',\r\n    paymentSuccess: false,\r\n  })\r\n\r\n  const { order, loading, error, paymentSuccess } = state\r\n  const [sdk, setSdk] = useState(false)\r\n\r\n  const getOrder = async () => {\r\n    try {\r\n      const { data } = await readOrder(id, user.token)\r\n      setState({ ...state, order: data })\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  useEffect(async () => {\r\n    getOrder()\r\n  }, [paymentSuccess])\r\n\r\n  useEffect(() => {\r\n    addPaypalScript()\r\n  }, [])\r\n\r\n  const addPaypalScript = async () => {\r\n    try {\r\n      const { data: clientId } = await getPaypalClientId(user.token)\r\n      const script = document.createElement('script')\r\n\r\n      script.type = 'text/javascript'\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}&currency=ILS`\r\n      script.async = true\r\n      script.onload = () => {\r\n        setSdk(true)\r\n      }\r\n      document.body.appendChild(script)\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  const handleSuccess = async (paymentResult) => {\r\n    try {\r\n      if (paymentResult.status === 'COMPLETED') {\r\n        await updatePayment(id, user.token, true)\r\n        setState({ ...state, paymentSuccess: true })\r\n      }\r\n    } catch (error) {\r\n      console.log(error)\r\n      setState({ ...state, error: error.message })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2\r\n        style={{\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n        }}\r\n      >\r\n        Order Succefully created{' '}\r\n        <CheckCircleIcon\r\n          style={{ fontSize: '40px', color: 'green', marginLeft: '10px' }}\r\n        />\r\n      </h2>\r\n      <h2>Payment:</h2>\r\n\r\n      {/* direct bank transfer */}\r\n      <div>\r\n        {order && !order.isPaid && order.paymentInfo.paymentMethod === '0' && (\r\n          <BankTransferPayment />\r\n        )}\r\n      </div>\r\n\r\n      {/* phone payment */}\r\n      <div>\r\n        {order && !order.isPaid && order.paymentInfo.paymentMethod === '1' && (\r\n          <PhonePayment />\r\n        )}\r\n      </div>\r\n\r\n      {/* PayPal payment */}\r\n      <div>\r\n        {order &&\r\n          !order.isPaid &&\r\n          !sdk &&\r\n          order.paymentInfo.paymentMethod === '2' && (\r\n            <div style={{ textAlign: 'center', margin: '15px 0' }}>\r\n              <CircularProgress />\r\n            </div>\r\n          )}\r\n        {order &&\r\n          !order.isPaid &&\r\n          sdk &&\r\n          order.paymentInfo.paymentMethod === '2' && (\r\n            <Grid container>\r\n              <Grid item xs={12} md={6}>\r\n                <div style={{ width: '300px', maxWidth: '90%' }}>\r\n                  <PayPalButton\r\n                    amount={order.paymentInfo.amount}\r\n                    currency=\"ILS\"\r\n                    onSuccess={handleSuccess}\r\n                    onError={() =>\r\n                      setState({ ...state, error: 'Payment failed.' })\r\n                    }\r\n                  />\r\n                </div>\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <h4>\r\n                  Order that is not paid within 24h will be cancelled by the\r\n                  admin.\r\n                </h4>\r\n                <p>\r\n                  *Please note that you can see your orders anytime at\r\n                  <Link\r\n                    className={classes.link}\r\n                    style={{ margin: '0 5px' }}\r\n                    to={'/user/history'}\r\n                  >\r\n                    User History\r\n                  </Link>\r\n                </p>\r\n              </Grid>\r\n              <div\r\n                style={{\r\n                  textAlign: 'center',\r\n                  width: '95%',\r\n                  margin: '15px auto',\r\n                  backgroundColor: '#f5f5f5',\r\n                  padding: '10px 0',\r\n                }}\r\n              >\r\n                <h4>\r\n                  For any questions/customer support please contact us on\r\n                  whatsApp\r\n                </h4>\r\n                <div>\r\n                  <div>\r\n                    <i\r\n                      style={{ color: 'green' }}\r\n                      className=\"fab fa-whatsapp fa-3x mt-2 mx-1\"\r\n                    ></i>\r\n                    <span\r\n                      style={{\r\n                        marginLeft: '10px',\r\n                        fontSize: '1.3rem',\r\n                        fontWeight: '700',\r\n                      }}\r\n                    >\r\n                      054-665-9069\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Grid>\r\n          )}\r\n      </div>\r\n\r\n      {/* payment success message */}\r\n      {order && order.isPaid && (\r\n        <>\r\n          <Alert style={{ margin: '15px 0' }}>\r\n            <AlertTitle>\r\n              <h4>Thank you, Your payment was successfull.</h4>\r\n            </AlertTitle>\r\n            <hr></hr>\r\n            <p>\r\n              You can see your orders anytime at\r\n              <Link style={{ margin: '0 5px' }} to={'/user/history'}>\r\n                User History\r\n              </Link>\r\n            </p>\r\n            <p>\r\n              Once your order is sent you will recive your track number and your\r\n              order status will be changed accordingly.\r\n            </p>\r\n          </Alert>\r\n          <div\r\n            style={{\r\n              textAlign: 'center',\r\n              width: '95%',\r\n              margin: '15px auto',\r\n              backgroundColor: '#f5f5f5',\r\n              padding: '10px 0',\r\n            }}\r\n          >\r\n            <h4>\r\n              For any questions/customer support please contact us on whatsApp\r\n            </h4>\r\n            <div>\r\n              <div>\r\n                <i\r\n                  style={{ color: 'green' }}\r\n                  className=\"fab fa-whatsapp fa-3x mt-2 mx-1\"\r\n                ></i>\r\n                <span\r\n                  style={{\r\n                    marginLeft: '10px',\r\n                    fontSize: '1.3rem',\r\n                    fontWeight: '700',\r\n                  }}\r\n                >\r\n                  054-665-9069\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      <h2>Order Details:</h2>\r\n\r\n      <UserOrder order={order} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OrderSuccess\r\n","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\components\\UserOrder.js",["263"],"import React from 'react'\r\nimport ClearIcon from '@material-ui/icons/Clear'\r\nimport CheckIcon from '@material-ui/icons/Check'\r\nimport { Grid } from '@material-ui/core'\r\nimport moment from 'moment'\r\n\r\nconst UserOrder = ({ order }) => {\r\n  return (\r\n    <>\r\n      <h3 style={{ textAlign: 'center', marginTop: '50px' }}>\r\n        Order ID:\r\n        <span\r\n          style={{\r\n            wordBreak: 'break-all',\r\n            marginLeft: '15px',\r\n          }}\r\n        >\r\n          {order._id}\r\n        </span>\r\n      </h3>\r\n      <Grid\r\n        style={{\r\n          padding: '10px',\r\n          marginBottom: '40px',\r\n        }}\r\n        container\r\n      >\r\n        <Grid\r\n          style={{ padding: '10px', overflowX: 'auto' }}\r\n          item\r\n          sm={6}\r\n          xs={12}\r\n          md={4}\r\n        >\r\n          <h4>Order Details:</h4>\r\n          <p>\r\n            Created At:\r\n            <span style={{ marginLeft: '10px' }}>\r\n              {moment(order.createdAt).format('MMMM Do YYYY')}\r\n            </span>\r\n          </p>\r\n          <div style={{ display: 'flex', alignItems: 'center' }}>\r\n            <p>Order is Paid:</p>\r\n            <span style={{ marginLeft: '10px' }}>\r\n              {order && order.isPaid === false ? (\r\n                <ClearIcon style={{ color: 'red', fontSize: '30px' }} />\r\n              ) : (\r\n                <CheckIcon style={{ color: 'green', fontSize: '30px' }} />\r\n              )}\r\n            </span>\r\n          </div>\r\n          <div>\r\n            <p>\r\n              Order Status:\r\n              <span style={{ marginLeft: '10px' }}>{order.orderStatus}</span>\r\n            </p>\r\n          </div>\r\n          <div>\r\n            <h4>Tracking Number</h4>\r\n            {order && !order.trackNumber ? (\r\n              <p style={{ color: 'GrayText' }}>\r\n                You will recive a tracking number when your package will be sent\r\n              </p>\r\n            ) : (\r\n              <div>\r\n                <p>Number: {order && order.trackNumber}</p>\r\n\r\n                <p>\r\n                  URL:\r\n                  <a\r\n                    style={{ marginLeft: '10px' }}\r\n                    target=\"blank\"\r\n                    href={order && order.url}\r\n                  >\r\n                    {'Link'}\r\n                  </a>\r\n                </p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Grid>\r\n\r\n        <Grid\r\n          style={{ padding: '10px', overflowX: 'auto' }}\r\n          item\r\n          sm={6}\r\n          xs={12}\r\n          md={4}\r\n        >\r\n          <h4>User and Delivery info:</h4>\r\n          <p>\r\n            Email:\r\n            <span style={{ marginLeft: '10px' }}>\r\n              {order && order.personalInfo.email}\r\n            </span>\r\n          </p>\r\n          <p>\r\n            Name:\r\n            <span style={{ marginLeft: '10px' }}>\r\n              {order && order.personalInfo.fullName}\r\n            </span>\r\n          </p>\r\n          <p>\r\n            Phone:\r\n            <span style={{ marginLeft: '10px' }}>\r\n              {order && order.personalInfo.phoneNumber}\r\n            </span>\r\n          </p>\r\n          <p>\r\n            Address:\r\n            <span style={{ marginLeft: '10px' }}>\r\n              {order && order.personalInfo.address}\r\n            </span>\r\n          </p>\r\n          <p>\r\n            City:\r\n            <span style={{ marginLeft: '10px' }}>\r\n              {order && order.personalInfo.city}\r\n            </span>\r\n          </p>\r\n          <p>\r\n            Country:\r\n            <span style={{ marginLeft: '10px' }}>\r\n              {order && order.personalInfo.country}\r\n            </span>\r\n          </p>\r\n        </Grid>\r\n\r\n        <Grid\r\n          style={{ padding: '10px', overflowX: 'auto' }}\r\n          item\r\n          sm={6}\r\n          xs={12}\r\n          md={4}\r\n        >\r\n          <h4>Payment Info:</h4>\r\n\r\n          <div>\r\n            <p>\r\n              Delivery Price:\r\n              <span style={{ marginLeft: '10px' }}>\r\n                ₪{order && order.paymentInfo.deliveryPrice}\r\n              </span>\r\n            </p>\r\n            <p>\r\n              Payment Fee:\r\n              {order && order.paymentInfo.paymentMethod === '0' && (\r\n                <span style={{ marginLeft: '10px' }}>No payment Fee</span>\r\n              )}\r\n              {order && order.paymentInfo.paymentMethod === '1' && (\r\n                <span style={{ marginLeft: '10px' }}>No payment Fee</span>\r\n              )}\r\n              {order && order.paymentInfo.paymentMethod === '2' && (\r\n                <span style={{ marginLeft: '10px' }}>\r\n                  Payment Fee +5% (PayPal)\r\n                </span>\r\n              )}\r\n            </p>\r\n            <p>\r\n              Payment Method:\r\n              {order && order.paymentInfo.paymentMethod === '0' && (\r\n                <span style={{ marginLeft: '10px' }}>Bank Transfer</span>\r\n              )}\r\n              {order && order.paymentInfo.paymentMethod === '1' && (\r\n                <span style={{ marginLeft: '10px' }}>Phone Payment</span>\r\n              )}\r\n              {order && order.paymentInfo.paymentMethod === '2' && (\r\n                <span style={{ marginLeft: '10px' }}>PayPal</span>\r\n              )}\r\n            </p>\r\n\r\n            <h4>Products:</h4>\r\n\r\n            <div>\r\n              {order &&\r\n                order.products.map((p, i) => (\r\n                  <div key={i} style={{ display: 'flex', margin: '10px 0' }}>\r\n                    <img style={{ height: '50px' }} src={p.product.images[0]} />\r\n                    <p style={{ margin: '0 10px' }}>\r\n                      {p.product.name} x {p.count} = ₪\r\n                      {p.product.price * p.count}\r\n                    </p>\r\n                  </div>\r\n                ))}\r\n            </div>\r\n            <h4>\r\n              Total price:\r\n              <span style={{ marginLeft: '10px' }}>\r\n                ₪{order && order.paymentInfo.amount}\r\n              </span>\r\n            </h4>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserOrder\r\n","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\controllers\\adminControllers.js",[],"C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\Pages\\UserOrderPage.js",["264","265"],"import React, { useState, useEffect } from 'react'\r\nimport {\r\n  getPaypalClientId,\r\n  readOrder,\r\n  updatePayment,\r\n} from '../controllers/userControllers'\r\nimport { useSelector } from 'react-redux'\r\nimport { Alert, AlertTitle } from '@material-ui/lab'\r\nimport { CircularProgress, Grid } from '@material-ui/core'\r\nimport UserOrder from '../components/UserOrder'\r\nimport BankTransferPayment from '../components/BankTransferPayment'\r\nimport PhonePayment from '../components/PhonePayment'\r\nimport { Link } from 'react-router-dom'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\n\r\nconst UserOrderPage = ({ match }) => {\r\n  const user = useSelector((state) => state.user)\r\n  const id = match.params.id\r\n  const [state, setState] = useState({\r\n    order: '',\r\n    loading: '',\r\n    error: '',\r\n    paymentSuccess: false,\r\n  })\r\n\r\n  const { order, loading, error, paymentSuccess } = state\r\n  const [sdk, setSdk] = useState(false)\r\n\r\n  const getOrder = async () => {\r\n    setState({ ...state, loading: true })\r\n    try {\r\n      const { data } = await readOrder(id, user.token)\r\n      setState({ ...state, order: data, loading: false })\r\n    } catch (error) {\r\n      setState({ ...state, loading: false, error: error.response.data.error })\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getOrder()\r\n  }, [paymentSuccess])\r\n\r\n  useEffect(() => {\r\n    addPaypalScript()\r\n  }, [])\r\n\r\n  const addPaypalScript = async () => {\r\n    try {\r\n      const { data: clientId } = await getPaypalClientId(user.token)\r\n      const script = document.createElement('script')\r\n\r\n      script.type = 'text/javascript'\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}&currency=ILS`\r\n      script.async = true\r\n      script.onload = () => {\r\n        setSdk(true)\r\n      }\r\n      document.body.appendChild(script)\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  const handleSuccess = async (paymentResult) => {\r\n    try {\r\n      if (paymentResult.status === 'COMPLETED') {\r\n        await updatePayment(id, user.token, true)\r\n        setState({ ...state, paymentSuccess: true })\r\n      }\r\n    } catch (error) {\r\n      console.log(error)\r\n      setState({ ...state, error: error.message })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        {error && (\r\n          <Alert\r\n            style={{ margin: '15px 0' }}\r\n            severity=\"error\"\r\n            onClose={() => {\r\n              setState({ ...state, error: false })\r\n            }}\r\n          >\r\n            {error}\r\n          </Alert>\r\n        )}\r\n      </div>\r\n      {loading && (\r\n        <div style={{ textAlign: 'center', margin: '15px 0' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n\r\n      {order && (\r\n        <div>\r\n          <h2>Payment:</h2>\r\n          {/* Bank Transfer */}\r\n          {order &&\r\n            order.isPaid === false &&\r\n            order.paymentInfo.paymentMethod === '0' && <BankTransferPayment />}\r\n\r\n          {/* Phone payment */}\r\n          {order &&\r\n            order.isPaid === false &&\r\n            order.paymentInfo.paymentMethod === '1' && <PhonePayment />}\r\n\r\n          {/* PayPal */}\r\n          <div>\r\n            {order &&\r\n              !order.isPaid &&\r\n              !sdk &&\r\n              order.paymentInfo.paymentMethod === '2' && (\r\n                <div style={{ textAlign: 'center', margin: '15px 0' }}>\r\n                  <CircularProgress />\r\n                </div>\r\n              )}\r\n            {order &&\r\n              !order.isPaid &&\r\n              sdk &&\r\n              order.paymentInfo.paymentMethod === '2' && (\r\n                <Grid container>\r\n                  <Grid item xs={12} md={6}>\r\n                    <div style={{ width: '300px', maxWidth: '90%' }}>\r\n                      <PayPalButton\r\n                        amount={order.paymentInfo.amount}\r\n                        currency=\"ILS\"\r\n                        onSuccess={handleSuccess}\r\n                        onError={() =>\r\n                          setState({ ...state, error: 'Payment failed.' })\r\n                        }\r\n                      />\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid item xs={12} md={6}>\r\n                    <h4>\r\n                      Order that is not paid within 24h will be cancelled by the\r\n                      admin.\r\n                    </h4>\r\n                    <p>\r\n                      *Please note that you can see your orders anytime at\r\n                      <Link style={{ margin: '0 5px' }} to={'/user/history'}>\r\n                        User History\r\n                      </Link>\r\n                    </p>\r\n                  </Grid>\r\n                  <div\r\n                    style={{\r\n                      textAlign: 'center',\r\n                      width: '95%',\r\n                      margin: '15px auto',\r\n                      backgroundColor: '#f5f5f5',\r\n                      padding: '10px 0',\r\n                    }}\r\n                  >\r\n                    <h4>\r\n                      For any questions/customer support please contact us on\r\n                      whatsApp\r\n                    </h4>\r\n                    <div>\r\n                      <div>\r\n                        <i\r\n                          style={{ color: 'green' }}\r\n                          className=\"fab fa-whatsapp fa-3x mt-2 mx-1\"\r\n                        ></i>\r\n                        <span\r\n                          style={{\r\n                            marginLeft: '10px',\r\n                            fontSize: '1.3rem',\r\n                            fontWeight: '700',\r\n                          }}\r\n                        >\r\n                          054-665-9069\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </Grid>\r\n              )}\r\n          </div>\r\n\r\n          {/* Succefull payment message */}\r\n          {order && order.isPaid && (\r\n            <>\r\n              <Alert style={{ margin: '15px 0' }}>\r\n                <AlertTitle>\r\n                  <h4>Thank you, Your payment was successfull.</h4>\r\n                </AlertTitle>\r\n                <hr></hr>\r\n                <p>\r\n                  You can see your orders anytime at\r\n                  <Link style={{ margin: '0 5px' }} to={'/user/history'}>\r\n                    User History\r\n                  </Link>\r\n                </p>\r\n                <p>\r\n                  Once your order is sent you will recive your track number and\r\n                  your order status will be changed accordingly.\r\n                </p>\r\n              </Alert>\r\n              <div\r\n                style={{\r\n                  textAlign: 'center',\r\n                  width: '95%',\r\n                  margin: '15px auto',\r\n                  backgroundColor: '#f5f5f5',\r\n                  padding: '10px 0',\r\n                }}\r\n              >\r\n                <h4>\r\n                  For any questions/customer support please contact us on\r\n                  whatsApp\r\n                </h4>\r\n                <div>\r\n                  <div>\r\n                    <i\r\n                      style={{ color: 'green' }}\r\n                      className=\"fab fa-whatsapp fa-3x mt-2 mx-1\"\r\n                    ></i>\r\n                    <span\r\n                      style={{\r\n                        marginLeft: '10px',\r\n                        fontSize: '1.3rem',\r\n                        fontWeight: '700',\r\n                      }}\r\n                    >\r\n                      054-665-9069\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </>\r\n          )}\r\n\r\n          <UserOrder order={order} />\r\n        </div>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserOrderPage\r\n","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\Pages\\authPages\\ForgotPassword.js",[],"C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\components\\BankTransferPayment.js",[],"C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\components\\PhonePayment.js",[],"C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\Pages\\adminPages\\AdminOrder.js",["266"],"C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\Pages\\adminPages\\Comments.js",["267","268"],"C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\components\\UserMessage.js",[],{"ruleId":"269","replacedBy":"270"},{"ruleId":"271","replacedBy":"272"},{"ruleId":"273","severity":1,"message":"274","line":63,"column":6,"nodeType":"275","endLine":63,"endColumn":8,"suggestions":"276"},{"ruleId":"273","severity":1,"message":"277","line":73,"column":34,"nodeType":"275","endLine":73,"endColumn":36,"suggestions":"278"},{"ruleId":"279","severity":1,"message":"280","line":79,"column":11,"nodeType":"281","endLine":79,"endColumn":56},{"ruleId":"282","severity":1,"message":"283","line":45,"column":36,"nodeType":"284","messageId":"285","endLine":45,"endColumn":41},{"ruleId":"273","severity":1,"message":"286","line":65,"column":6,"nodeType":"275","endLine":65,"endColumn":8,"suggestions":"287"},{"ruleId":"282","severity":1,"message":"283","line":51,"column":18,"nodeType":"284","messageId":"285","endLine":51,"endColumn":23},{"ruleId":"282","severity":1,"message":"283","line":52,"column":5,"nodeType":"284","messageId":"285","endLine":52,"endColumn":10},{"ruleId":"282","severity":1,"message":"288","line":55,"column":5,"nodeType":"284","messageId":"285","endLine":55,"endColumn":9},{"ruleId":"282","severity":1,"message":"289","line":57,"column":5,"nodeType":"284","messageId":"285","endLine":57,"endColumn":13},{"ruleId":"282","severity":1,"message":"290","line":58,"column":5,"nodeType":"284","messageId":"285","endLine":58,"endColumn":11},{"ruleId":"273","severity":1,"message":"291","line":85,"column":6,"nodeType":"275","endLine":85,"endColumn":31,"suggestions":"292"},{"ruleId":"282","severity":1,"message":"288","line":45,"column":35,"nodeType":"284","messageId":"285","endLine":45,"endColumn":39},{"ruleId":"282","severity":1,"message":"289","line":45,"column":48,"nodeType":"284","messageId":"285","endLine":45,"endColumn":56},{"ruleId":"273","severity":1,"message":"293","line":67,"column":6,"nodeType":"275","endLine":67,"endColumn":18,"suggestions":"294"},{"ruleId":"273","severity":1,"message":"295","line":73,"column":36,"nodeType":"275","endLine":73,"endColumn":38,"suggestions":"296"},{"ruleId":"279","severity":1,"message":"280","line":362,"column":27,"nodeType":"281","endLine":368,"endColumn":29},{"ruleId":"273","severity":1,"message":"295","line":61,"column":36,"nodeType":"275","endLine":61,"endColumn":38,"suggestions":"297"},{"ruleId":"273","severity":1,"message":"298","line":91,"column":33,"nodeType":"275","endLine":91,"endColumn":35,"suggestions":"299"},{"ruleId":"279","severity":1,"message":"280","line":380,"column":27,"nodeType":"281","endLine":386,"endColumn":29},{"ruleId":"273","severity":1,"message":"300","line":85,"column":6,"nodeType":"275","endLine":85,"endColumn":8,"suggestions":"301"},{"ruleId":"273","severity":1,"message":"302","line":70,"column":35,"nodeType":"275","endLine":70,"endColumn":47,"suggestions":"303"},{"ruleId":"304","severity":1,"message":"305","line":184,"column":23,"nodeType":"281","endLine":188,"endColumn":25},{"ruleId":"282","severity":1,"message":"283","line":34,"column":28,"nodeType":"284","messageId":"285","endLine":34,"endColumn":33},{"ruleId":"273","severity":1,"message":"306","line":50,"column":6,"nodeType":"275","endLine":50,"endColumn":8,"suggestions":"307"},{"ruleId":"279","severity":1,"message":"280","line":71,"column":13,"nodeType":"281","endLine":71,"endColumn":67},{"ruleId":"273","severity":1,"message":"300","line":68,"column":6,"nodeType":"275","endLine":68,"endColumn":8,"suggestions":"308"},{"ruleId":"309","severity":1,"message":"310","line":85,"column":15,"nodeType":"311","endLine":85,"endColumn":30},{"ruleId":"309","severity":1,"message":"310","line":95,"column":15,"nodeType":"311","endLine":95,"endColumn":30},{"ruleId":"312","severity":1,"message":"313","line":17,"column":5,"nodeType":"314","messageId":"315","endLine":17,"endColumn":12},{"ruleId":"282","severity":1,"message":"316","line":43,"column":20,"nodeType":"284","messageId":"285","endLine":43,"endColumn":27},{"ruleId":"282","severity":1,"message":"283","line":43,"column":29,"nodeType":"284","messageId":"285","endLine":43,"endColumn":34},{"ruleId":"273","severity":1,"message":"298","line":57,"column":6,"nodeType":"275","endLine":57,"endColumn":8,"suggestions":"317"},{"ruleId":"279","severity":1,"message":"280","line":96,"column":17,"nodeType":"281","endLine":96,"endColumn":61},{"ruleId":"282","severity":1,"message":"318","line":1,"column":10,"nodeType":"284","messageId":"285","endLine":1,"endColumn":16},{"ruleId":"282","severity":1,"message":"319","line":18,"column":9,"nodeType":"284","messageId":"285","endLine":18,"endColumn":16},{"ruleId":"282","severity":1,"message":"283","line":32,"column":20,"nodeType":"284","messageId":"285","endLine":32,"endColumn":25},{"ruleId":"282","severity":1,"message":"288","line":32,"column":47,"nodeType":"284","messageId":"285","endLine":32,"endColumn":51},{"ruleId":"282","severity":1,"message":"289","line":32,"column":60,"nodeType":"284","messageId":"285","endLine":32,"endColumn":68},{"ruleId":"273","severity":1,"message":"320","line":55,"column":6,"nodeType":"275","endLine":55,"endColumn":18,"suggestions":"321"},{"ruleId":"322","severity":1,"message":"323","line":35,"column":29,"nodeType":"324","messageId":"325","endLine":35,"endColumn":31},{"ruleId":"279","severity":1,"message":"280","line":67,"column":18,"nodeType":"281","endLine":67,"endColumn":70},{"ruleId":"322","severity":1,"message":"323","line":92,"column":45,"nodeType":"324","messageId":"325","endLine":92,"endColumn":47},{"ruleId":"312","severity":1,"message":"313","line":31,"column":5,"nodeType":"314","messageId":"315","endLine":31,"endColumn":12},{"ruleId":"282","severity":1,"message":"283","line":64,"column":5,"nodeType":"284","messageId":"285","endLine":64,"endColumn":10},{"ruleId":"282","severity":1,"message":"326","line":69,"column":5,"nodeType":"284","messageId":"285","endLine":69,"endColumn":10},{"ruleId":"273","severity":1,"message":"327","line":152,"column":6,"nodeType":"275","endLine":152,"endColumn":8,"suggestions":"328"},{"ruleId":"279","severity":1,"message":"280","line":316,"column":19,"nodeType":"281","endLine":316,"endColumn":79},{"ruleId":"282","severity":1,"message":"316","line":36,"column":18,"nodeType":"284","messageId":"285","endLine":36,"endColumn":25},{"ruleId":"282","severity":1,"message":"283","line":36,"column":27,"nodeType":"284","messageId":"285","endLine":36,"endColumn":32},{"ruleId":"273","severity":1,"message":"329","line":48,"column":13,"nodeType":"324","endLine":50,"endColumn":4},{"ruleId":"273","severity":1,"message":"330","line":50,"column":6,"nodeType":"275","endLine":50,"endColumn":22,"suggestions":"331"},{"ruleId":"273","severity":1,"message":"332","line":54,"column":6,"nodeType":"275","endLine":54,"endColumn":8,"suggestions":"333"},{"ruleId":"279","severity":1,"message":"280","line":178,"column":21,"nodeType":"281","endLine":178,"endColumn":81},{"ruleId":"273","severity":1,"message":"330","line":41,"column":6,"nodeType":"275","endLine":41,"endColumn":22,"suggestions":"334"},{"ruleId":"273","severity":1,"message":"332","line":45,"column":6,"nodeType":"275","endLine":45,"endColumn":8,"suggestions":"335"},{"ruleId":"273","severity":1,"message":"330","line":92,"column":6,"nodeType":"275","endLine":92,"endColumn":8,"suggestions":"336"},{"ruleId":"282","severity":1,"message":"283","line":22,"column":30,"nodeType":"284","messageId":"285","endLine":22,"endColumn":35},{"ruleId":"273","severity":1,"message":"337","line":43,"column":6,"nodeType":"275","endLine":43,"endColumn":18,"suggestions":"338"},"no-native-reassign",["339"],"no-negated-in-lhs",["340"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["341"],"React Hook useEffect has a missing dependency: 'getProducts'. Either include it or remove the dependency array.",["342"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'values'. Either include it or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.",["343"],"'page' is assigned a value but never used.","'pageSize' is assigned a value but never used.","'filter' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'onLoad'. Either include it or remove the dependency array.",["344"],"React Hook useEffect has a missing dependency: 'listOrders'. Either include it or remove the dependency array.",["345"],"React Hook useEffect has a missing dependency: 'getCategories'. Either include it or remove the dependency array.",["346"],["347"],"React Hook useEffect has a missing dependency: 'getProduct'. Either include it or remove the dependency array.",["348"],"React Hook useEffect has missing dependencies: 'state' and 'user'. Either include them or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.",["349"],"React Hook useEffect has a missing dependency: 'listProducts'. Either include it or remove the dependency array.",["350"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","React Hook useEffect has a missing dependency: 'getUserOrdrs'. Either include it or remove the dependency array.",["351"],["352"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-dupe-keys","Duplicate key 'display'.","ObjectExpression","unexpected","'loading' is assigned a value but never used.",["353"],"'Button' is defined but never used.","'classes' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getCategory'. Either include it or remove the dependency array.",["354"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'order' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userCart'. Either include it or remove the dependency array.",["355"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","React Hook useEffect has a missing dependency: 'getOrder'. Either include it or remove the dependency array.",["356"],"React Hook useEffect has a missing dependency: 'addPaypalScript'. Either include it or remove the dependency array.",["357"],["358"],["359"],["360"],"React Hook useEffect has a missing dependency: 'getMessages'. Either include it or remove the dependency array.",["361"],"no-global-assign","no-unsafe-negation",{"desc":"362","fix":"363"},{"desc":"364","fix":"365"},{"desc":"366","fix":"367"},{"desc":"368","fix":"369"},{"desc":"370","fix":"371"},{"desc":"372","fix":"373"},{"desc":"372","fix":"374"},{"desc":"375","fix":"376"},{"desc":"377","fix":"378"},{"desc":"379","fix":"380"},{"desc":"381","fix":"382"},{"desc":"377","fix":"383"},{"desc":"375","fix":"384"},{"desc":"385","fix":"386"},{"desc":"387","fix":"388"},{"desc":"389","fix":"390"},{"desc":"391","fix":"392"},{"desc":"389","fix":"393"},{"desc":"391","fix":"394"},{"desc":"395","fix":"396"},{"desc":"397","fix":"398"},"Update the dependencies array to be: [dispatch]",{"range":"399","text":"400"},"Update the dependencies array to be: [getProducts]",{"range":"401","text":"402"},"Update the dependencies array to be: [values]",{"range":"403","text":"404"},"Update the dependencies array to be: [pageNumber, sort, order, onLoad]",{"range":"405","text":"406"},"Update the dependencies array to be: [listOrders, pageNumber]",{"range":"407","text":"408"},"Update the dependencies array to be: [getCategories]",{"range":"409","text":"410"},{"range":"411","text":"410"},"Update the dependencies array to be: [getProduct]",{"range":"412","text":"413"},"Update the dependencies array to be: [state, user]",{"range":"414","text":"415"},"Update the dependencies array to be: [listProducts, pageNumber]",{"range":"416","text":"417"},"Update the dependencies array to be: [getUserOrdrs]",{"range":"418","text":"419"},{"range":"420","text":"415"},{"range":"421","text":"413"},"Update the dependencies array to be: [getCategory, pageNumber]",{"range":"422","text":"423"},"Update the dependencies array to be: [userCart]",{"range":"424","text":"425"},"Update the dependencies array to be: [getOrder, paymentSuccess]",{"range":"426","text":"427"},"Update the dependencies array to be: [addPaypalScript]",{"range":"428","text":"429"},{"range":"430","text":"427"},{"range":"431","text":"429"},"Update the dependencies array to be: [getOrder]",{"range":"432","text":"433"},"Update the dependencies array to be: [getMessages, pageNumber]",{"range":"434","text":"435"},[2398,2400],"[dispatch]",[1929,1931],"[getProducts]",[1480,1482],"[values]",[1914,1939],"[pageNumber, sort, order, onLoad]",[1741,1753],"[listOrders, pageNumber]",[1782,1784],"[getCategories]",[1497,1499],[2258,2260],"[getProduct]",[1950,1952],"[state, user]",[1670,1682],"[listProducts, pageNumber]",[1296,1298],"[getUserOrdrs]",[1559,1561],[1511,1513],[1497,1509],"[getCategory, pageNumber]",[3698,3700],"[userCart]",[1418,1434],"[getOrder, paymentSuccess]",[1488,1490],"[addPaypalScript]",[1296,1312],[1366,1368],[2437,2439],"[getOrder]",[1298,1310],"[getMessages, pageNumber]"]