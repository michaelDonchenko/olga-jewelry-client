[{"C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\index.js":"1","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\App.js":"2","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\store.js":"3","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\components\\NavBar.js":"4","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\Pages\\Home.js":"5","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\Pages\\Cart.js":"6","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\Pages\\authPages\\RegisterComplete.js":"7","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\Pages\\authPages\\Login.js":"8","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\components\\routes\\AdminRoute.js":"9","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\Pages\\authPages\\Register.js":"10","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\Pages\\Shop.js":"11","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\Pages\\adminPages\\AdminDashboard.js":"12","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\Pages\\adminPages\\CreateProduct.js":"13","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\components\\routes\\PrivateRoute.js":"14","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\Pages\\adminPages\\AdminCategories.js":"15","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\Pages\\adminPages\\UpdateProduct.js":"16","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\Pages\\userPages\\UserProfile.js":"17","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\Pages\\adminPages\\AdminProducts.js":"18","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\Pages\\userPages\\PurchaseHistory.js":"19","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\reducers\\userReducer.js":"20","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\types\\userTypes.js":"21","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\components\\SideNav.js":"22","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\firebase.js":"23","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\controllers\\categoryControllers.js":"24","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\controllers\\authControllers.js":"25","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\controllers\\productControllers.js":"26","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\components\\admin\\AdminNav.js":"27","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\components\\admin\\AdminSideNav.js":"28","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\components\\HomeCard.js":"29","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\components\\ContactUs.js":"30","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\Pages\\Product.js":"31","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\Pages\\Category.js":"32","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\reducers\\cartReducers.js":"33","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\types\\cartTypes.js":"34","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\components\\CartTable.js":"35","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\controllers\\userControllers.js":"36","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\Pages\\Checkout.js":"37","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\Pages\\OrderSuccess.js":"38"},{"size":383,"mtime":1609438319426,"results":"39","hashOfConfig":"40"},{"size":4690,"mtime":1610356919541,"results":"41","hashOfConfig":"40"},{"size":856,"mtime":1609947743048,"results":"42","hashOfConfig":"40"},{"size":7998,"mtime":1610019274242,"results":"43","hashOfConfig":"40"},{"size":5813,"mtime":1610358898279,"results":"44","hashOfConfig":"40"},{"size":7817,"mtime":1610352014663,"results":"45","hashOfConfig":"40"},{"size":5032,"mtime":1609438319420,"results":"46","hashOfConfig":"40"},{"size":5897,"mtime":1609438319419,"results":"47","hashOfConfig":"40"},{"size":516,"mtime":1609438319423,"results":"48","hashOfConfig":"40"},{"size":3635,"mtime":1609438319420,"results":"49","hashOfConfig":"40"},{"size":5466,"mtime":1610296947654,"results":"50","hashOfConfig":"40"},{"size":588,"mtime":1609438319417,"results":"51","hashOfConfig":"40"},{"size":12107,"mtime":1610295768384,"results":"52","hashOfConfig":"40"},{"size":525,"mtime":1609438319424,"results":"53","hashOfConfig":"40"},{"size":6828,"mtime":1609438319417,"results":"54","hashOfConfig":"40"},{"size":12578,"mtime":1610295800367,"results":"55","hashOfConfig":"40"},{"size":160,"mtime":1609438319421,"results":"56","hashOfConfig":"40"},{"size":6803,"mtime":1609961260777,"results":"57","hashOfConfig":"40"},{"size":172,"mtime":1609438319421,"results":"58","hashOfConfig":"40"},{"size":433,"mtime":1609438319428,"results":"59","hashOfConfig":"40"},{"size":164,"mtime":1609438319429,"results":"60","hashOfConfig":"40"},{"size":2939,"mtime":1609438319422,"results":"61","hashOfConfig":"40"},{"size":631,"mtime":1609835760133,"results":"62","hashOfConfig":"40"},{"size":807,"mtime":1609934587822,"results":"63","hashOfConfig":"40"},{"size":476,"mtime":1609438319424,"results":"64","hashOfConfig":"40"},{"size":1159,"mtime":1609800110150,"results":"65","hashOfConfig":"40"},{"size":2074,"mtime":1609438319422,"results":"66","hashOfConfig":"40"},{"size":3217,"mtime":1609438319423,"results":"67","hashOfConfig":"40"},{"size":5127,"mtime":1610296971671,"results":"68","hashOfConfig":"40"},{"size":3851,"mtime":1609516643774,"results":"69","hashOfConfig":"40"},{"size":5152,"mtime":1609948930972,"results":"70","hashOfConfig":"40"},{"size":3247,"mtime":1610286686070,"results":"71","hashOfConfig":"40"},{"size":354,"mtime":1610355507025,"results":"72","hashOfConfig":"40"},{"size":134,"mtime":1610355521261,"results":"73","hashOfConfig":"40"},{"size":4169,"mtime":1610019605085,"results":"74","hashOfConfig":"40"},{"size":1203,"mtime":1610357020080,"results":"75","hashOfConfig":"40"},{"size":9922,"mtime":1610359092888,"results":"76","hashOfConfig":"40"},{"size":821,"mtime":1610357388076,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"l6n5ia",{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"80"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"80"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"80"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"80"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"80"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"80"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"80"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"80"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"80"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"80"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"80"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"80"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\index.js",[],["167","168"],"C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\App.js",["169"],"C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\store.js",[],"C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\components\\NavBar.js",[],"C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\Pages\\Home.js",["170","171"],"C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\Pages\\Cart.js",["172"],"C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\Pages\\authPages\\RegisterComplete.js",["173"],"import React, { useState, useEffect } from 'react'\r\nimport { auth } from '../../firebase'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { REGISTER_USER } from '../../types/userTypes'\r\nimport { createUser } from '../../controllers/authControllers'\r\nimport {\r\n  Container,\r\n  makeStyles,\r\n  Button,\r\n  TextField,\r\n  CircularProgress,\r\n} from '@material-ui/core'\r\nimport { Alert } from '@material-ui/lab'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  inputField: {\r\n    '& label.Mui-focused': {\r\n      color: '#311b92',\r\n    },\r\n    '& .MuiInput-underline:after': {\r\n      borderBottomColor: '#311b92',\r\n    },\r\n    marginBottom: '20px',\r\n  },\r\n  button: {\r\n    marginBottom: '20px',\r\n  },\r\n}))\r\n\r\nconst RegisterComplete = ({ history }) => {\r\n  const user = useSelector((state) => state.user)\r\n  const dispatch = useDispatch()\r\n\r\n  const classes = useStyles()\r\n\r\n  const [values, setValues] = useState({\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n    loading: '',\r\n    error: '',\r\n  })\r\n\r\n  const { email, password, confirmPassword, loading, error } = values\r\n\r\n  if (user) {\r\n    localStorage.setItem(\r\n      'userInfo',\r\n      JSON.stringify({\r\n        email: user.email,\r\n        token: user.token,\r\n        role: user.role,\r\n        id: user.id,\r\n      })\r\n    )\r\n\r\n    history.push('/user/profile')\r\n  }\r\n\r\n  useEffect(() => {\r\n    setValues({\r\n      ...values,\r\n      email: window.localStorage.getItem('emailForRegistration'),\r\n    })\r\n  }, [])\r\n\r\n  const handleChange = (e) => {\r\n    setValues({ ...values, [e.target.name]: e.target.value })\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    setValues({ ...values, loading: true })\r\n\r\n    if (password !== confirmPassword) {\r\n      return setValues({\r\n        ...values,\r\n        loading: false,\r\n        error: 'The passwords do not match, please try again.',\r\n      })\r\n    }\r\n\r\n    if (password.length < 8) {\r\n      return setValues({\r\n        ...values,\r\n        loading: false,\r\n        error: 'Password has to be at least 8 characters long.',\r\n      })\r\n    }\r\n\r\n    try {\r\n      const result = await auth.signInWithEmailLink(email, window.location.href)\r\n\r\n      if (result.user.emailVerified) {\r\n        //remove email from local storage\r\n        window.localStorage.removeItem('emailForRegistration')\r\n        //get user id token\r\n        let user = auth.currentUser\r\n        await user.updatePassword(password)\r\n        const idTokenResult = await user.getIdTokenResult()\r\n\r\n        //redux store\r\n        createUser(idTokenResult.token)\r\n          .then((res) =>\r\n            dispatch({\r\n              type: REGISTER_USER,\r\n              payload: {\r\n                email: res.data.email,\r\n                token: idTokenResult.token,\r\n                role: res.data.role,\r\n                id: res.data._id,\r\n              },\r\n            })\r\n          )\r\n          .catch((error) =>\r\n            setValues({\r\n              ...values,\r\n              loading: false,\r\n              error: error.response.data.error,\r\n            })\r\n          )\r\n      }\r\n    } catch (error) {\r\n      setValues({ ...values, loading: false, error: error.message })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container\r\n      maxWidth={'sm'}\r\n      style={{ textAlign: 'center', paddingTop: '20px' }}\r\n    >\r\n      <h1>Complete Registration</h1>\r\n\r\n      {loading && <CircularProgress color='black' />}\r\n      {error && (\r\n        <Alert\r\n          style={{ margin: '15px 0' }}\r\n          severity='error'\r\n          onClose={() => {\r\n            setValues({ ...values, error: false })\r\n          }}\r\n        >\r\n          {error}\r\n        </Alert>\r\n      )}\r\n\r\n      <form onSubmit={handleSubmit} autoComplete='off'>\r\n        <TextField\r\n          onChange={handleChange}\r\n          className={classes.inputField}\r\n          value={email}\r\n          name='email'\r\n          label='Email'\r\n          fullWidth\r\n          type='email'\r\n          helperText='Enter your email'\r\n          disabled\r\n          required\r\n        />\r\n\r\n        <TextField\r\n          onChange={handleChange}\r\n          className={classes.inputField}\r\n          value={password}\r\n          name='password'\r\n          label='Password'\r\n          fullWidth\r\n          type='password'\r\n          helperText='Enter your password'\r\n          required\r\n        />\r\n\r\n        <TextField\r\n          onChange={handleChange}\r\n          className={classes.inputField}\r\n          value={confirmPassword}\r\n          name='confirmPassword'\r\n          label='Confirm passwrod'\r\n          fullWidth\r\n          type='password'\r\n          helperText='Enter your password again'\r\n          required\r\n        />\r\n\r\n        <Button\r\n          style={{ backgroundColor: '#311b92', color: 'white' }}\r\n          className={classes.button}\r\n          type='submit'\r\n          fullWidth\r\n          variant='contained'\r\n        >\r\n          Complete Registration\r\n        </Button>\r\n      </form>\r\n      {JSON.stringify(values)}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default RegisterComplete\r\n","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\Pages\\authPages\\Login.js",[],"C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\components\\routes\\AdminRoute.js",[],"C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\Pages\\authPages\\Register.js",["174"],"import { Container, makeStyles, Button, TextField } from '@material-ui/core'\r\nimport React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SendIcon from '@material-ui/icons/Send'\r\nimport { auth } from '../../firebase'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport { Alert } from '@material-ui/lab'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  inputField: {\r\n    '& label.Mui-focused': {\r\n      color: '#7e57c2',\r\n    },\r\n    '& .MuiInput-underline:after': {\r\n      borderBottomColor: '#7e57c2',\r\n    },\r\n    marginBottom: '20px',\r\n    padding: '5px',\r\n  },\r\n  button: {\r\n    marginBottom: '20px',\r\n  },\r\n}))\r\n\r\nconst Register = ({ history }) => {\r\n  const { REACT_APP_CLIENT_URL } = process.env\r\n  const classes = useStyles()\r\n\r\n  const user = useSelector((state) => state.user)\r\n\r\n  const [state, setState] = useState({\r\n    email: '',\r\n    loading: '',\r\n    error: '',\r\n    success: '',\r\n  })\r\n\r\n  if (user && user.role === 'admin') {\r\n    history.push('/admin/dashboard')\r\n  } else if (user && user.role !== 'admin') {\r\n    // check if intended\r\n    let intended = history.location.state\r\n    if (intended) {\r\n      history.push(intended.from)\r\n    } else {\r\n      history.push('/user/profile')\r\n    }\r\n  }\r\n\r\n  const { email, error, loading, success } = state\r\n\r\n  const handleChange = (e) => {\r\n    setState({ ...state, [e.target.name]: e.target.value })\r\n  }\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault()\r\n    setState({ ...state, loading: true })\r\n    try {\r\n      const config = {\r\n        url: `${REACT_APP_CLIENT_URL}/register/complete`,\r\n        handleCodeInApp: true,\r\n      }\r\n\r\n      await auth.sendSignInLinkToEmail(email, config)\r\n\r\n      //save user email in local storage\r\n      window.localStorage.setItem('emailForRegistration', email)\r\n      setState({\r\n        ...state,\r\n        email: '',\r\n        loading: false,\r\n        success: `Email was succefully sent to ${email}, check your mailbox to finish the registration.`,\r\n      })\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container\r\n      maxWidth={'sm'}\r\n      style={{ textAlign: 'center', paddingTop: '20px' }}\r\n    >\r\n      <h1>Register</h1>\r\n      <p style={{ color: 'gray' }}>\r\n        Please enter a valid email, confirmation link will be sent to your\r\n        mailbox in order to complete your registration.\r\n      </p>\r\n      {loading && <CircularProgress color='black' />}\r\n      {success && (\r\n        <Alert\r\n          style={{ margin: '15px 0' }}\r\n          onClose={() => {\r\n            setState({ ...state, success: false })\r\n          }}\r\n        >\r\n          {success}\r\n        </Alert>\r\n      )}\r\n\r\n      <form onSubmit={submitHandler} autoComplete='off'>\r\n        <TextField\r\n          onChange={handleChange}\r\n          className={classes.inputField}\r\n          value={email}\r\n          name='email'\r\n          label='Email'\r\n          fullWidth\r\n          type='email'\r\n          helperText='Enter your email'\r\n          required\r\n        />\r\n\r\n        <Button\r\n          style={{ backgroundColor: '#7e57c2', color: 'white' }}\r\n          className={classes.button}\r\n          type='submit'\r\n          fullWidth\r\n          startIcon={<SendIcon />}\r\n          variant='contained'\r\n        >\r\n          Submit Registration\r\n        </Button>\r\n      </form>\r\n      <p>\r\n        Already have an account?{' '}\r\n        <Link style={{ color: 'GrayText', marginLeft: '5px' }} to='/login'>\r\n          Login\r\n        </Link>\r\n      </p>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Register\r\n","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\Pages\\Shop.js",["175","176","177","178","179"],"import {\r\n  Button,\r\n  CircularProgress,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n} from '@material-ui/core'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { listCategories } from '../controllers/categoryControllers'\r\nimport { makeStyles } from '@material-ui/core'\r\nimport { getProducts } from '../controllers/productControllers'\r\nimport HomeCard from '../components/HomeCard'\r\nimport { Pagination, PaginationItem } from '@material-ui/lab'\r\n\r\nconst useStyles = makeStyles({\r\n  flexContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    padding: 0,\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n    margin: '15px 0',\r\n  },\r\n  link: {\r\n    textDecoration: 'none',\r\n    display: 'block',\r\n  },\r\n})\r\n\r\nconst Shop = ({ match }) => {\r\n  const classes = useStyles()\r\n\r\n  const pageNumber = match.params.pageNumber || 1\r\n\r\n  const [state, setState] = useState({\r\n    loading: '',\r\n    error: '',\r\n    categories: '',\r\n    products: [],\r\n    page: '',\r\n    pages: '',\r\n    pageSize: '',\r\n    sort: '',\r\n    order: '',\r\n    filter: {},\r\n  })\r\n\r\n  const {\r\n    loading,\r\n    error,\r\n    categories,\r\n    products,\r\n    page,\r\n    pages,\r\n    pageSize,\r\n    filter,\r\n    sort,\r\n    order,\r\n  } = state\r\n\r\n  const onLoad = async () => {\r\n    setState({ ...state, loading: true })\r\n    try {\r\n      const categories = await listCategories()\r\n      const res = await getProducts(pageNumber, 8, sort, order)\r\n      setState({\r\n        ...state,\r\n        loading: false,\r\n        categories: categories.data,\r\n        products: res.data.products,\r\n        page: res.data.page,\r\n        pages: res.data.pages,\r\n        pageSize: res.data.pageSize,\r\n      })\r\n    } catch (error) {\r\n      console.log(error)\r\n      setState({ ...state, loading: false, error: error.response.data.error })\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    onLoad()\r\n  }, [pageNumber, sort, order])\r\n\r\n  const handleFilterChange = (e) => {\r\n    setState({\r\n      ...state,\r\n      sort: e.target.value.sort,\r\n      order: e.target.value.order,\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1 style={{ textAlign: 'center' }}>Shop</h1>\r\n      <h2\r\n        style={{\r\n          textAlign: 'center',\r\n          color: 'black',\r\n          backgroundColor: '#fafafa',\r\n        }}\r\n      >\r\n        Categories and Filters\r\n      </h2>\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          flexWrap: 'wrap',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n        }}\r\n      >\r\n        <h4 style={{ display: 'inline', margin: '8px 15px 0 15px' }}>\r\n          {' '}\r\n          Filter products:\r\n        </h4>\r\n        <FormControl style={{ margin: ' 0 15px', width: '300px' }}>\r\n          <InputLabel id=\"filters\">Choose filter</InputLabel>\r\n          <Select\r\n            labelId=\"filters\"\r\n            id=\"filters\"\r\n            onChange={handleFilterChange}\r\n            defaultValue=\"\"\r\n          >\r\n            <MenuItem value={{ sort: 'createdAt', order: -1 }}>\r\n              Default: From newest to oldest\r\n            </MenuItem>\r\n            <MenuItem value={{ sort: 'price', order: -1 }}>\r\n              Price: from highest to lowest\r\n            </MenuItem>\r\n            <MenuItem value={{ sort: 'price', order: 1 }}>\r\n              Price: from lowest to highest\r\n            </MenuItem>\r\n\r\n            {/* <MenuItem value={{ sort: 'sold', order: '-1' }}>\r\n              Most popular products\r\n            </MenuItem> */}\r\n            <MenuItem value={{ sort: 'sold', order: -1 }}>\r\n              Best sellers\r\n            </MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </div>\r\n      <div style={{ margin: '20px 0' }} className={classes.flexContainer}>\r\n        {loading ? (\r\n          <CircularProgress />\r\n        ) : (\r\n          categories &&\r\n          categories.map((c, i) => (\r\n            <Link\r\n              style={{ margin: '10px' }}\r\n              key={i}\r\n              className={classes.link}\r\n              to={`/category/${c.slug}`}\r\n            >\r\n              <Button\r\n                style={{\r\n                  color: 'GrayText',\r\n                  fontSize: '18px',\r\n                }}\r\n              >\r\n                {c.name}\r\n              </Button>\r\n            </Link>\r\n          ))\r\n        )}\r\n      </div>\r\n\r\n      <h2\r\n        style={{\r\n          textAlign: 'center',\r\n          color: 'black',\r\n          backgroundColor: '#fafafa',\r\n        }}\r\n      >\r\n        Products\r\n      </h2>\r\n      <div\r\n        style={{ display: 'flex', flexWrap: 'wrap', justifyContent: 'center' }}\r\n      >\r\n        {loading ? (\r\n          <CircularProgress />\r\n        ) : (\r\n          products.map((p, i) => <HomeCard key={i} item={p} />)\r\n        )}\r\n      </div>\r\n      <div\r\n        style={{\r\n          marginBottom: '50px',\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n        }}\r\n      >\r\n        {pages && (\r\n          <Pagination\r\n            hidePrevButton\r\n            hideNextButton\r\n            showFirstButton\r\n            showLastButton\r\n            color=\"primary\"\r\n            count={pages}\r\n            renderItem={(item) => (\r\n              <PaginationItem\r\n                component={Link}\r\n                page={pageNumber}\r\n                to={`/shop/${item.page}`}\r\n                {...item}\r\n              />\r\n            )}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Shop\r\n","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\Pages\\adminPages\\AdminDashboard.js",[],"C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\Pages\\adminPages\\CreateProduct.js",["180","181"],"import {\r\n  Badge,\r\n  Button,\r\n  CircularProgress,\r\n  FormControl,\r\n  Hidden,\r\n  InputLabel,\r\n  MenuItem,\r\n  Paper,\r\n  Select,\r\n  TextField,\r\n} from '@material-ui/core'\r\nimport React, { useState, useEffect } from 'react'\r\nimport AdminNav from '../../components/admin/AdminNav'\r\nimport AdminSideNav from '../../components/admin/AdminSideNav'\r\nimport { listCategories } from '../../controllers/categoryControllers'\r\nimport { useSelector } from 'react-redux'\r\nimport { productCreate } from '../../controllers/productControllers'\r\nimport { storage } from '../../firebase'\r\nimport { Alert } from '@material-ui/lab'\r\nimport Resizer from 'react-image-file-resizer'\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload'\r\nimport CreateIcon from '@material-ui/icons/Create'\r\n\r\nconst CreateProduct = () => {\r\n  const user = useSelector((state) => state.user)\r\n\r\n  const [state, setState] = useState({\r\n    loading: '',\r\n    uploadLoading: '',\r\n    error: '',\r\n    uploadError: '',\r\n    success: '',\r\n    categories: '',\r\n    loadCategories: '',\r\n    name: '',\r\n    category: '',\r\n    image: [],\r\n    description: '',\r\n    price: '',\r\n    quantity: '',\r\n  })\r\n\r\n  const [imgUrl, setImgUrl] = useState([])\r\n\r\n  const {\r\n    loading,\r\n    uploadLoading,\r\n    error,\r\n    uploadError,\r\n    success,\r\n    categories,\r\n    loadCategories,\r\n    name,\r\n    category,\r\n    image,\r\n    description,\r\n    price,\r\n    quantity,\r\n  } = state\r\n\r\n  const getCategories = async () => {\r\n    setState({ ...state, loadCategories: true })\r\n    try {\r\n      const { data } = await listCategories()\r\n      setState({ ...state, loadCategories: false, categories: data })\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  useEffect(() => getCategories(), [])\r\n\r\n  const handleCategoryChange = (e) => {\r\n    setState({ ...state, category: e.target.value })\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    setState({ ...state, [e.target.name]: e.target.value })\r\n  }\r\n\r\n  const handleImageChange = async (e) => {\r\n    setState({ ...state, image: e.target.files })\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    setState({ ...state, loading: true })\r\n    try {\r\n      await productCreate(user.token, {\r\n        name,\r\n        description,\r\n        category,\r\n        price,\r\n        quantity,\r\n        images: imgUrl,\r\n      })\r\n      setState({\r\n        ...state,\r\n        name: '',\r\n        category: '',\r\n        image: [],\r\n        description: '',\r\n        price: '',\r\n        quantity: '',\r\n        loading: false,\r\n        error: false,\r\n        success: 'Product created succefully',\r\n      })\r\n      setImgUrl([])\r\n    } catch (error) {\r\n      setState({\r\n        ...state,\r\n        error: error.response.data.error,\r\n        loading: false,\r\n        success: false,\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleUpload = async () => {\r\n    setState({ ...state, uploadLoading: true })\r\n\r\n    if (image.length === 0) {\r\n      return setState({\r\n        ...state,\r\n        uploadLoading: false,\r\n        uploadError: 'Please choose at least one image to upload.',\r\n      })\r\n    }\r\n    for (let i = 0, len = image.length; i < len; i++) {\r\n      const resizeFile = (file) =>\r\n        new Promise((resolve) => {\r\n          Resizer.imageFileResizer(\r\n            file,\r\n            600,\r\n            600,\r\n            'JPEG',\r\n            100,\r\n            0,\r\n            (uri) => {\r\n              resolve(uri)\r\n            },\r\n            'base64'\r\n          )\r\n        })\r\n\r\n      const file = image[i]\r\n      const newFile = await resizeFile(file)\r\n      let imgString = newFile.split('base64,')[1]\r\n      let id = uuidv4()\r\n\r\n      const uploadTask = storage\r\n        .ref(`images/${id}`)\r\n        .putString(imgString, 'base64', { contentType: 'image/jpeg' })\r\n\r\n      uploadTask.on(\r\n        'state_changed',\r\n        (snapshot) => {},\r\n        (error) => {\r\n          console.log(error)\r\n          return setState({\r\n            ...state,\r\n            uploadLoading: false,\r\n            uploadError: 'could not upload the images.',\r\n          })\r\n        },\r\n        () => {\r\n          storage\r\n            .ref('images')\r\n            .child(id)\r\n            .getDownloadURL()\r\n            .then((url) => {\r\n              setImgUrl((imgUrl) => [...imgUrl, url])\r\n              setState({ ...state, uploadLoading: false })\r\n            })\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1 style={{ textAlign: 'center', margin: '30px 0' }}>Admin Dashboard</h1>\r\n\r\n      <Hidden smDown>\r\n        <AdminNav />\r\n      </Hidden>\r\n\r\n      <Hidden mdUp>\r\n        <AdminSideNav />\r\n      </Hidden>\r\n\r\n      <h2 style={{ textAlign: 'center', margin: '30px 0' }}>Create Product</h2>\r\n      {loadCategories && (\r\n        <div style={{ textAlign: 'center', margin: '15px 0' }}>\r\n          <CircularProgress color=\"black\" />\r\n        </div>\r\n      )}\r\n      <div style={{ maxWidth: '500px', margin: 'auto' }}>\r\n        <form onSubmit={handleSubmit}>\r\n          <Paper elevation={1} style={{ padding: '15px' }}>\r\n            <TextField\r\n              onChange={handleChange}\r\n              style={{ margin: '15px 0' }}\r\n              name=\"name\"\r\n              value={name}\r\n              label=\"Name\"\r\n              fullWidth\r\n              type=\"text\"\r\n              helperText=\"Enter product name\"\r\n              required\r\n            ></TextField>\r\n\r\n            <TextField\r\n              onChange={handleChange}\r\n              style={{ margin: '15px 0' }}\r\n              name=\"description\"\r\n              value={description}\r\n              label=\"Description\"\r\n              multiline\r\n              rows={5}\r\n              fullWidth\r\n              type=\"text\"\r\n              helperText=\"Enter product description\"\r\n              required\r\n            ></TextField>\r\n\r\n            <TextField\r\n              onChange={handleChange}\r\n              style={{ margin: '15px 0' }}\r\n              name=\"price\"\r\n              value={price}\r\n              label=\"Price\"\r\n              fullWidth\r\n              type=\"number\"\r\n              helperText=\"Enter product price\"\r\n              required\r\n            ></TextField>\r\n\r\n            <TextField\r\n              onChange={handleChange}\r\n              style={{ margin: '15px 0' }}\r\n              name=\"quantity\"\r\n              value={quantity}\r\n              label=\"Quantity\"\r\n              fullWidth\r\n              type=\"number\"\r\n              helperText=\"Enter product quantity\"\r\n              required\r\n            ></TextField>\r\n\r\n            <FormControl fullWidth required style={{ margin: '15px 0' }}>\r\n              <InputLabel id=\"demo-simple-select-label\">\r\n                Select Category\r\n              </InputLabel>\r\n              <Select\r\n                onChange={handleCategoryChange}\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                value={category}\r\n              >\r\n                {categories &&\r\n                  categories.map((c) => (\r\n                    <MenuItem key={c._id} value={c._id}>\r\n                      {c.name}\r\n                    </MenuItem>\r\n                  ))}\r\n              </Select>\r\n            </FormControl>\r\n\r\n            <input\r\n              style={{\r\n                fontSize: '16px',\r\n                display: 'flex',\r\n                flexWrap: 'wrap',\r\n                marginTop: '30px',\r\n              }}\r\n              labelId=\"images\"\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              multiple\r\n              name=\"image\"\r\n              onChange={handleImageChange}\r\n            />\r\n            {uploadLoading && (\r\n              <div style={{ textAlign: 'center', margin: '15px 0' }}>\r\n                <CircularProgress color=\"black\" />\r\n              </div>\r\n            )}\r\n            {uploadError && (\r\n              <Alert\r\n                style={{ margin: '15px 0' }}\r\n                severity=\"error\"\r\n                onClose={() => {\r\n                  setState({ ...state, uploadError: false })\r\n                }}\r\n              >\r\n                {uploadError}\r\n              </Alert>\r\n            )}\r\n\r\n            <p style={{ color: 'GrayText' }}>\r\n              *Select the images you want to upload, after chosing all the\r\n              images press on upload images button to upload them to the server.\r\n            </p>\r\n            <Button\r\n              onClick={handleUpload}\r\n              startIcon={<CloudUploadIcon />}\r\n              style={{\r\n                backgroundColor: '#0d47a1',\r\n                color: 'white',\r\n                margin: '15px 0',\r\n                padding: '5px 15px',\r\n              }}\r\n            >\r\n              Upload Images\r\n            </Button>\r\n            <div>\r\n              <h4>Uploaded images preview:</h4>\r\n\r\n              {imgUrl.length === 0 ? (\r\n                <h5>No images uploaded</h5>\r\n              ) : (\r\n                <>\r\n                  <div\r\n                    style={{\r\n                      display: 'flex',\r\n                      flexDirection: 'row',\r\n                      flexWrap: 'wrap',\r\n                      justifyContent: 'center',\r\n                      width: '80%',\r\n                      margin: 'auto',\r\n                    }}\r\n                  >\r\n                    {imgUrl.map((img) => (\r\n                      <div style={{ margin: '15px' }}>\r\n                        <Badge\r\n                          onClick={() => {\r\n                            let fileRef = storage.refFromURL(img)\r\n                            fileRef\r\n                              .delete()\r\n                              .then(() => {\r\n                                // File deleted successfully\r\n                                console.log('File Deleted')\r\n                                let newArray = imgUrl.filter(\r\n                                  (image) => image !== img\r\n                                )\r\n\r\n                                setImgUrl(newArray)\r\n                              })\r\n                              .catch((error) => {\r\n                                console.log(error)\r\n                              })\r\n                          }}\r\n                          color=\"secondary\"\r\n                          badgeContent={\r\n                            <Button style={{ color: 'white' }}>Delete</Button>\r\n                          }\r\n                        >\r\n                          <img\r\n                            style={{\r\n                              maxHeight: '80px',\r\n                              width: 'auto',\r\n                            }}\r\n                            src={img}\r\n                          />\r\n                        </Badge>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </>\r\n              )}\r\n            </div>\r\n          </Paper>\r\n\r\n          {loading && (\r\n            <div style={{ textAlign: 'center', margin: '15px 0' }}>\r\n              <CircularProgress color=\"black\" />\r\n            </div>\r\n          )}\r\n          {error && (\r\n            <Alert\r\n              style={{ margin: '15px 0' }}\r\n              severity=\"error\"\r\n              onClose={() => {\r\n                setState({ ...state, error: false })\r\n              }}\r\n            >\r\n              {error}\r\n            </Alert>\r\n          )}\r\n          {success && (\r\n            <Alert\r\n              style={{ margin: '15px 0' }}\r\n              severity=\"success\"\r\n              onClose={() => {\r\n                setState({ ...state, success: false })\r\n              }}\r\n            >\r\n              {success}\r\n            </Alert>\r\n          )}\r\n\r\n          <Button\r\n            style={{\r\n              backgroundColor: 'black',\r\n              color: 'white',\r\n              margin: '40px 0 80px 0',\r\n            }}\r\n            fullWidth\r\n            startIcon={<CreateIcon />}\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n          >\r\n            Create Product\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CreateProduct\r\n","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\components\\routes\\PrivateRoute.js",[],"C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\Pages\\adminPages\\AdminCategories.js",["182"],"import {\r\n  Button,\r\n  CircularProgress,\r\n  Hidden,\r\n  List,\r\n  ListItem,\r\n  ListItemSecondaryAction,\r\n  ListItemText,\r\n  TextField,\r\n} from '@material-ui/core'\r\nimport React, { useState, useEffect } from 'react'\r\nimport AdminNav from '../../components/admin/AdminNav'\r\nimport AdminSideNav from '../../components/admin/AdminSideNav'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport {\r\n  createCategory,\r\n  listCategories,\r\n  deleteCategory,\r\n} from '../../controllers/categoryControllers'\r\nimport { useSelector } from 'react-redux'\r\nimport { Alert } from '@material-ui/lab'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport Divider from '@material-ui/core/Divider'\r\n\r\nconst AdminCategories = () => {\r\n  const user = useSelector((state) => state.user)\r\n\r\n  const [state, setState] = useState({\r\n    name: '',\r\n    loading: '',\r\n    loadCategories: '',\r\n    error: '',\r\n    success: '',\r\n    deleteSuccess: '',\r\n    deleteError: '',\r\n    categories: '',\r\n  })\r\n\r\n  const {\r\n    name,\r\n    loading,\r\n    error,\r\n    success,\r\n    loadCategories,\r\n    categories,\r\n    deleteSuccess,\r\n    deleteError,\r\n  } = state\r\n\r\n  const getCategories = async () => {\r\n    setState({ ...state, loadCategories: true })\r\n    try {\r\n      const { data } = await listCategories()\r\n      setState({ ...state, loadCategories: false, categories: data })\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  useEffect(() => getCategories(), [])\r\n\r\n  const handleChange = (e) => {\r\n    setState({ ...state, [e.target.name]: e.target.value })\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    setState({ ...state, loading: true })\r\n    try {\r\n      await createCategory(user.token, name)\r\n\r\n      const { data } = await listCategories()\r\n      setState({\r\n        ...state,\r\n        loadCategories: false,\r\n        categories: data,\r\n        success: 'Category Created succefully',\r\n        name: '',\r\n        loading: false,\r\n        error: false,\r\n      })\r\n    } catch (error) {\r\n      setState({\r\n        ...state,\r\n        loading: false,\r\n        error: error.response.data.error,\r\n        success: false,\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleDelete = async (token, slug) => {\r\n    setState({ ...state, loadCategories: true })\r\n    try {\r\n      await deleteCategory(token, slug)\r\n      const { data } = await listCategories()\r\n      setState({\r\n        ...state,\r\n        loadCategories: false,\r\n        categories: data,\r\n        deleteError: false,\r\n        deleteSuccess: 'Category Deleted succefully',\r\n      })\r\n    } catch (error) {\r\n      console.log(error)\r\n      setState({\r\n        ...state,\r\n        loadCategories: false,\r\n        deleteSuccess: false,\r\n        deleteError: error.response.data.error,\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1 style={{ textAlign: 'center', margin: '30px 0' }}>Admin Dashboard</h1>\r\n\r\n      <Hidden smDown>\r\n        <AdminNav />\r\n      </Hidden>\r\n\r\n      <Hidden mdUp>\r\n        <AdminSideNav />\r\n      </Hidden>\r\n      <h2 style={{ margin: '40px 0', textAlign: 'center' }}>Categories</h2>\r\n      <Grid container>\r\n        <Grid item md={6} xs={12}>\r\n          <h3 style={{ textAlign: 'center', backgroundColor: '#fafafa' }}>\r\n            Create new category\r\n          </h3>\r\n\r\n          {loading && (\r\n            <div style={{ textAlign: 'center', margin: '15px 0' }}>\r\n              <CircularProgress color='black' />\r\n            </div>\r\n          )}\r\n          {error && (\r\n            <Alert\r\n              style={{ margin: '15px 0' }}\r\n              severity='error'\r\n              onClose={() => {\r\n                setState({ ...state, error: false })\r\n              }}\r\n            >\r\n              {error}\r\n            </Alert>\r\n          )}\r\n\r\n          {success && (\r\n            <Alert\r\n              style={{ margin: '15px 0' }}\r\n              severity='success'\r\n              onClose={() => {\r\n                setState({ ...state, success: false })\r\n              }}\r\n            >\r\n              {success}\r\n            </Alert>\r\n          )}\r\n\r\n          <form onSubmit={handleSubmit} autoComplete='off'>\r\n            <TextField\r\n              onChange={handleChange}\r\n              value={name}\r\n              name='name'\r\n              label='Category Name'\r\n              fullWidth\r\n              type='text'\r\n              helperText='Enter Category Name'\r\n              required\r\n            />\r\n\r\n            <Button\r\n              style={{\r\n                backgroundColor: '#212121',\r\n                color: 'white',\r\n                margin: '30px 0',\r\n              }}\r\n              className={''}\r\n              type='submit'\r\n              variant='contained'\r\n            >\r\n              Submit\r\n            </Button>\r\n          </form>\r\n        </Grid>\r\n        <Grid style={{ marginBottom: '50px' }} item md={6} xs={12}>\r\n          <h3 style={{ textAlign: 'center', backgroundColor: '#fafafa' }}>\r\n            Categories list\r\n          </h3>\r\n          {loadCategories && (\r\n            <div style={{ textAlign: 'center', margin: '15px 0' }}>\r\n              <CircularProgress color='black' />\r\n            </div>\r\n          )}\r\n          {deleteSuccess && (\r\n            <Alert\r\n              style={{ margin: '15px' }}\r\n              severity='success'\r\n              onClose={() => {\r\n                setState({ ...state, deleteSuccess: false })\r\n              }}\r\n            >\r\n              {deleteSuccess}\r\n            </Alert>\r\n          )}\r\n          {deleteError && (\r\n            <Alert\r\n              style={{ margin: '15px' }}\r\n              severity='error'\r\n              onClose={() => {\r\n                setState({ ...state, deleteError: false })\r\n              }}\r\n            >\r\n              {deleteError}\r\n            </Alert>\r\n          )}\r\n\r\n          <List\r\n            style={{\r\n              width: '250px',\r\n              margin: 'auto',\r\n              overflowY: 'scroll',\r\n              maxHeight: '500px',\r\n            }}\r\n          >\r\n            {categories &&\r\n              categories.map((c) => (\r\n                <React.Fragment key={c._id}>\r\n                  <ListItem style={{ margin: '5px 0' }}>\r\n                    <ListItemText primary={c.name} />\r\n                    <ListItemSecondaryAction>\r\n                      <IconButton edge='end' aria-label='delete'>\r\n                        <DeleteIcon\r\n                          onClick={() => handleDelete(user.token, c.slug)}\r\n                        />\r\n                      </IconButton>\r\n                    </ListItemSecondaryAction>\r\n                  </ListItem>\r\n                  <Divider />\r\n                </React.Fragment>\r\n              ))}\r\n          </List>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AdminCategories\r\n","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\Pages\\adminPages\\UpdateProduct.js",["183","184"],"import {\r\n  Badge,\r\n  Button,\r\n  CircularProgress,\r\n  FormControl,\r\n  Hidden,\r\n  InputLabel,\r\n  MenuItem,\r\n  Paper,\r\n  Select,\r\n  TextField,\r\n} from '@material-ui/core'\r\nimport React, { useState, useEffect } from 'react'\r\nimport AdminNav from '../../components/admin/AdminNav'\r\nimport AdminSideNav from '../../components/admin/AdminSideNav'\r\nimport { listCategories } from '../../controllers/categoryControllers'\r\nimport { useSelector } from 'react-redux'\r\nimport {\r\n  readProduct,\r\n  productUpdate,\r\n} from '../../controllers/productControllers'\r\nimport { storage } from '../../firebase'\r\nimport { Alert } from '@material-ui/lab'\r\nimport Resizer from 'react-image-file-resizer'\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload'\r\nimport CreateIcon from '@material-ui/icons/Create'\r\n\r\nconst UpdateProduct = ({ match, history }) => {\r\n  const user = useSelector((state) => state.user)\r\n\r\n  const id = match.params.id\r\n\r\n  const [state, setState] = useState({\r\n    loading: '',\r\n    uploadLoading: '',\r\n    error: '',\r\n    uploadError: '',\r\n    success: '',\r\n    categories: '',\r\n    loadCategories: '',\r\n    name: '',\r\n    category: '',\r\n    image: [],\r\n    description: '',\r\n    price: '',\r\n    quantity: '',\r\n  })\r\n\r\n  const [imgUrl, setImgUrl] = useState([])\r\n\r\n  const {\r\n    loading,\r\n    uploadLoading,\r\n    error,\r\n    uploadError,\r\n    success,\r\n    categories,\r\n    loadCategories,\r\n    name,\r\n    category,\r\n    image,\r\n    description,\r\n    price,\r\n    quantity,\r\n  } = state\r\n\r\n  const getProduct = async () => {\r\n    setState({ ...state, loading: true })\r\n    try {\r\n      const categories = await listCategories()\r\n      const { data } = await readProduct(id)\r\n      setImgUrl(data.images && data.images)\r\n      setState({\r\n        ...state,\r\n        loading: false,\r\n        name: data.name,\r\n        category: data.category && data.category._id,\r\n        description: data.description,\r\n        price: data.price,\r\n        quantity: data.quantity,\r\n        categories: categories.data,\r\n      })\r\n      // setState({})\r\n    } catch (error) {\r\n      console.log(error)\r\n      setState({ ...state, loading: false, error: error.response.data.error })\r\n    }\r\n  }\r\n\r\n  useEffect(() => getProduct(), [])\r\n\r\n  const handleCategoryChange = (e) => {\r\n    setState({ ...state, category: e.target.value })\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    setState({ ...state, [e.target.name]: e.target.value })\r\n  }\r\n\r\n  const handleImageChange = async (e) => {\r\n    setState({ ...state, image: e.target.files })\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    setState({ ...state, loading: true })\r\n    try {\r\n      await productUpdate(id, user.token, {\r\n        name,\r\n        description,\r\n        category,\r\n        price,\r\n        quantity,\r\n        images: imgUrl,\r\n      })\r\n      setState({\r\n        ...state,\r\n        name: '',\r\n        category: '',\r\n        image: [],\r\n        description: '',\r\n        price: '',\r\n        quantity: '',\r\n        loading: false,\r\n        error: false,\r\n      })\r\n      setImgUrl([])\r\n      history.push('/admin/products')\r\n    } catch (error) {\r\n      setState({\r\n        ...state,\r\n        error: error.response.data.error,\r\n        loading: false,\r\n        success: false,\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleUpload = async () => {\r\n    setState({ ...state, uploadLoading: true })\r\n\r\n    if (image.length === 0) {\r\n      return setState({\r\n        ...state,\r\n        uploadLoading: false,\r\n        uploadError: 'Please choose at least one image to upload.',\r\n      })\r\n    }\r\n    for (let i = 0, len = image.length; i < len; i++) {\r\n      const resizeFile = (file) =>\r\n        new Promise((resolve) => {\r\n          Resizer.imageFileResizer(\r\n            file,\r\n            600,\r\n            600,\r\n            'JPEG',\r\n            100,\r\n            0,\r\n            (uri) => {\r\n              resolve(uri)\r\n            },\r\n            'base64'\r\n          )\r\n        })\r\n\r\n      const file = image[i]\r\n      const newFile = await resizeFile(file)\r\n      let imgString = newFile.split('base64,')[1]\r\n      let id = uuidv4()\r\n\r\n      const uploadTask = storage\r\n        .ref(`images/${id}`)\r\n        .putString(imgString, 'base64', { contentType: 'image/jpeg' })\r\n\r\n      uploadTask.on(\r\n        'state_changed',\r\n        (snapshot) => {},\r\n        (error) => {\r\n          console.log(error)\r\n          return setState({\r\n            ...state,\r\n            uploadLoading: false,\r\n            uploadError: 'could not upload the images.',\r\n          })\r\n        },\r\n        () => {\r\n          storage\r\n            .ref('images')\r\n            .child(id)\r\n            .getDownloadURL()\r\n            .then((url) => {\r\n              setImgUrl((imgUrl) => [...imgUrl, url])\r\n              setState({ ...state, uploadLoading: false })\r\n            })\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1 style={{ textAlign: 'center', margin: '30px 0' }}>Admin Dashboard</h1>\r\n\r\n      <Hidden smDown>\r\n        <AdminNav />\r\n      </Hidden>\r\n\r\n      <Hidden mdUp>\r\n        <AdminSideNav />\r\n      </Hidden>\r\n\r\n      <h2 style={{ textAlign: 'center', margin: '30px 0' }}>Update Product</h2>\r\n      {loadCategories && (\r\n        <div style={{ textAlign: 'center', margin: '15px 0' }}>\r\n          <CircularProgress color=\"black\" />\r\n        </div>\r\n      )}\r\n      <div style={{ maxWidth: '500px', margin: 'auto' }}>\r\n        <form onSubmit={handleSubmit}>\r\n          <Paper elevation={1} style={{ padding: '15px' }}>\r\n            <TextField\r\n              onChange={handleChange}\r\n              style={{ margin: '15px 0' }}\r\n              name=\"name\"\r\n              value={name}\r\n              label=\"Name\"\r\n              fullWidth\r\n              type=\"text\"\r\n              helperText=\"Enter product name\"\r\n              required\r\n            ></TextField>\r\n\r\n            <TextField\r\n              onChange={handleChange}\r\n              style={{ margin: '15px 0' }}\r\n              name=\"description\"\r\n              value={description}\r\n              label=\"Description\"\r\n              multiline\r\n              rows={5}\r\n              fullWidth\r\n              type=\"text\"\r\n              helperText=\"Enter product description\"\r\n              required\r\n            ></TextField>\r\n\r\n            <TextField\r\n              onChange={handleChange}\r\n              style={{ margin: '15px 0' }}\r\n              name=\"price\"\r\n              value={price}\r\n              label=\"Price\"\r\n              fullWidth\r\n              type=\"number\"\r\n              helperText=\"Enter product price\"\r\n              required\r\n            ></TextField>\r\n\r\n            <TextField\r\n              onChange={handleChange}\r\n              style={{ margin: '15px 0' }}\r\n              name=\"quantity\"\r\n              value={quantity}\r\n              label=\"Quantity\"\r\n              fullWidth\r\n              type=\"number\"\r\n              helperText=\"Enter product quantity\"\r\n              required\r\n            ></TextField>\r\n\r\n            <FormControl fullWidth required style={{ margin: '15px 0' }}>\r\n              <InputLabel id=\"demo-simple-select-label\">\r\n                Select Category\r\n              </InputLabel>\r\n              <Select\r\n                onChange={handleCategoryChange}\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                value={category}\r\n              >\r\n                {categories &&\r\n                  categories.map((c) => (\r\n                    <MenuItem key={c._id} value={c._id}>\r\n                      {c.name}\r\n                    </MenuItem>\r\n                  ))}\r\n              </Select>\r\n            </FormControl>\r\n\r\n            <input\r\n              style={{\r\n                fontSize: '16px',\r\n                display: 'flex',\r\n                flexWrap: 'wrap',\r\n                marginTop: '30px',\r\n              }}\r\n              labelId=\"images\"\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              multiple\r\n              name=\"image\"\r\n              onChange={handleImageChange}\r\n            />\r\n            {uploadLoading && (\r\n              <div style={{ textAlign: 'center', margin: '15px 0' }}>\r\n                <CircularProgress color=\"black\" />\r\n              </div>\r\n            )}\r\n            {uploadError && (\r\n              <Alert\r\n                style={{ margin: '15px 0' }}\r\n                severity=\"error\"\r\n                onClose={() => {\r\n                  setState({ ...state, uploadError: false })\r\n                }}\r\n              >\r\n                {uploadError}\r\n              </Alert>\r\n            )}\r\n\r\n            <p style={{ color: 'GrayText' }}>\r\n              *Select the images you want to upload, after chosing all the\r\n              images press on upload images button to upload them to the server.\r\n            </p>\r\n            <Button\r\n              onClick={handleUpload}\r\n              startIcon={<CloudUploadIcon />}\r\n              style={{\r\n                backgroundColor: '#0d47a1',\r\n                color: 'white',\r\n                margin: '15px 0',\r\n                padding: '5px 15px',\r\n              }}\r\n            >\r\n              Upload Images\r\n            </Button>\r\n            <div>\r\n              <h4>Uploaded images preview:</h4>\r\n\r\n              {imgUrl.length === 0 ? (\r\n                <h5>No images uploaded</h5>\r\n              ) : (\r\n                <>\r\n                  <div\r\n                    style={{\r\n                      display: 'flex',\r\n                      flexDirection: 'row',\r\n                      flexWrap: 'wrap',\r\n                      justifyContent: 'center',\r\n                      width: '80%',\r\n                      margin: 'auto',\r\n                    }}\r\n                  >\r\n                    {imgUrl.map((img) => (\r\n                      <div style={{ margin: '15px' }}>\r\n                        <Badge\r\n                          onClick={() => {\r\n                            let fileRef = storage.refFromURL(img)\r\n                            fileRef\r\n                              .delete()\r\n                              .then(() => {\r\n                                // File deleted successfully\r\n                                console.log('File Deleted')\r\n                                let newArray = imgUrl.filter(\r\n                                  (image) => image !== img\r\n                                )\r\n\r\n                                setImgUrl(newArray)\r\n                              })\r\n                              .catch((error) => {\r\n                                console.log(error)\r\n                              })\r\n                          }}\r\n                          color=\"secondary\"\r\n                          badgeContent={\r\n                            <Button style={{ color: 'white' }}>Delete</Button>\r\n                          }\r\n                        >\r\n                          <img\r\n                            style={{\r\n                              maxHeight: '80px',\r\n                              width: 'auto',\r\n                            }}\r\n                            src={img}\r\n                          />\r\n                        </Badge>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </>\r\n              )}\r\n            </div>\r\n          </Paper>\r\n\r\n          {loading && (\r\n            <div style={{ textAlign: 'center', margin: '15px 0' }}>\r\n              <CircularProgress color=\"black\" />\r\n            </div>\r\n          )}\r\n          {error && (\r\n            <Alert\r\n              style={{ margin: '15px 0' }}\r\n              severity=\"error\"\r\n              onClose={() => {\r\n                setState({ ...state, error: false })\r\n              }}\r\n            >\r\n              {error}\r\n            </Alert>\r\n          )}\r\n          {success && (\r\n            <Alert\r\n              style={{ margin: '15px 0' }}\r\n              severity=\"success\"\r\n              onClose={() => {\r\n                setState({ ...state, success: false })\r\n              }}\r\n            >\r\n              {success}\r\n            </Alert>\r\n          )}\r\n\r\n          <Button\r\n            style={{\r\n              backgroundColor: 'black',\r\n              color: 'white',\r\n              margin: '40px 0 80px 0',\r\n            }}\r\n            fullWidth\r\n            startIcon={<CreateIcon />}\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n          >\r\n            Update Product\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UpdateProduct\r\n","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\Pages\\userPages\\UserProfile.js",[],"C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\Pages\\adminPages\\AdminProducts.js",["185","186","187","188"],"import {\r\n  Button,\r\n  CircularProgress,\r\n  Hidden,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n} from '@material-ui/core'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport AdminNav from '../../components/admin/AdminNav'\r\nimport AdminSideNav from '../../components/admin/AdminSideNav'\r\nimport {\r\n  getProducts,\r\n  productRemove,\r\n} from '../../controllers/productControllers'\r\nimport { useSelector } from 'react-redux'\r\nimport { Alert, Pagination, PaginationItem } from '@material-ui/lab'\r\nimport { storage } from '../../firebase'\r\n\r\nconst AdminProducts = ({ history, match }) => {\r\n  const pageNumber = match.params.pageNumber || 1\r\n\r\n  const [state, setState] = useState({\r\n    products: [],\r\n    error: '',\r\n    loading: '',\r\n    deleteLoading: '',\r\n    deleteSuccess: '',\r\n    deleteError: '',\r\n    page: '',\r\n    pages: '',\r\n    pageSize: '',\r\n  })\r\n\r\n  const user = useSelector((state) => state.user)\r\n\r\n  const {\r\n    products,\r\n    loading,\r\n    error,\r\n    deleteError,\r\n    deleteLoading,\r\n    deleteSuccess,\r\n    page,\r\n    pages,\r\n    pageSize,\r\n  } = state\r\n\r\n  const listProducts = async () => {\r\n    setState({ ...state, loading: true })\r\n    try {\r\n      const { data } = await getProducts(pageNumber, 10)\r\n      setState({\r\n        ...state,\r\n        products: data.products,\r\n        page: data.page,\r\n        pages: data.pages,\r\n        pageSize: data.pageSize,\r\n        loading: false,\r\n      })\r\n    } catch (error) {\r\n      console.log(error)\r\n      setState({ ...state, error: error.response.data.error, loading: false })\r\n    }\r\n  }\r\n\r\n  useEffect(() => listProducts(), [pageNumber])\r\n\r\n  const deleteProduct = async (imgs, id) => {\r\n    try {\r\n      const images = imgs\r\n      // return console.log(images, id)\r\n\r\n      for (let i = 0, len = images.length; i < len; i++) {\r\n        let fileRef = await storage.refFromURL(images[i])\r\n        fileRef.delete().then((res) => console.log(images[i], 'deleted'))\r\n      }\r\n\r\n      await productRemove(user.token, id)\r\n      const { data } = await getProducts()\r\n\r\n      setState({\r\n        ...state,\r\n        products: data.products,\r\n        deleteLoading: false,\r\n        deleteSuccess: 'Product Deleted succefully.',\r\n        deleteError: false,\r\n      })\r\n    } catch (error) {\r\n      console.log(error)\r\n      setState({\r\n        ...state,\r\n        deleteError: error.response.data.error,\r\n        deleteSuccess: false,\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1 style={{ textAlign: 'center', margin: '30px 0' }}>Admin Dashboard</h1>\r\n\r\n      <Hidden smDown>\r\n        <AdminNav />\r\n      </Hidden>\r\n\r\n      <Hidden mdUp>\r\n        <AdminSideNav />\r\n      </Hidden>\r\n\r\n      <h2 style={{ textAlign: 'center', margin: '30px 0' }}>Products list</h2>\r\n      {loading && (\r\n        <div style={{ textAlign: 'center', margin: '15px 0' }}>\r\n          <CircularProgress color=\"black\" />\r\n        </div>\r\n      )}\r\n\r\n      {error && (\r\n        <Alert\r\n          style={{ margin: '15px 0' }}\r\n          severity=\"error\"\r\n          onClose={() => {\r\n            setState({ ...state, error: false })\r\n          }}\r\n        >\r\n          {error}\r\n        </Alert>\r\n      )}\r\n\r\n      {deleteError && (\r\n        <Alert\r\n          style={{ margin: '15px 0' }}\r\n          severity=\"error\"\r\n          onClose={() => {\r\n            setState({ ...state, deleteError: false })\r\n          }}\r\n        >\r\n          {deleteError}\r\n        </Alert>\r\n      )}\r\n\r\n      {deleteSuccess && (\r\n        <Alert\r\n          style={{ margin: '15px 0' }}\r\n          severity=\"success\"\r\n          onClose={() => {\r\n            setState({ ...state, deleteSuccess: false })\r\n          }}\r\n        >\r\n          {deleteSuccess}\r\n        </Alert>\r\n      )}\r\n\r\n      <TableContainer component={Paper}>\r\n        <Table aria-label=\"customized table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell align=\"left\">Product name</TableCell>\r\n              <TableCell align=\"left\">price</TableCell>\r\n              <TableCell align=\"left\">category</TableCell>\r\n              <TableCell align=\"left\">quantity</TableCell>\r\n              <TableCell align=\"left\">Main image</TableCell>\r\n              <TableCell align=\"left\"></TableCell>\r\n              <TableCell align=\"left\"></TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {products &&\r\n              products.map((p) => (\r\n                <TableRow key={p._id}>\r\n                  <TableCell width={'25%'} align=\"left\">\r\n                    {p.name}\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">{p.price}</TableCell>\r\n                  <TableCell align=\"left\">\r\n                    {p.category ? p.category.name : 'No category found'}\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">{p.quantity}</TableCell>\r\n                  <TableCell align=\"left\">\r\n                    {\r\n                      <img\r\n                        style={{ height: '50px' }}\r\n                        src={p.images[0]}\r\n                        alt=\"Image not found\"\r\n                      />\r\n                    }\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">\r\n                    <Button\r\n                      onClick={() => history.push(`/admin/product/${p._id}`)}\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                    >\r\n                      Update\r\n                    </Button>\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">\r\n                    <Button\r\n                      onClick={() => deleteProduct(p.images, p._id)}\r\n                      variant=\"outlined\"\r\n                      color=\"secondary\"\r\n                    >\r\n                      {deleteLoading ? <CircularProgress /> : 'Delete'}\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <div\r\n        style={{\r\n          margin: '15px 0 50px 0',\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n        }}\r\n      >\r\n        {pages && (\r\n          <Pagination\r\n            hidePrevButton\r\n            hideNextButton\r\n            showFirstButton\r\n            showLastButton\r\n            color=\"primary\"\r\n            count={pages}\r\n            renderItem={(item) => (\r\n              <PaginationItem\r\n                component={Link}\r\n                page={pageNumber}\r\n                to={`/admin/products/${item.page}`}\r\n                {...item}\r\n              />\r\n            )}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AdminProducts\r\n","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\Pages\\userPages\\PurchaseHistory.js",[],"C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\reducers\\userReducer.js",[],"C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\types\\userTypes.js",[],"C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\components\\SideNav.js",[],"C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\firebase.js",[],"C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\controllers\\categoryControllers.js",[],"C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\controllers\\authControllers.js",[],"C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\controllers\\productControllers.js",[],"C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\components\\admin\\AdminNav.js",[],"C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\components\\admin\\AdminSideNav.js",[],"C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\components\\HomeCard.js",["189"],"import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport Button from '@material-ui/core/Button'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { Link } from 'react-router-dom'\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\nimport _ from 'lodash'\r\nimport { ADD_TO_CART } from '../types/cartTypes'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 250,\r\n    height: 550,\r\n    margin: '15px',\r\n    border: '2px solid ',\r\n    borderColor: '#fafafa',\r\n    '&:hover': {\r\n      boxShadow:\r\n        'rgba(0, 0, 0, 0.19) 0px 10px 20px, rgba(0, 0, 0, 0.23) 0px 6px 6px',\r\n    },\r\n  },\r\n\r\n  link: {\r\n    textDecoration: 'none',\r\n    color: 'black',\r\n  },\r\n\r\n  button: {\r\n    margin: '10px',\r\n    backgroundColor: 'black',\r\n    color: 'white',\r\n    '&:hover': {\r\n      margin: '10px',\r\n      backgroundColor: 'black',\r\n      color: 'white',\r\n    },\r\n  },\r\n})\r\n\r\nexport default function HomeCard({ item }) {\r\n  const classes = useStyles()\r\n  const dispatch = useDispatch()\r\n\r\n  const handleAddToCart = () => {\r\n    let cart = []\r\n    if (typeof window !== undefined) {\r\n      if (localStorage.getItem('cart')) {\r\n        cart = JSON.parse(localStorage.getItem('cart'))\r\n      }\r\n      //push new product to cart\r\n      cart.push({\r\n        ...item,\r\n        count: 1,\r\n      })\r\n\r\n      //remove duplicates\r\n      let unique = _.uniqWith(cart, _.isEqual)\r\n      //save to local storage\r\n      localStorage.setItem('cart', JSON.stringify(unique))\r\n      dispatch({\r\n        type: ADD_TO_CART,\r\n        payload: unique,\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <div>\r\n        <Link className={classes.link} to={`/product/${item._id}`}>\r\n          <Tooltip placement=\"left-start\" title={`View product ${item.name}`}>\r\n            <img style={{ width: '100%' }} src={item.images[0]} />\r\n          </Tooltip>\r\n        </Link>\r\n      </div>\r\n      <div>\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            <Link className={classes.link} to={`/product/${item._id}`}>\r\n              <Tooltip\r\n                placement=\"left-start\"\r\n                title={`View product ${item.name}`}\r\n              >\r\n                <h5 style={{ margin: '0' }}>\r\n                  {item.name.substring(0, 20)}\r\n                  {item.name.length > 20 && '...'}\r\n                </h5>\r\n              </Tooltip>\r\n            </Link>\r\n          </Typography>\r\n\r\n          <Typography\r\n            style={{ fontSize: '16px' }}\r\n            variant=\"body2\"\r\n            color=\"textSecondary\"\r\n            component=\"p\"\r\n          >\r\n            <p>\r\n              Price:{' '}\r\n              <span\r\n                style={{\r\n                  color: 'black',\r\n                  marginLeft: '10px',\r\n                  fontWeight: '600',\r\n                }}\r\n              >\r\n                ₪{item.price}\r\n              </span>\r\n            </p>\r\n            <p>\r\n              Status:\r\n              {item.quantity > 0 ? (\r\n                <span\r\n                  style={{\r\n                    color: 'white',\r\n                    marginLeft: '10px',\r\n                    backgroundColor: '#388e3c',\r\n                    padding: '3px 5px',\r\n                  }}\r\n                >\r\n                  In Stock\r\n                </span>\r\n              ) : (\r\n                <span\r\n                  style={{\r\n                    color: 'white',\r\n                    marginLeft: '10px',\r\n                    backgroundColor: '#c62828',\r\n                    padding: '3px 5px',\r\n                  }}\r\n                >\r\n                  Out of stock\r\n                </span>\r\n              )}\r\n            </p>\r\n            <Link\r\n              className={classes.link}\r\n              to={\r\n                item.category\r\n                  ? `/category/${item.category.slug}`\r\n                  : `/pageNotFound`\r\n              }\r\n            >\r\n              <Tooltip placement=\"left-end\" title=\"View Category\">\r\n                <p style={{ color: 'gray' }}>\r\n                  Category:\r\n                  <span\r\n                    style={{\r\n                      color: 'black',\r\n                      marginLeft: '10px',\r\n                    }}\r\n                  >\r\n                    {item.category ? item.category.name : 'Category not found'}\r\n                  </span>\r\n                </p>\r\n              </Tooltip>\r\n            </Link>\r\n          </Typography>\r\n        </CardContent>\r\n      </div>\r\n\r\n      <Tooltip placement=\"left-start\" title=\"Add product to your cart\">\r\n        <Button\r\n          onClick={handleAddToCart}\r\n          size=\"small\"\r\n          disabled={item.quantity < 1}\r\n          startIcon={<ShoppingCartIcon />}\r\n          className={classes.button}\r\n          variant=\"contained\"\r\n        >\r\n          Add to Cart\r\n        </Button>\r\n      </Tooltip>\r\n    </Card>\r\n  )\r\n}\r\n","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\components\\ContactUs.js",["190","191","192","193","194"],"import { Button, Grid, Paper, TextField } from '@material-ui/core'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { makeStyles } from '@material-ui/core'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst useStyles = makeStyles({\r\n  iconDiv: {\r\n    fontSize: '40px',\r\n    margin: '10px',\r\n  },\r\n\r\n  myIcons: {\r\n    color: '#424242',\r\n  },\r\n})\r\n\r\nconst ContactUs = () => {\r\n  const classes = useStyles()\r\n  const user = useSelector((state) => state.user)\r\n\r\n  const [state, setState] = useState({\r\n    email: '',\r\n    subject: '',\r\n    message: '',\r\n    loading: '',\r\n    error: '',\r\n  })\r\n\r\n  const { email, subject, message, loading, error } = state\r\n\r\n  const onChange = (e) => {\r\n    setState({ ...state, [e.target.name]: e.target.value })\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      setState({ ...state, email: user.email })\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <Grid container>\r\n      <Grid md={6} xs={12} item>\r\n        <h3 style={{ textAlign: 'center' }}>Social Media</h3>\r\n        <div\r\n          className=\"my-3\"\r\n          style={{\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            flexWrap: 'wrap',\r\n          }}\r\n        >\r\n          <div className={classes.iconDiv}>\r\n            <a\r\n              target=\"_blank\"\r\n              href=\"https://www.instagram.com/odartshop/\"\r\n              className={classes.myIcons}\r\n            >\r\n              <i className=\"fab fa-instagram \"></i>\r\n            </a>\r\n          </div>\r\n\r\n          <div className={classes.iconDiv}>\r\n            <a\r\n              target=\"_blank\"\r\n              href=\"https://www.facebook.com/Olga.Don.art\"\r\n              className={classes.myIcons}\r\n            >\r\n              <i className=\"fab fa-facebook-square \"></i>\r\n            </a>\r\n          </div>\r\n          <div className={classes.iconDiv}>\r\n            <i class=\"fab fa-whatsapp\"></i>\r\n          </div>\r\n          <span>054-665-9069</span>\r\n        </div>\r\n      </Grid>\r\n      <Grid md={6} xs={12} item>\r\n        <h3 style={{ textAlign: 'center' }}>Send a Message</h3>\r\n        <form onSubmit={handleSubmit}>\r\n          <Paper\r\n            elevation={3}\r\n            style={{ padding: '15px', maxWidth: '400px', margin: 'auto' }}\r\n          >\r\n            <TextField\r\n              onChange={onChange}\r\n              style={{ margin: '15px 0' }}\r\n              name=\"email\"\r\n              value={email}\r\n              label=\"Email\"\r\n              fullWidth\r\n              helperText=\"Enter diffrent email if you want to\"\r\n              type=\"text\"\r\n              required\r\n            ></TextField>\r\n            <TextField\r\n              onChange={onChange}\r\n              style={{ margin: '15px 0' }}\r\n              name=\"subject\"\r\n              value={subject}\r\n              label=\"Subject\"\r\n              fullWidth\r\n              helperText=\"Type your subject\"\r\n              type=\"text\"\r\n              required\r\n            ></TextField>\r\n\r\n            <TextField\r\n              onChange={onChange}\r\n              style={{ margin: '15px 0' }}\r\n              name=\"message\"\r\n              value={message}\r\n              label=\"Message\"\r\n              multiline\r\n              rows={3}\r\n              fullWidth\r\n              type=\"text\"\r\n              helperText=\"Type your message\"\r\n              required\r\n            ></TextField>\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              style={{\r\n                backgroundColor: '#0d47a1',\r\n                color: 'white',\r\n                margin: '15px 0',\r\n                padding: '5px 15px',\r\n              }}\r\n            >\r\n              Send A Message\r\n            </Button>\r\n          </Paper>\r\n        </form>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default ContactUs\r\n","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\Pages\\Product.js",["195","196","197","198","199"],"import { Button, Grid, Tooltip } from '@material-ui/core'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { readProduct } from '../controllers/productControllers'\r\nimport { Link } from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core'\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart'\r\nimport Carousel from 'react-material-ui-carousel'\r\nimport _ from 'lodash'\r\nimport { ADD_TO_CART } from '../types/cartTypes'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nconst useStyles = makeStyles({\r\n  link: {\r\n    textDecoration: 'none',\r\n    display: 'block',\r\n    color: 'Graytext',\r\n    display: 'inline',\r\n  },\r\n  button: {\r\n    margin: '10px',\r\n    backgroundColor: 'black',\r\n    color: 'white',\r\n    '&:hover': {\r\n      margin: '10px',\r\n      backgroundColor: 'black',\r\n      color: 'white',\r\n    },\r\n  },\r\n})\r\n\r\nconst Product = ({ match, history }) => {\r\n  const productId = match.params.id\r\n\r\n  const classes = useStyles()\r\n  const dispatch = useDispatch()\r\n\r\n  const [state, setState] = useState({\r\n    product: '',\r\n    loading: '',\r\n    error: '',\r\n  })\r\n\r\n  const { product, loading, error } = state\r\n\r\n  const getProduct = async () => {\r\n    setState({ ...state, loading: true })\r\n    try {\r\n      const res = await readProduct(productId)\r\n      setState({ ...state, loading: false, product: res.data })\r\n    } catch (error) {\r\n      setState({ ...state, loading: false, error: error.response.data.error })\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getProduct()\r\n  }, [])\r\n\r\n  const goBackHandler = () => {\r\n    history.goBack()\r\n  }\r\n\r\n  const handleAddToCart = () => {\r\n    let cart = []\r\n    if (typeof window !== undefined) {\r\n      if (localStorage.getItem('cart')) {\r\n        cart = JSON.parse(localStorage.getItem('cart'))\r\n      }\r\n      //push new product to cart\r\n      cart.push({\r\n        ...product,\r\n        count: 1,\r\n      })\r\n\r\n      //remove duplicates\r\n      let unique = _.uniqWith(cart, _.isEqual)\r\n      //save to local storage\r\n      localStorage.setItem('cart', JSON.stringify(unique))\r\n      dispatch({\r\n        type: ADD_TO_CART,\r\n        payload: unique,\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div style={{ margin: '30px 0 ', overflowWrap: 'break-word' }}>\r\n      <Link className={classes.link} onClick={goBackHandler}>\r\n        <Button variant=\"contained\" style={{ margin: '15px 0' }}>\r\n          Go back\r\n        </Button>\r\n      </Link>\r\n      <Grid container>\r\n        <Grid style={{ textAlign: 'center' }} xs={12} md={6} item>\r\n          <Carousel interval={3000} timeout={800}>\r\n            {product &&\r\n              product.images.map((p) => (\r\n                <img style={{ maxWidth: '100%' }} src={p} />\r\n              ))}\r\n          </Carousel>\r\n        </Grid>\r\n        <Grid style={{ padding: '0 15px' }} xs={12} md={6} item>\r\n          <h1 style={{ textAlign: 'center' }}>{product && product.name}</h1>\r\n          <hr></hr>\r\n          <p style={{ color: 'GrayText' }}>\r\n            Details: <br></br>{' '}\r\n            <span style={{ color: 'black' }}>\r\n              {product && product.description}\r\n            </span>\r\n          </p>\r\n\r\n          <p style={{ color: 'GrayText' }}>\r\n            Price:{' '}\r\n            <span\r\n              style={{\r\n                color: 'black',\r\n                marginLeft: '10px',\r\n                fontWeight: '600',\r\n              }}\r\n            >\r\n              ₪{product.price}\r\n            </span>\r\n          </p>\r\n          <p style={{ color: 'GrayText' }}>\r\n            Status:\r\n            {product.quantity > 0 ? (\r\n              <span\r\n                style={{\r\n                  color: 'green',\r\n                  marginLeft: '10px',\r\n                }}\r\n              >\r\n                In Stock\r\n              </span>\r\n            ) : (\r\n              <span style={{ color: 'red', marginLeft: '10px' }}>\r\n                Out of stock\r\n              </span>\r\n            )}\r\n          </p>\r\n          <Link\r\n            className={classes.link}\r\n            to={\r\n              product.category\r\n                ? `/category/${product.category.slug}`\r\n                : `/pageNotFound`\r\n            }\r\n          >\r\n            <Tooltip placement=\"left-end\" title=\"View Category\">\r\n              <p>\r\n                Category:\r\n                <span\r\n                  style={{\r\n                    color: 'black',\r\n                    marginLeft: '10px',\r\n                  }}\r\n                >\r\n                  {product.category\r\n                    ? product.category.name\r\n                    : 'Category not found'}\r\n                </span>\r\n              </p>\r\n            </Tooltip>\r\n          </Link>\r\n          <hr></hr>\r\n          <Tooltip placement=\"left-start\" title=\"Add product to your cart\">\r\n            <Button\r\n              onClick={handleAddToCart}\r\n              startIcon={<ShoppingCartIcon />}\r\n              className={classes.button}\r\n              variant=\"contained\"\r\n              disabled={product.quantity < 1}\r\n            >\r\n              Add to Cart\r\n            </Button>\r\n          </Tooltip>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Product\r\n","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\Pages\\Category.js",["200","201","202","203"],"import { Button, CircularProgress } from '@material-ui/core'\r\nimport React, { useState, useEffect } from 'react'\r\nimport HomeCard from '../components/HomeCard'\r\nimport { readCategory } from '../controllers/categoryControllers'\r\nimport { Link } from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core'\r\nimport { Pagination, PaginationItem } from '@material-ui/lab'\r\n\r\nconst useStyles = makeStyles({\r\n  link: {\r\n    textDecoration: 'none',\r\n    display: 'block',\r\n    color: 'Graytext',\r\n  },\r\n})\r\n\r\nconst Category = ({ match, history }) => {\r\n  const classes = useStyles()\r\n  const slug = match.params.slug\r\n  const pageNumber = match.params.pageNumber || 1\r\n\r\n  const [state, setState] = useState({\r\n    loading: '',\r\n    error: '',\r\n    category: '',\r\n    products: [],\r\n    page: '',\r\n    pages: '',\r\n    pageSize: '',\r\n  })\r\n\r\n  const { loading, error, category, products, page, pages, pageSize } = state\r\n\r\n  const goBackHandler = () => {\r\n    history.push('/shop')\r\n  }\r\n\r\n  const getCategory = async () => {\r\n    setState({ ...state, loading: true })\r\n    try {\r\n      const { data } = await readCategory(slug, pageNumber, 8)\r\n      setState({\r\n        ...state,\r\n        loading: false,\r\n        category: data.category,\r\n        products: data.products,\r\n        page: data.page,\r\n        pages: data.pages,\r\n        pageSize: data.pageSize,\r\n      })\r\n    } catch (error) {\r\n      setState({ ...state, error: error.response.data.error, loading: false })\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getCategory()\r\n  }, [pageNumber])\r\n\r\n  return (\r\n    <div>\r\n      <Link className={classes.link} onClick={goBackHandler}>\r\n        <Button variant=\"contained\" style={{ margin: '15px 0' }}>\r\n          Go to Shop\r\n        </Button>\r\n      </Link>\r\n\r\n      {loading && (\r\n        <div style={{ textAlign: 'center', margin: '15px 0' }}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n      {category && <h1 style={{ textAlign: 'center' }}>{category.name}</h1>}\r\n\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          flexWrap: 'wrap',\r\n          justifyContent: 'center',\r\n          margin: '15px',\r\n        }}\r\n      >\r\n        {products &&\r\n          products.length >= 1 &&\r\n          products.map((p, i) => (\r\n            <div style={{ margin: '15px' }}>\r\n              <HomeCard key={i} item={p} />\r\n            </div>\r\n          ))}\r\n      </div>\r\n\r\n      {products && products.length < 1 && (\r\n        <h3>We are sorry there are no products yet.</h3>\r\n      )}\r\n      <div\r\n        style={{\r\n          marginBottom: '50px',\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n        }}\r\n      >\r\n        {pages && (\r\n          <Pagination\r\n            hidePrevButton\r\n            hideNextButton\r\n            showFirstButton\r\n            showLastButton\r\n            color=\"primary\"\r\n            count={pages}\r\n            renderItem={(item) => (\r\n              <PaginationItem\r\n                component={Link}\r\n                page={pageNumber}\r\n                to={`/category/${category.slug}/${item.page}`}\r\n                {...item}\r\n              />\r\n            )}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Category\r\n","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\reducers\\cartReducers.js",[],"C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\types\\cartTypes.js",[],"C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\components\\CartTable.js",["204","205","206"],"import React from 'react'\r\nimport Table from '@material-ui/core/Table'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableContainer from '@material-ui/core/TableContainer'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport { Button, Tooltip } from '@material-ui/core'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport { makeStyles } from '@material-ui/core'\r\nimport { REMOVE_FROM_CART, ADD_TO_CART } from '../types/cartTypes'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nconst useStyles = makeStyles({\r\n  deleteButton: {\r\n    backgroundColor: '#d50000',\r\n    color: 'white',\r\n    '&:hover': { backgroundColor: '#f44336', color: 'white' },\r\n  },\r\n})\r\n\r\nconst CartTable = ({ cart }) => {\r\n  const classes = useStyles()\r\n  const dispatch = useDispatch()\r\n\r\n  const handleRemove = (id) => {\r\n    let cart = []\r\n\r\n    if (typeof window !== 'undefined') {\r\n      if (localStorage.getItem('cart')) {\r\n        cart = JSON.parse(localStorage.getItem('cart'))\r\n      }\r\n\r\n      cart.map((product, i) => {\r\n        if (product._id === id) {\r\n          cart.splice(i, 1)\r\n        }\r\n      })\r\n\r\n      localStorage.setItem('cart', JSON.stringify(cart))\r\n      dispatch({\r\n        type: REMOVE_FROM_CART,\r\n        payload: cart,\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <TableContainer style={{ maxWidth: '95%' }} component={Paper}>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"center\">Image</TableCell>\r\n            <TableCell align=\"center\">Name</TableCell>\r\n            <TableCell align=\"center\">Category</TableCell>\r\n            <TableCell align=\"center\">Price</TableCell>\r\n            <TableCell align=\"center\">Count</TableCell>\r\n            <TableCell align=\"center\"></TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n\r\n        <TableBody>\r\n          {cart.map((p, i) => (\r\n            <TableRow key={i}>\r\n              <TableCell align=\"center\">\r\n                {<img src={p.images[0]} style={{ height: '50px' }} />}\r\n              </TableCell>\r\n              <TableCell align=\"center\">{p.name}</TableCell>\r\n              <TableCell align=\"center\">\r\n                {p.category ? p.category.name : 'Category not found'}\r\n              </TableCell>\r\n              <TableCell align=\"center\">{p.price}₪</TableCell>\r\n              <TableCell align=\"center\">\r\n                <input\r\n                  type=\"number\"\r\n                  value={p.count}\r\n                  onChange={(e) => {\r\n                    let cart = []\r\n\r\n                    if (typeof window !== 'undefined') {\r\n                      let count = e.target.value < 1 ? 1 : e.target.value\r\n\r\n                      if (count > p.quantity) {\r\n                        return\r\n                      }\r\n\r\n                      if (localStorage.getItem('cart')) {\r\n                        cart = JSON.parse(localStorage.getItem('cart'))\r\n                      }\r\n\r\n                      cart.map((product, i) => {\r\n                        if (product._id === p._id) cart[i].count = count\r\n                      })\r\n\r\n                      localStorage.setItem('cart', JSON.stringify(cart))\r\n                      dispatch({\r\n                        type: ADD_TO_CART,\r\n                        payload: cart,\r\n                      })\r\n                    }\r\n                  }}\r\n                />\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <Tooltip placement=\"right-end\" title=\"Remove this Item?\">\r\n                  <Button\r\n                    size=\"small\"\r\n                    startIcon={<DeleteIcon />}\r\n                    variant=\"contained\"\r\n                    className={classes.deleteButton}\r\n                    onClick={() => handleRemove(p._id)}\r\n                  >\r\n                    Remove\r\n                  </Button>\r\n                </Tooltip>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  )\r\n}\r\n\r\nexport default CartTable\r\n","C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\controllers\\userControllers.js",[],"C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\Pages\\Checkout.js",["207","208","209","210","211","212"],"C:\\Users\\micha\\Desktop\\Web Development\\olga-jewelry\\client\\src\\Pages\\OrderSuccess.js",["213","214","215"],{"ruleId":"216","replacedBy":"217"},{"ruleId":"218","replacedBy":"219"},{"ruleId":"220","severity":1,"message":"221","line":63,"column":6,"nodeType":"222","endLine":63,"endColumn":8,"suggestions":"223"},{"ruleId":"220","severity":1,"message":"224","line":72,"column":34,"nodeType":"222","endLine":72,"endColumn":36,"suggestions":"225"},{"ruleId":"226","severity":1,"message":"227","line":78,"column":11,"nodeType":"228","endLine":78,"endColumn":56},{"ruleId":"229","severity":1,"message":"230","line":42,"column":36,"nodeType":"231","messageId":"232","endLine":42,"endColumn":41},{"ruleId":"220","severity":1,"message":"233","line":65,"column":6,"nodeType":"222","endLine":65,"endColumn":8,"suggestions":"234"},{"ruleId":"229","severity":1,"message":"230","line":51,"column":18,"nodeType":"231","messageId":"232","endLine":51,"endColumn":23},{"ruleId":"229","severity":1,"message":"230","line":52,"column":5,"nodeType":"231","messageId":"232","endLine":52,"endColumn":10},{"ruleId":"229","severity":1,"message":"235","line":55,"column":5,"nodeType":"231","messageId":"232","endLine":55,"endColumn":9},{"ruleId":"229","severity":1,"message":"236","line":57,"column":5,"nodeType":"231","messageId":"232","endLine":57,"endColumn":13},{"ruleId":"229","severity":1,"message":"237","line":58,"column":5,"nodeType":"231","messageId":"232","endLine":58,"endColumn":11},{"ruleId":"220","severity":1,"message":"238","line":85,"column":6,"nodeType":"222","endLine":85,"endColumn":31,"suggestions":"239"},{"ruleId":"220","severity":1,"message":"240","line":73,"column":36,"nodeType":"222","endLine":73,"endColumn":38,"suggestions":"241"},{"ruleId":"226","severity":1,"message":"227","line":362,"column":27,"nodeType":"228","endLine":368,"endColumn":29},{"ruleId":"220","severity":1,"message":"240","line":61,"column":36,"nodeType":"222","endLine":61,"endColumn":38,"suggestions":"242"},{"ruleId":"220","severity":1,"message":"243","line":91,"column":33,"nodeType":"222","endLine":91,"endColumn":35,"suggestions":"244"},{"ruleId":"226","severity":1,"message":"227","line":380,"column":27,"nodeType":"228","endLine":386,"endColumn":29},{"ruleId":"229","severity":1,"message":"235","line":49,"column":5,"nodeType":"231","messageId":"232","endLine":49,"endColumn":9},{"ruleId":"229","severity":1,"message":"236","line":51,"column":5,"nodeType":"231","messageId":"232","endLine":51,"endColumn":13},{"ruleId":"220","severity":1,"message":"245","line":72,"column":35,"nodeType":"222","endLine":72,"endColumn":47,"suggestions":"246"},{"ruleId":"247","severity":1,"message":"248","line":186,"column":23,"nodeType":"228","endLine":190,"endColumn":25},{"ruleId":"226","severity":1,"message":"227","line":76,"column":13,"nodeType":"228","endLine":76,"endColumn":67},{"ruleId":"229","severity":1,"message":"249","line":29,"column":36,"nodeType":"231","messageId":"232","endLine":29,"endColumn":43},{"ruleId":"229","severity":1,"message":"230","line":29,"column":45,"nodeType":"231","messageId":"232","endLine":29,"endColumn":50},{"ruleId":"220","severity":1,"message":"250","line":43,"column":6,"nodeType":"222","endLine":43,"endColumn":8,"suggestions":"251"},{"ruleId":"252","severity":1,"message":"253","line":60,"column":15,"nodeType":"254","endLine":60,"endColumn":30},{"ruleId":"252","severity":1,"message":"253","line":70,"column":15,"nodeType":"254","endLine":70,"endColumn":30},{"ruleId":"255","severity":1,"message":"256","line":17,"column":5,"nodeType":"257","messageId":"258","endLine":17,"endColumn":12},{"ruleId":"229","severity":1,"message":"249","line":43,"column":20,"nodeType":"231","messageId":"232","endLine":43,"endColumn":27},{"ruleId":"229","severity":1,"message":"230","line":43,"column":29,"nodeType":"231","messageId":"232","endLine":43,"endColumn":34},{"ruleId":"220","severity":1,"message":"243","line":57,"column":6,"nodeType":"222","endLine":57,"endColumn":8,"suggestions":"259"},{"ruleId":"226","severity":1,"message":"227","line":98,"column":17,"nodeType":"228","endLine":98,"endColumn":61},{"ruleId":"229","severity":1,"message":"230","line":32,"column":20,"nodeType":"231","messageId":"232","endLine":32,"endColumn":25},{"ruleId":"229","severity":1,"message":"235","line":32,"column":47,"nodeType":"231","messageId":"232","endLine":32,"endColumn":51},{"ruleId":"229","severity":1,"message":"236","line":32,"column":60,"nodeType":"231","messageId":"232","endLine":32,"endColumn":68},{"ruleId":"220","severity":1,"message":"260","line":59,"column":6,"nodeType":"222","endLine":59,"endColumn":18,"suggestions":"261"},{"ruleId":"262","severity":1,"message":"263","line":35,"column":29,"nodeType":"264","messageId":"265","endLine":35,"endColumn":31},{"ruleId":"226","severity":1,"message":"227","line":67,"column":18,"nodeType":"228","endLine":67,"endColumn":70},{"ruleId":"262","severity":1,"message":"263","line":92,"column":45,"nodeType":"264","messageId":"265","endLine":92,"endColumn":47},{"ruleId":"255","severity":1,"message":"256","line":31,"column":5,"nodeType":"257","messageId":"258","endLine":31,"endColumn":12},{"ruleId":"229","severity":1,"message":"230","line":63,"column":5,"nodeType":"231","messageId":"232","endLine":63,"endColumn":10},{"ruleId":"229","severity":1,"message":"266","line":65,"column":5,"nodeType":"231","messageId":"232","endLine":65,"endColumn":17},{"ruleId":"229","severity":1,"message":"267","line":68,"column":5,"nodeType":"231","messageId":"232","endLine":68,"endColumn":10},{"ruleId":"220","severity":1,"message":"268","line":150,"column":6,"nodeType":"222","endLine":150,"endColumn":8,"suggestions":"269"},{"ruleId":"226","severity":1,"message":"227","line":291,"column":19,"nodeType":"228","endLine":291,"endColumn":79},{"ruleId":"229","severity":1,"message":"249","line":16,"column":18,"nodeType":"231","messageId":"232","endLine":16,"endColumn":25},{"ruleId":"229","severity":1,"message":"230","line":16,"column":27,"nodeType":"231","messageId":"232","endLine":16,"endColumn":32},{"ruleId":"220","severity":1,"message":"270","line":30,"column":6,"nodeType":"222","endLine":30,"endColumn":8,"suggestions":"271"},"no-native-reassign",["272"],"no-negated-in-lhs",["273"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'user'. Either include them or remove the dependency array.","ArrayExpression",["274"],"React Hook useEffect has a missing dependency: 'getProducts'. Either include it or remove the dependency array.",["275"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'values'. Either include it or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.",["276"],"'page' is assigned a value but never used.","'pageSize' is assigned a value but never used.","'filter' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'onLoad'. Either include it or remove the dependency array.",["277"],"React Hook useEffect has a missing dependency: 'getCategories'. Either include it or remove the dependency array.",["278"],["279"],"React Hook useEffect has a missing dependency: 'getProduct'. Either include it or remove the dependency array.",["280"],"React Hook useEffect has a missing dependency: 'listProducts'. Either include it or remove the dependency array.",["281"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'loading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'state' and 'user'. Either include them or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.",["282"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-dupe-keys","Duplicate key 'display'.","ObjectExpression","unexpected",["283"],"React Hook useEffect has a missing dependency: 'getCategory'. Either include it or remove the dependency array.",["284"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'orderLoading' is assigned a value but never used.","'order' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userCart'. Either include it or remove the dependency array.",["285"],"React Hook useEffect has a missing dependency: 'getOrder'. Either include it or remove the dependency array.",["286"],"no-global-assign","no-unsafe-negation",{"desc":"287","fix":"288"},{"desc":"289","fix":"290"},{"desc":"291","fix":"292"},{"desc":"293","fix":"294"},{"desc":"295","fix":"296"},{"desc":"295","fix":"297"},{"desc":"298","fix":"299"},{"desc":"300","fix":"301"},{"desc":"302","fix":"303"},{"desc":"298","fix":"304"},{"desc":"305","fix":"306"},{"desc":"307","fix":"308"},{"desc":"309","fix":"310"},"Update the dependencies array to be: [dispatch, user]",{"range":"311","text":"312"},"Update the dependencies array to be: [getProducts]",{"range":"313","text":"314"},"Update the dependencies array to be: [values]",{"range":"315","text":"316"},"Update the dependencies array to be: [pageNumber, sort, order, onLoad]",{"range":"317","text":"318"},"Update the dependencies array to be: [getCategories]",{"range":"319","text":"320"},{"range":"321","text":"320"},"Update the dependencies array to be: [getProduct]",{"range":"322","text":"323"},"Update the dependencies array to be: [listProducts, pageNumber]",{"range":"324","text":"325"},"Update the dependencies array to be: [state, user]",{"range":"326","text":"327"},{"range":"328","text":"323"},"Update the dependencies array to be: [getCategory, pageNumber]",{"range":"329","text":"330"},"Update the dependencies array to be: [userCart]",{"range":"331","text":"332"},"Update the dependencies array to be: [getOrder]",{"range":"333","text":"334"},[2284,2286],"[dispatch, user]",[1904,1906],"[getProducts]",[1480,1482],"[values]",[1914,1939],"[pageNumber, sort, order, onLoad]",[1782,1784],"[getCategories]",[1497,1499],[2258,2260],"[getProduct]",[1696,1708],"[listProducts, pageNumber]",[928,930],"[state, user]",[1511,1513],[1564,1576],"[getCategory, pageNumber]",[3629,3631],"[userCart]",[699,701],"[getOrder]"]