[{"C:\\Users\\michael\\Desktop\\WEB Full Stack Dev\\Full Stack apps\\Olga-jewelry02\\olga-jewelry-02\\client\\src\\index.js":"1","C:\\Users\\michael\\Desktop\\WEB Full Stack Dev\\Full Stack apps\\Olga-jewelry02\\olga-jewelry-02\\client\\src\\App.js":"2","C:\\Users\\michael\\Desktop\\WEB Full Stack Dev\\Full Stack apps\\Olga-jewelry02\\olga-jewelry-02\\client\\src\\components\\NavBar.js":"3","C:\\Users\\michael\\Desktop\\WEB Full Stack Dev\\Full Stack apps\\Olga-jewelry02\\olga-jewelry-02\\client\\src\\components\\SideNav.js":"4","C:\\Users\\michael\\Desktop\\WEB Full Stack Dev\\Full Stack apps\\Olga-jewelry02\\olga-jewelry-02\\client\\src\\Pages\\Home.js":"5","C:\\Users\\michael\\Desktop\\WEB Full Stack Dev\\Full Stack apps\\Olga-jewelry02\\olga-jewelry-02\\client\\src\\Pages\\authPages\\Login.js":"6","C:\\Users\\michael\\Desktop\\WEB Full Stack Dev\\Full Stack apps\\Olga-jewelry02\\olga-jewelry-02\\client\\src\\Pages\\authPages\\Register.js":"7","C:\\Users\\michael\\Desktop\\WEB Full Stack Dev\\Full Stack apps\\Olga-jewelry02\\olga-jewelry-02\\client\\src\\Pages\\Shop.js":"8","C:\\Users\\michael\\Desktop\\WEB Full Stack Dev\\Full Stack apps\\Olga-jewelry02\\olga-jewelry-02\\client\\src\\Pages\\Cart.js":"9","C:\\Users\\michael\\Desktop\\WEB Full Stack Dev\\Full Stack apps\\Olga-jewelry02\\olga-jewelry-02\\client\\src\\store.js":"10","C:\\Users\\michael\\Desktop\\WEB Full Stack Dev\\Full Stack apps\\Olga-jewelry02\\olga-jewelry-02\\client\\src\\reducers\\userReducer.js":"11","C:\\Users\\michael\\Desktop\\WEB Full Stack Dev\\Full Stack apps\\Olga-jewelry02\\olga-jewelry-02\\client\\src\\types\\userTypes.js":"12","C:\\Users\\michael\\Desktop\\WEB Full Stack Dev\\Full Stack apps\\Olga-jewelry02\\olga-jewelry-02\\client\\src\\firebase.js":"13","C:\\Users\\michael\\Desktop\\WEB Full Stack Dev\\Full Stack apps\\Olga-jewelry02\\olga-jewelry-02\\client\\src\\Pages\\authPages\\RegisterComplete.js":"14","C:\\Users\\michael\\Desktop\\WEB Full Stack Dev\\Full Stack apps\\Olga-jewelry02\\olga-jewelry-02\\client\\src\\controllers\\authControllers.js":"15","C:\\Users\\michael\\Desktop\\WEB Full Stack Dev\\Full Stack apps\\Olga-jewelry02\\olga-jewelry-02\\client\\src\\components\\routes\\PrivateRoute.js":"16","C:\\Users\\michael\\Desktop\\WEB Full Stack Dev\\Full Stack apps\\Olga-jewelry02\\olga-jewelry-02\\client\\src\\Pages\\userPages\\UserProfile.js":"17","C:\\Users\\michael\\Desktop\\WEB Full Stack Dev\\Full Stack apps\\Olga-jewelry02\\olga-jewelry-02\\client\\src\\Pages\\userPages\\PurchaseHistory.js":"18","C:\\Users\\michael\\Desktop\\WEB Full Stack Dev\\Full Stack apps\\Olga-jewelry02\\olga-jewelry-02\\client\\src\\components\\routes\\AdminRoute.js":"19","C:\\Users\\michael\\Desktop\\WEB Full Stack Dev\\Full Stack apps\\Olga-jewelry02\\olga-jewelry-02\\client\\src\\Pages\\adminPages\\AdminDashboard.js":"20","C:\\Users\\michael\\Desktop\\WEB Full Stack Dev\\Full Stack apps\\Olga-jewelry02\\olga-jewelry-02\\client\\src\\components\\admin\\AdminNav.js":"21","C:\\Users\\michael\\Desktop\\WEB Full Stack Dev\\Full Stack apps\\Olga-jewelry02\\olga-jewelry-02\\client\\src\\components\\admin\\AdminSideNav.js":"22","C:\\Users\\michael\\Desktop\\WEB Full Stack Dev\\Full Stack apps\\Olga-jewelry02\\olga-jewelry-02\\client\\src\\Pages\\adminPages\\AdminCategories.js":"23","C:\\Users\\michael\\Desktop\\WEB Full Stack Dev\\Full Stack apps\\Olga-jewelry02\\olga-jewelry-02\\client\\src\\controllers\\categoryControllers.js":"24","C:\\Users\\michael\\Desktop\\WEB Full Stack Dev\\Full Stack apps\\Olga-jewelry02\\olga-jewelry-02\\client\\src\\Pages\\adminPages\\CreateProduct.js":"25","C:\\Users\\michael\\Desktop\\WEB Full Stack Dev\\Full Stack apps\\Olga-jewelry02\\olga-jewelry-02\\client\\src\\Pages\\adminPages\\AdminProducts.js":"26","C:\\Users\\michael\\Desktop\\WEB Full Stack Dev\\Full Stack apps\\Olga-jewelry02\\olga-jewelry-02\\client\\src\\controllers\\productControllers.js":"27","C:\\Users\\michael\\Desktop\\WEB Full Stack Dev\\Full Stack apps\\Olga-jewelry02\\olga-jewelry-02\\client\\src\\Pages\\adminPages\\UpdateProduct.js":"28"},{"size":367,"mtime":1608652415465,"results":"29","hashOfConfig":"30"},{"size":3718,"mtime":1609249910734,"results":"31","hashOfConfig":"30"},{"size":7453,"mtime":1609188440266,"results":"32","hashOfConfig":"30"},{"size":2939,"mtime":1608820055203,"results":"33","hashOfConfig":"30"},{"size":10919,"mtime":1609335050296,"results":"34","hashOfConfig":"30"},{"size":5897,"mtime":1609176379127,"results":"35","hashOfConfig":"30"},{"size":3635,"mtime":1609074375206,"results":"36","hashOfConfig":"30"},{"size":1652,"mtime":1609334739682,"results":"37","hashOfConfig":"30"},{"size":138,"mtime":1608635991321,"results":"38","hashOfConfig":"30"},{"size":779,"mtime":1608652716277,"results":"39","hashOfConfig":"30"},{"size":433,"mtime":1609176347576,"results":"40","hashOfConfig":"30"},{"size":164,"mtime":1609176328839,"results":"41","hashOfConfig":"30"},{"size":627,"mtime":1609365200264,"results":"42","hashOfConfig":"30"},{"size":5032,"mtime":1608813869537,"results":"43","hashOfConfig":"30"},{"size":476,"mtime":1608806721407,"results":"44","hashOfConfig":"30"},{"size":525,"mtime":1608814466043,"results":"45","hashOfConfig":"30"},{"size":160,"mtime":1608814212472,"results":"46","hashOfConfig":"30"},{"size":172,"mtime":1608814231708,"results":"47","hashOfConfig":"30"},{"size":516,"mtime":1608815469209,"results":"48","hashOfConfig":"30"},{"size":588,"mtime":1608922221481,"results":"49","hashOfConfig":"30"},{"size":2074,"mtime":1608922421632,"results":"50","hashOfConfig":"30"},{"size":3217,"mtime":1608900166007,"results":"51","hashOfConfig":"30"},{"size":6828,"mtime":1608927572273,"results":"52","hashOfConfig":"30"},{"size":603,"mtime":1608901080336,"results":"53","hashOfConfig":"30"},{"size":12142,"mtime":1609154306302,"results":"54","hashOfConfig":"30"},{"size":5729,"mtime":1609154279061,"results":"55","hashOfConfig":"30"},{"size":1042,"mtime":1609157970996,"results":"56","hashOfConfig":"30"},{"size":12613,"mtime":1609239165396,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1xvnweh",{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"60"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"60"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"60"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"60"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"60"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"60"},"C:\\Users\\michael\\Desktop\\WEB Full Stack Dev\\Full Stack apps\\Olga-jewelry02\\olga-jewelry-02\\client\\src\\index.js",[],["125","126"],"C:\\Users\\michael\\Desktop\\WEB Full Stack Dev\\Full Stack apps\\Olga-jewelry02\\olga-jewelry-02\\client\\src\\App.js",["127"],"import { Container } from '@material-ui/core'\nimport React, { useEffect } from 'react'\nimport NavBar from './components/NavBar'\nimport { Switch, Route } from 'react-router-dom'\nimport Home from './Pages/Home'\nimport Login from './Pages/authPages/Login'\nimport Register from './Pages/authPages/Register'\nimport Shop from './Pages/Shop'\nimport Cart from './Pages/Cart'\nimport RegisterComplete from './Pages/authPages/RegisterComplete'\nimport PrivateRoute from './components/routes/PrivateRoute'\nimport UserProfile from './Pages/userPages/UserProfile'\nimport PurchaseHistory from './Pages/userPages/PurchaseHistory'\nimport AdminRoute from './components/routes/AdminRoute'\nimport AdminDashboard from './Pages/adminPages/AdminDashboard'\nimport AdminCategories from './Pages/adminPages/AdminCategories'\nimport CreateProduct from './Pages/adminPages/CreateProduct'\nimport AdminProducts from './Pages/adminPages/AdminProducts'\nimport UpdateProduct from './Pages/adminPages/UpdateProduct'\nimport firebase from 'firebase'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { REFRESH_TOKEN } from './types/userTypes'\n\nconst App = () => {\n  const user = useSelector((state) => state.user)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    if (user) {\n      return firebase.auth().onIdTokenChanged(async (firebaseUser) => {\n        if (!firebaseUser) {\n          console.log('No firebase user looged in')\n          return\n        } else {\n          return (\n            localStorage.setItem(\n              'userInfo',\n              JSON.stringify({\n                email: user.email,\n                token: firebaseUser.ya,\n                role: user.role,\n                id: user.id,\n              })\n            ),\n            dispatch({\n              type: REFRESH_TOKEN,\n              payload: {\n                email: user.email,\n                token: firebaseUser.ya,\n                role: user.role,\n                id: user.id,\n              },\n            }),\n            console.log('token set')\n          )\n        }\n      })\n    }\n  }, [])\n\n  // force refresh the token every 30 minutes\n  useEffect(() => {\n    const handle = setInterval(async () => {\n      const firebaseUser = await firebase.auth().currentUser\n      if (firebaseUser) {\n        console.log('forced refresh')\n        return await firebaseUser.getIdToken(true)\n      }\n    }, 10 * 60 * 3000)\n\n    // clean up setInterval\n    return () => clearInterval(handle)\n  }, [])\n\n  return (\n    <>\n      <NavBar />\n\n      <Container>\n        <Switch>\n          <Route exact path='/' component={Home} />\n          <Route exact path='/login' component={Login} />\n          <Route exact path='/register' component={Register} />\n          <Route exact path='/register/complete' component={RegisterComplete} />\n          <Route exact path='/shop' component={Shop} />\n          <Route exact path='/cart' component={Cart} />\n          <PrivateRoute exact path='/user/profile' component={UserProfile} />\n          <PrivateRoute\n            exact\n            path='/user/history'\n            component={PurchaseHistory}\n          />\n          <AdminRoute\n            exact\n            path='/admin/dashboard'\n            component={AdminDashboard}\n          />\n          <AdminRoute\n            exact\n            path='/admin/categories'\n            component={AdminCategories}\n          />\n          <AdminRoute exact path='/admin/product' component={CreateProduct} />\n          <AdminRoute\n            exact\n            path='/admin/product/:id'\n            component={UpdateProduct}\n          />\n          <AdminRoute exact path='/admin/products' component={AdminProducts} />\n        </Switch>\n      </Container>\n    </>\n  )\n}\n\nexport default App\n","C:\\Users\\michael\\Desktop\\WEB Full Stack Dev\\Full Stack apps\\Olga-jewelry02\\olga-jewelry-02\\client\\src\\components\\NavBar.js",[],"C:\\Users\\michael\\Desktop\\WEB Full Stack Dev\\Full Stack apps\\Olga-jewelry02\\olga-jewelry-02\\client\\src\\components\\SideNav.js",[],"C:\\Users\\michael\\Desktop\\WEB Full Stack Dev\\Full Stack apps\\Olga-jewelry02\\olga-jewelry-02\\client\\src\\Pages\\Home.js",["128","129","130","131","132","133","134","135","136"],"import React, { useState, useEffect } from 'react'\r\nimport { listProducts } from '../controllers/productControllers'\r\nimport Carousel from 'react-material-ui-carousel'\r\nimport {\r\n  Button,\r\n  Card,\r\n  CircularProgress,\r\n  Container,\r\n  Grid,\r\n  List,\r\n  Paper,\r\n  TextField,\r\n} from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core'\r\nimport { Alert } from '@material-ui/lab'\r\nimport { NavLink, Link } from 'react-router-dom'\r\nimport { listCategories } from '../controllers/categoryControllers'\r\nimport logo from '../public/logo.png'\r\n\r\nconst useStyles = makeStyles({\r\n  flexContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    padding: 0,\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n    margin: '15px 0',\r\n  },\r\n  link: {\r\n    textDecoration: 'none',\r\n    display: 'block',\r\n  },\r\n  iconDiv: {\r\n    fontSize: '40px',\r\n    margin: '10px',\r\n  },\r\n\r\n  myIcons: {\r\n    color: '#424242',\r\n  },\r\n\r\n  img: {\r\n    '&:hover': {\r\n      boxShadow:\r\n        'rgba(0, 0, 0, 0.19) 0px 10px 20px, rgba(0, 0, 0, 0.23) 0px 6px 6px',\r\n    },\r\n  },\r\n})\r\n\r\nconst Home = () => {\r\n  const [state, setState] = useState({\r\n    newArrivals: [],\r\n    bestSellers: [],\r\n    loading: '',\r\n    error: '',\r\n    categories: '',\r\n  })\r\n\r\n  const newArivalsValues = {\r\n    sort: 'createdAt',\r\n    order: -1,\r\n    limit: 4,\r\n  }\r\n\r\n  const bestSellersValues = {\r\n    sort: 'sold',\r\n    order: -1,\r\n    limit: 4,\r\n  }\r\n\r\n  const { newArrivals, bestSellers, loading, error, categories } = state\r\n\r\n  const classes = useStyles()\r\n\r\n  const getProducts = async () => {\r\n    setState({ ...state, loading: true })\r\n    try {\r\n      const newProducts = await listProducts(newArivalsValues)\r\n      const bestSellers = await listProducts(bestSellersValues)\r\n      const categories = await listCategories()\r\n      setState({\r\n        ...state,\r\n        newArrivals: newProducts.data,\r\n        bestSellers: bestSellers.data,\r\n        categories: categories.data,\r\n        loading: false,\r\n      })\r\n    } catch (error) {\r\n      console.log(error)\r\n      setState({ ...state, loading: false, error: error.response.data.error })\r\n    }\r\n  }\r\n\r\n  useEffect(() => getProducts(), [])\r\n\r\n  return (\r\n    <>\r\n      <Grid container direction='row'>\r\n        <Grid style={{ margin: '10px' }} item md={2} xs={12}>\r\n          <img style={{ height: '60px' }} src={logo} />\r\n        </Grid>\r\n        <Grid style={{ margin: '10px' }} item md={8} xs={12}>\r\n          <Button>Categories</Button> <Button>Contact us</Button>\r\n          <Button>About</Button>\r\n        </Grid>\r\n      </Grid>\r\n      <Container maxWidth='md' style={{ marginBottom: '100px' }}>\r\n        {error && (\r\n          <Alert\r\n            style={{ margin: '15px 0' }}\r\n            severity='error'\r\n            onClose={() => {\r\n              setState({ ...state, error: false })\r\n            }}\r\n          >\r\n            {error}\r\n          </Alert>\r\n        )}\r\n        <h1\r\n          style={{\r\n            textAlign: 'center',\r\n            color: 'black',\r\n            fontSize: '30px',\r\n            backgroundColor: '#fafafa',\r\n          }}\r\n        >\r\n          New Arrivals\r\n        </h1>\r\n        {loading ? (\r\n          <div style={{ textAlign: 'center', margin: '15px 0' }}>\r\n            <CircularProgress color='black' />\r\n          </div>\r\n        ) : (\r\n          <Carousel interval={8000} timeout={800}>\r\n            {newArrivals &&\r\n              newArrivals.map((item, i) => (\r\n                <Paper style={{ textAlign: 'center' }} key={i}>\r\n                  <h2>{item.name}</h2>\r\n                  <Link className={classes.link} to={`/product/${item._id}`}>\r\n                    <img\r\n                      className={classes.img}\r\n                      style={{ maxHeight: '350px', maxWidth: '100%' }}\r\n                      src={item.images[0]}\r\n                    />\r\n                  </Link>\r\n\r\n                  <Link className={classes.link} to={`/product/${item._id}`}>\r\n                    <Button\r\n                      style={{\r\n                        margin: '15px',\r\n                        backgroundColor: '#e3f2fd',\r\n                        padding: '5px 50px',\r\n                        fontWeight: '600',\r\n                      }}\r\n                      variant='contained'\r\n                    >\r\n                      Check It Out\r\n                    </Button>\r\n                  </Link>\r\n                </Paper>\r\n              ))}\r\n          </Carousel>\r\n        )}\r\n\r\n        <h1\r\n          style={{\r\n            textAlign: 'center',\r\n            color: 'black',\r\n            fontSize: '30px',\r\n            backgroundColor: '#fafafa',\r\n          }}\r\n        >\r\n          Best Sellers\r\n        </h1>\r\n        {loading ? (\r\n          <div style={{ textAlign: 'center', margin: '15px 0' }}>\r\n            <CircularProgress color='black' />\r\n          </div>\r\n        ) : (\r\n          <Carousel interval={8000} timeout={800}>\r\n            {bestSellers &&\r\n              bestSellers.map((item, i) => (\r\n                <Paper style={{ textAlign: 'center' }} key={i}>\r\n                  <h2>{item.name}</h2>\r\n\r\n                  <Link className={classes.link} to={`/product/${item._id}`}>\r\n                    <img\r\n                      className={classes.img}\r\n                      style={{ maxHeight: '350px', maxWidth: '100%' }}\r\n                      src={item.images[0]}\r\n                    />\r\n                  </Link>\r\n\r\n                  <Link className={classes.link} to={`/product/${item._id}`}>\r\n                    <Button\r\n                      style={{\r\n                        margin: '15px',\r\n                        backgroundColor: '#e3f2fd',\r\n                        padding: '5px 50px',\r\n                        fontWeight: '600',\r\n                      }}\r\n                      variant='contained'\r\n                    >\r\n                      Check It Out\r\n                    </Button>\r\n                  </Link>\r\n                </Paper>\r\n              ))}\r\n          </Carousel>\r\n        )}\r\n        <h1\r\n          style={{\r\n            textAlign: 'center',\r\n            color: 'black',\r\n            fontSize: '30px',\r\n            backgroundColor: '#fafafa',\r\n          }}\r\n        >\r\n          Categories\r\n        </h1>\r\n        <div style={{ margin: '50px 0' }} className={classes.flexContainer}>\r\n          {loading ? (\r\n            <CircularProgress />\r\n          ) : (\r\n            categories &&\r\n            categories.map((c, i) => (\r\n              <Link\r\n                style={{ margin: '10px' }}\r\n                key={i}\r\n                className={classes.link}\r\n                to={`/category/${c.slug}`}\r\n              >\r\n                <Button\r\n                  style={{\r\n                    color: 'GrayText',\r\n                    fontSize: '18px',\r\n                  }}\r\n                >\r\n                  {c.name}\r\n                </Button>\r\n              </Link>\r\n            ))\r\n          )}\r\n        </div>\r\n\r\n        <h2\r\n          style={{\r\n            textAlign: 'center',\r\n            color: 'black',\r\n            fontSize: '30px',\r\n            backgroundColor: '#fafafa',\r\n          }}\r\n        >\r\n          Contact Us\r\n        </h2>\r\n        <div>\r\n          <Grid container>\r\n            <Grid md={6} xs={12} item>\r\n              <h3 style={{ textAlign: 'center' }}>Social Media</h3>\r\n              <div\r\n                className='my-3'\r\n                style={{\r\n                  display: 'flex',\r\n                  justifyContent: 'center',\r\n                  alignItems: 'center',\r\n                  flexWrap: 'wrap',\r\n                }}\r\n              >\r\n                <div className={classes.iconDiv}>\r\n                  <a\r\n                    target='_blank'\r\n                    href='https://www.instagram.com/odartshop/'\r\n                    className={classes.myIcons}\r\n                  >\r\n                    <i className='fab fa-instagram '></i>\r\n                  </a>\r\n                </div>\r\n\r\n                <div className={classes.iconDiv}>\r\n                  <a\r\n                    target='_blank'\r\n                    href='https://www.facebook.com/Olga.Don.art'\r\n                    className={classes.myIcons}\r\n                  >\r\n                    <i className='fab fa-facebook-square '></i>\r\n                  </a>\r\n                </div>\r\n                <div className={classes.iconDiv}>\r\n                  <i class='fab fa-whatsapp'></i>\r\n                </div>\r\n                <span>054-665-9069</span>\r\n              </div>\r\n            </Grid>\r\n            <Grid md={6} xs={12} item>\r\n              <h3 style={{ textAlign: 'center' }}>Send a Message</h3>\r\n              <form>\r\n                <Paper\r\n                  elevation={3}\r\n                  style={{ padding: '15px', maxWidth: '400px', margin: 'auto' }}\r\n                >\r\n                  <TextField\r\n                    onChange={''}\r\n                    style={{ margin: '15px 0' }}\r\n                    name='email'\r\n                    value={''}\r\n                    label='Email'\r\n                    fullWidth\r\n                    helperText='Enter diffrent email if you want to'\r\n                    type='text'\r\n                    required\r\n                  ></TextField>\r\n                  <TextField\r\n                    onChange={''}\r\n                    style={{ margin: '15px 0' }}\r\n                    name='subject'\r\n                    value={''}\r\n                    label='Subject'\r\n                    fullWidth\r\n                    helperText='Type your subject'\r\n                    type='text'\r\n                    required\r\n                  ></TextField>\r\n\r\n                  <TextField\r\n                    onChange={''}\r\n                    style={{ margin: '15px 0' }}\r\n                    name='message'\r\n                    value={''}\r\n                    label='Message'\r\n                    multiline\r\n                    rows={3}\r\n                    fullWidth\r\n                    type='text'\r\n                    helperText='Type your message'\r\n                    required\r\n                  ></TextField>\r\n\r\n                  <Button\r\n                    onClick={''}\r\n                    type='submit'\r\n                    style={{\r\n                      backgroundColor: '#0d47a1',\r\n                      color: 'white',\r\n                      margin: '15px 0',\r\n                      padding: '5px 15px',\r\n                    }}\r\n                  >\r\n                    Send Message\r\n                  </Button>\r\n                </Paper>\r\n              </form>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n\r\n        <h2\r\n          style={{\r\n            textAlign: 'center',\r\n            color: 'black',\r\n            fontSize: '30px',\r\n            backgroundColor: '#fafafa',\r\n          }}\r\n        >\r\n          About and Policy rules\r\n        </h2>\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","C:\\Users\\michael\\Desktop\\WEB Full Stack Dev\\Full Stack apps\\Olga-jewelry02\\olga-jewelry-02\\client\\src\\Pages\\authPages\\Login.js",[],"C:\\Users\\michael\\Desktop\\WEB Full Stack Dev\\Full Stack apps\\Olga-jewelry02\\olga-jewelry-02\\client\\src\\Pages\\authPages\\Register.js",["137"],"import { Container, makeStyles, Button, TextField } from '@material-ui/core'\r\nimport React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SendIcon from '@material-ui/icons/Send'\r\nimport { auth } from '../../firebase'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport { Alert } from '@material-ui/lab'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  inputField: {\r\n    '& label.Mui-focused': {\r\n      color: '#7e57c2',\r\n    },\r\n    '& .MuiInput-underline:after': {\r\n      borderBottomColor: '#7e57c2',\r\n    },\r\n    marginBottom: '20px',\r\n    padding: '5px',\r\n  },\r\n  button: {\r\n    marginBottom: '20px',\r\n  },\r\n}))\r\n\r\nconst Register = ({ history }) => {\r\n  const { REACT_APP_CLIENT_URL } = process.env\r\n  const classes = useStyles()\r\n\r\n  const user = useSelector((state) => state.user)\r\n\r\n  const [state, setState] = useState({\r\n    email: '',\r\n    loading: '',\r\n    error: '',\r\n    success: '',\r\n  })\r\n\r\n  if (user && user.role === 'admin') {\r\n    history.push('/admin/dashboard')\r\n  } else if (user && user.role !== 'admin') {\r\n    // check if intended\r\n    let intended = history.location.state\r\n    if (intended) {\r\n      history.push(intended.from)\r\n    } else {\r\n      history.push('/user/profile')\r\n    }\r\n  }\r\n\r\n  const { email, error, loading, success } = state\r\n\r\n  const handleChange = (e) => {\r\n    setState({ ...state, [e.target.name]: e.target.value })\r\n  }\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault()\r\n    setState({ ...state, loading: true })\r\n    try {\r\n      const config = {\r\n        url: `${REACT_APP_CLIENT_URL}/register/complete`,\r\n        handleCodeInApp: true,\r\n      }\r\n\r\n      await auth.sendSignInLinkToEmail(email, config)\r\n\r\n      //save user email in local storage\r\n      window.localStorage.setItem('emailForRegistration', email)\r\n      setState({\r\n        ...state,\r\n        email: '',\r\n        loading: false,\r\n        success: `Email was succefully sent to ${email}, check your mailbox to finish the registration.`,\r\n      })\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container\r\n      maxWidth={'sm'}\r\n      style={{ textAlign: 'center', paddingTop: '20px' }}\r\n    >\r\n      <h1>Register</h1>\r\n      <p style={{ color: 'gray' }}>\r\n        Please enter a valid email, confirmation link will be sent to your\r\n        mailbox in order to complete your registration.\r\n      </p>\r\n      {loading && <CircularProgress color='black' />}\r\n      {success && (\r\n        <Alert\r\n          style={{ margin: '15px 0' }}\r\n          onClose={() => {\r\n            setState({ ...state, success: false })\r\n          }}\r\n        >\r\n          {success}\r\n        </Alert>\r\n      )}\r\n\r\n      <form onSubmit={submitHandler} autoComplete='off'>\r\n        <TextField\r\n          onChange={handleChange}\r\n          className={classes.inputField}\r\n          value={email}\r\n          name='email'\r\n          label='Email'\r\n          fullWidth\r\n          type='email'\r\n          helperText='Enter your email'\r\n          required\r\n        />\r\n\r\n        <Button\r\n          style={{ backgroundColor: '#7e57c2', color: 'white' }}\r\n          className={classes.button}\r\n          type='submit'\r\n          fullWidth\r\n          startIcon={<SendIcon />}\r\n          variant='contained'\r\n        >\r\n          Submit Registration\r\n        </Button>\r\n      </form>\r\n      <p>\r\n        Already have an account?{' '}\r\n        <Link style={{ color: 'GrayText', marginLeft: '5px' }} to='/login'>\r\n          Login\r\n        </Link>\r\n      </p>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Register\r\n","C:\\Users\\michael\\Desktop\\WEB Full Stack Dev\\Full Stack apps\\Olga-jewelry02\\olga-jewelry-02\\client\\src\\Pages\\Shop.js",["138","139","140"],"import { Button, CircularProgress } from '@material-ui/core'\r\nimport React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { listCategories } from '../controllers/categoryControllers'\r\nimport { makeStyles } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles({\r\n  flexContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    padding: 0,\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n    margin: '15px 0',\r\n  },\r\n})\r\n\r\nconst Shop = () => {\r\n  const classes = useStyles()\r\n\r\n  const [state, setState] = useState({\r\n    loading: '',\r\n    error: '',\r\n    categories: '',\r\n  })\r\n\r\n  const { loading, error, categories } = state\r\n\r\n  return (\r\n    <div>\r\n      <h1 style={{ textAlign: 'center' }}>Shop</h1>\r\n      <h2\r\n        style={{\r\n          textAlign: 'center',\r\n          color: 'black',\r\n          backgroundColor: '#fafafa',\r\n        }}\r\n      >\r\n        Categories and Filters\r\n      </h2>\r\n      <div style={{ margin: '50px 0' }} className={classes.flexContainer}>\r\n        {loading ? (\r\n          <CircularProgress />\r\n        ) : (\r\n          categories &&\r\n          categories.map((c, i) => (\r\n            <Link\r\n              style={{ margin: '10px' }}\r\n              key={i}\r\n              className={classes.link}\r\n              to={`/category/${c.slug}`}\r\n            >\r\n              <Button\r\n                style={{\r\n                  color: 'GrayText',\r\n                  fontSize: '18px',\r\n                }}\r\n              >\r\n                {c.name}\r\n              </Button>\r\n            </Link>\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Shop\r\n","C:\\Users\\michael\\Desktop\\WEB Full Stack Dev\\Full Stack apps\\Olga-jewelry02\\olga-jewelry-02\\client\\src\\Pages\\Cart.js",[],"C:\\Users\\michael\\Desktop\\WEB Full Stack Dev\\Full Stack apps\\Olga-jewelry02\\olga-jewelry-02\\client\\src\\store.js",[],"C:\\Users\\michael\\Desktop\\WEB Full Stack Dev\\Full Stack apps\\Olga-jewelry02\\olga-jewelry-02\\client\\src\\reducers\\userReducer.js",[],"C:\\Users\\michael\\Desktop\\WEB Full Stack Dev\\Full Stack apps\\Olga-jewelry02\\olga-jewelry-02\\client\\src\\types\\userTypes.js",[],"C:\\Users\\michael\\Desktop\\WEB Full Stack Dev\\Full Stack apps\\Olga-jewelry02\\olga-jewelry-02\\client\\src\\firebase.js",[],"C:\\Users\\michael\\Desktop\\WEB Full Stack Dev\\Full Stack apps\\Olga-jewelry02\\olga-jewelry-02\\client\\src\\Pages\\authPages\\RegisterComplete.js",["141"],"import React, { useState, useEffect } from 'react'\r\nimport { auth } from '../../firebase'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { REGISTER_USER } from '../../types/userTypes'\r\nimport { createUser } from '../../controllers/authControllers'\r\nimport {\r\n  Container,\r\n  makeStyles,\r\n  Button,\r\n  TextField,\r\n  CircularProgress,\r\n} from '@material-ui/core'\r\nimport { Alert } from '@material-ui/lab'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  inputField: {\r\n    '& label.Mui-focused': {\r\n      color: '#311b92',\r\n    },\r\n    '& .MuiInput-underline:after': {\r\n      borderBottomColor: '#311b92',\r\n    },\r\n    marginBottom: '20px',\r\n  },\r\n  button: {\r\n    marginBottom: '20px',\r\n  },\r\n}))\r\n\r\nconst RegisterComplete = ({ history }) => {\r\n  const user = useSelector((state) => state.user)\r\n  const dispatch = useDispatch()\r\n\r\n  const classes = useStyles()\r\n\r\n  const [values, setValues] = useState({\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n    loading: '',\r\n    error: '',\r\n  })\r\n\r\n  const { email, password, confirmPassword, loading, error } = values\r\n\r\n  if (user) {\r\n    localStorage.setItem(\r\n      'userInfo',\r\n      JSON.stringify({\r\n        email: user.email,\r\n        token: user.token,\r\n        role: user.role,\r\n        id: user.id,\r\n      })\r\n    )\r\n\r\n    history.push('/user/profile')\r\n  }\r\n\r\n  useEffect(() => {\r\n    setValues({\r\n      ...values,\r\n      email: window.localStorage.getItem('emailForRegistration'),\r\n    })\r\n  }, [])\r\n\r\n  const handleChange = (e) => {\r\n    setValues({ ...values, [e.target.name]: e.target.value })\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    setValues({ ...values, loading: true })\r\n\r\n    if (password !== confirmPassword) {\r\n      return setValues({\r\n        ...values,\r\n        loading: false,\r\n        error: 'The passwords do not match, please try again.',\r\n      })\r\n    }\r\n\r\n    if (password.length < 8) {\r\n      return setValues({\r\n        ...values,\r\n        loading: false,\r\n        error: 'Password has to be at least 8 characters long.',\r\n      })\r\n    }\r\n\r\n    try {\r\n      const result = await auth.signInWithEmailLink(email, window.location.href)\r\n\r\n      if (result.user.emailVerified) {\r\n        //remove email from local storage\r\n        window.localStorage.removeItem('emailForRegistration')\r\n        //get user id token\r\n        let user = auth.currentUser\r\n        await user.updatePassword(password)\r\n        const idTokenResult = await user.getIdTokenResult()\r\n\r\n        //redux store\r\n        createUser(idTokenResult.token)\r\n          .then((res) =>\r\n            dispatch({\r\n              type: REGISTER_USER,\r\n              payload: {\r\n                email: res.data.email,\r\n                token: idTokenResult.token,\r\n                role: res.data.role,\r\n                id: res.data._id,\r\n              },\r\n            })\r\n          )\r\n          .catch((error) =>\r\n            setValues({\r\n              ...values,\r\n              loading: false,\r\n              error: error.response.data.error,\r\n            })\r\n          )\r\n      }\r\n    } catch (error) {\r\n      setValues({ ...values, loading: false, error: error.message })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container\r\n      maxWidth={'sm'}\r\n      style={{ textAlign: 'center', paddingTop: '20px' }}\r\n    >\r\n      <h1>Complete Registration</h1>\r\n\r\n      {loading && <CircularProgress color='black' />}\r\n      {error && (\r\n        <Alert\r\n          style={{ margin: '15px 0' }}\r\n          severity='error'\r\n          onClose={() => {\r\n            setValues({ ...values, error: false })\r\n          }}\r\n        >\r\n          {error}\r\n        </Alert>\r\n      )}\r\n\r\n      <form onSubmit={handleSubmit} autoComplete='off'>\r\n        <TextField\r\n          onChange={handleChange}\r\n          className={classes.inputField}\r\n          value={email}\r\n          name='email'\r\n          label='Email'\r\n          fullWidth\r\n          type='email'\r\n          helperText='Enter your email'\r\n          disabled\r\n          required\r\n        />\r\n\r\n        <TextField\r\n          onChange={handleChange}\r\n          className={classes.inputField}\r\n          value={password}\r\n          name='password'\r\n          label='Password'\r\n          fullWidth\r\n          type='password'\r\n          helperText='Enter your password'\r\n          required\r\n        />\r\n\r\n        <TextField\r\n          onChange={handleChange}\r\n          className={classes.inputField}\r\n          value={confirmPassword}\r\n          name='confirmPassword'\r\n          label='Confirm passwrod'\r\n          fullWidth\r\n          type='password'\r\n          helperText='Enter your password again'\r\n          required\r\n        />\r\n\r\n        <Button\r\n          style={{ backgroundColor: '#311b92', color: 'white' }}\r\n          className={classes.button}\r\n          type='submit'\r\n          fullWidth\r\n          variant='contained'\r\n        >\r\n          Complete Registration\r\n        </Button>\r\n      </form>\r\n      {JSON.stringify(values)}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default RegisterComplete\r\n","C:\\Users\\michael\\Desktop\\WEB Full Stack Dev\\Full Stack apps\\Olga-jewelry02\\olga-jewelry-02\\client\\src\\controllers\\authControllers.js",[],"C:\\Users\\michael\\Desktop\\WEB Full Stack Dev\\Full Stack apps\\Olga-jewelry02\\olga-jewelry-02\\client\\src\\components\\routes\\PrivateRoute.js",[],"C:\\Users\\michael\\Desktop\\WEB Full Stack Dev\\Full Stack apps\\Olga-jewelry02\\olga-jewelry-02\\client\\src\\Pages\\userPages\\UserProfile.js",[],"C:\\Users\\michael\\Desktop\\WEB Full Stack Dev\\Full Stack apps\\Olga-jewelry02\\olga-jewelry-02\\client\\src\\Pages\\userPages\\PurchaseHistory.js",[],"C:\\Users\\michael\\Desktop\\WEB Full Stack Dev\\Full Stack apps\\Olga-jewelry02\\olga-jewelry-02\\client\\src\\components\\routes\\AdminRoute.js",[],"C:\\Users\\michael\\Desktop\\WEB Full Stack Dev\\Full Stack apps\\Olga-jewelry02\\olga-jewelry-02\\client\\src\\Pages\\adminPages\\AdminDashboard.js",[],"C:\\Users\\michael\\Desktop\\WEB Full Stack Dev\\Full Stack apps\\Olga-jewelry02\\olga-jewelry-02\\client\\src\\components\\admin\\AdminNav.js",[],"C:\\Users\\michael\\Desktop\\WEB Full Stack Dev\\Full Stack apps\\Olga-jewelry02\\olga-jewelry-02\\client\\src\\components\\admin\\AdminSideNav.js",[],["142","143"],"C:\\Users\\michael\\Desktop\\WEB Full Stack Dev\\Full Stack apps\\Olga-jewelry02\\olga-jewelry-02\\client\\src\\Pages\\adminPages\\AdminCategories.js",["144"],"import {\r\n  Button,\r\n  CircularProgress,\r\n  Hidden,\r\n  List,\r\n  ListItem,\r\n  ListItemSecondaryAction,\r\n  ListItemText,\r\n  TextField,\r\n} from '@material-ui/core'\r\nimport React, { useState, useEffect } from 'react'\r\nimport AdminNav from '../../components/admin/AdminNav'\r\nimport AdminSideNav from '../../components/admin/AdminSideNav'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport {\r\n  createCategory,\r\n  listCategories,\r\n  deleteCategory,\r\n} from '../../controllers/categoryControllers'\r\nimport { useSelector } from 'react-redux'\r\nimport { Alert } from '@material-ui/lab'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport Divider from '@material-ui/core/Divider'\r\n\r\nconst AdminCategories = () => {\r\n  const user = useSelector((state) => state.user)\r\n\r\n  const [state, setState] = useState({\r\n    name: '',\r\n    loading: '',\r\n    loadCategories: '',\r\n    error: '',\r\n    success: '',\r\n    deleteSuccess: '',\r\n    deleteError: '',\r\n    categories: '',\r\n  })\r\n\r\n  const {\r\n    name,\r\n    loading,\r\n    error,\r\n    success,\r\n    loadCategories,\r\n    categories,\r\n    deleteSuccess,\r\n    deleteError,\r\n  } = state\r\n\r\n  const getCategories = async () => {\r\n    setState({ ...state, loadCategories: true })\r\n    try {\r\n      const { data } = await listCategories()\r\n      setState({ ...state, loadCategories: false, categories: data })\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  useEffect(() => getCategories(), [])\r\n\r\n  const handleChange = (e) => {\r\n    setState({ ...state, [e.target.name]: e.target.value })\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    setState({ ...state, loading: true })\r\n    try {\r\n      await createCategory(user.token, name)\r\n\r\n      const { data } = await listCategories()\r\n      setState({\r\n        ...state,\r\n        loadCategories: false,\r\n        categories: data,\r\n        success: 'Category Created succefully',\r\n        name: '',\r\n        loading: false,\r\n        error: false,\r\n      })\r\n    } catch (error) {\r\n      setState({\r\n        ...state,\r\n        loading: false,\r\n        error: error.response.data.error,\r\n        success: false,\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleDelete = async (token, slug) => {\r\n    setState({ ...state, loadCategories: true })\r\n    try {\r\n      await deleteCategory(token, slug)\r\n      const { data } = await listCategories()\r\n      setState({\r\n        ...state,\r\n        loadCategories: false,\r\n        categories: data,\r\n        deleteError: false,\r\n        deleteSuccess: 'Category Deleted succefully',\r\n      })\r\n    } catch (error) {\r\n      console.log(error)\r\n      setState({\r\n        ...state,\r\n        loadCategories: false,\r\n        deleteSuccess: false,\r\n        deleteError: error.response.data.error,\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1 style={{ textAlign: 'center', margin: '30px 0' }}>Admin Dashboard</h1>\r\n\r\n      <Hidden smDown>\r\n        <AdminNav />\r\n      </Hidden>\r\n\r\n      <Hidden mdUp>\r\n        <AdminSideNav />\r\n      </Hidden>\r\n      <h2 style={{ margin: '40px 0', textAlign: 'center' }}>Categories</h2>\r\n      <Grid container>\r\n        <Grid item md={6} xs={12}>\r\n          <h3 style={{ textAlign: 'center', backgroundColor: '#fafafa' }}>\r\n            Create new category\r\n          </h3>\r\n\r\n          {loading && (\r\n            <div style={{ textAlign: 'center', margin: '15px 0' }}>\r\n              <CircularProgress color='black' />\r\n            </div>\r\n          )}\r\n          {error && (\r\n            <Alert\r\n              style={{ margin: '15px 0' }}\r\n              severity='error'\r\n              onClose={() => {\r\n                setState({ ...state, error: false })\r\n              }}\r\n            >\r\n              {error}\r\n            </Alert>\r\n          )}\r\n\r\n          {success && (\r\n            <Alert\r\n              style={{ margin: '15px 0' }}\r\n              severity='success'\r\n              onClose={() => {\r\n                setState({ ...state, success: false })\r\n              }}\r\n            >\r\n              {success}\r\n            </Alert>\r\n          )}\r\n\r\n          <form onSubmit={handleSubmit} autoComplete='off'>\r\n            <TextField\r\n              onChange={handleChange}\r\n              value={name}\r\n              name='name'\r\n              label='Category Name'\r\n              fullWidth\r\n              type='text'\r\n              helperText='Enter Category Name'\r\n              required\r\n            />\r\n\r\n            <Button\r\n              style={{\r\n                backgroundColor: '#212121',\r\n                color: 'white',\r\n                margin: '30px 0',\r\n              }}\r\n              className={''}\r\n              type='submit'\r\n              variant='contained'\r\n            >\r\n              Submit\r\n            </Button>\r\n          </form>\r\n        </Grid>\r\n        <Grid style={{ marginBottom: '50px' }} item md={6} xs={12}>\r\n          <h3 style={{ textAlign: 'center', backgroundColor: '#fafafa' }}>\r\n            Categories list\r\n          </h3>\r\n          {loadCategories && (\r\n            <div style={{ textAlign: 'center', margin: '15px 0' }}>\r\n              <CircularProgress color='black' />\r\n            </div>\r\n          )}\r\n          {deleteSuccess && (\r\n            <Alert\r\n              style={{ margin: '15px' }}\r\n              severity='success'\r\n              onClose={() => {\r\n                setState({ ...state, deleteSuccess: false })\r\n              }}\r\n            >\r\n              {deleteSuccess}\r\n            </Alert>\r\n          )}\r\n          {deleteError && (\r\n            <Alert\r\n              style={{ margin: '15px' }}\r\n              severity='error'\r\n              onClose={() => {\r\n                setState({ ...state, deleteError: false })\r\n              }}\r\n            >\r\n              {deleteError}\r\n            </Alert>\r\n          )}\r\n\r\n          <List\r\n            style={{\r\n              width: '250px',\r\n              margin: 'auto',\r\n              overflowY: 'scroll',\r\n              maxHeight: '500px',\r\n            }}\r\n          >\r\n            {categories &&\r\n              categories.map((c) => (\r\n                <React.Fragment key={c._id}>\r\n                  <ListItem style={{ margin: '5px 0' }}>\r\n                    <ListItemText primary={c.name} />\r\n                    <ListItemSecondaryAction>\r\n                      <IconButton edge='end' aria-label='delete'>\r\n                        <DeleteIcon\r\n                          onClick={() => handleDelete(user.token, c.slug)}\r\n                        />\r\n                      </IconButton>\r\n                    </ListItemSecondaryAction>\r\n                  </ListItem>\r\n                  <Divider />\r\n                </React.Fragment>\r\n              ))}\r\n          </List>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AdminCategories\r\n","C:\\Users\\michael\\Desktop\\WEB Full Stack Dev\\Full Stack apps\\Olga-jewelry02\\olga-jewelry-02\\client\\src\\controllers\\categoryControllers.js",[],"C:\\Users\\michael\\Desktop\\WEB Full Stack Dev\\Full Stack apps\\Olga-jewelry02\\olga-jewelry-02\\client\\src\\Pages\\adminPages\\CreateProduct.js",["145","146"],"import {\r\n  Badge,\r\n  Button,\r\n  CircularProgress,\r\n  FormControl,\r\n  Hidden,\r\n  InputLabel,\r\n  MenuItem,\r\n  Paper,\r\n  Select,\r\n  TextField,\r\n} from '@material-ui/core'\r\nimport React, { useState, useEffect } from 'react'\r\nimport AdminNav from '../../components/admin/AdminNav'\r\nimport AdminSideNav from '../../components/admin/AdminSideNav'\r\nimport { listCategories } from '../../controllers/categoryControllers'\r\nimport { useSelector } from 'react-redux'\r\nimport { productCreate } from '../../controllers/productControllers'\r\nimport { storage } from '../../firebase'\r\nimport { Alert } from '@material-ui/lab'\r\nimport Resizer from 'react-image-file-resizer'\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload'\r\nimport CreateIcon from '@material-ui/icons/Create'\r\n\r\nconst CreateProduct = () => {\r\n  const user = useSelector((state) => state.user)\r\n\r\n  const [state, setState] = useState({\r\n    loading: '',\r\n    uploadLoading: '',\r\n    error: '',\r\n    uploadError: '',\r\n    success: '',\r\n    categories: '',\r\n    loadCategories: '',\r\n    name: '',\r\n    category: '',\r\n    image: [],\r\n    description: '',\r\n    price: '',\r\n    quantity: '',\r\n  })\r\n\r\n  const [imgUrl, setImgUrl] = useState([])\r\n\r\n  const {\r\n    loading,\r\n    uploadLoading,\r\n    error,\r\n    uploadError,\r\n    success,\r\n    categories,\r\n    loadCategories,\r\n    name,\r\n    category,\r\n    image,\r\n    description,\r\n    price,\r\n    quantity,\r\n  } = state\r\n\r\n  const getCategories = async () => {\r\n    setState({ ...state, loadCategories: true })\r\n    try {\r\n      const { data } = await listCategories()\r\n      setState({ ...state, loadCategories: false, categories: data })\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  useEffect(() => getCategories(), [])\r\n\r\n  const handleCategoryChange = (e) => {\r\n    setState({ ...state, category: e.target.value })\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    setState({ ...state, [e.target.name]: e.target.value })\r\n  }\r\n\r\n  const handleImageChange = async (e) => {\r\n    setState({ ...state, image: e.target.files })\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    setState({ ...state, loading: true })\r\n    try {\r\n      await productCreate(user.token, {\r\n        name,\r\n        description,\r\n        category,\r\n        price,\r\n        quantity,\r\n        images: imgUrl,\r\n      })\r\n      setState({\r\n        ...state,\r\n        name: '',\r\n        category: '',\r\n        image: [],\r\n        description: '',\r\n        price: '',\r\n        quantity: '',\r\n        loading: false,\r\n        error: false,\r\n        success: 'Product created succefully',\r\n      })\r\n      setImgUrl([])\r\n    } catch (error) {\r\n      setState({\r\n        ...state,\r\n        error: error.response.data.error,\r\n        loading: false,\r\n        success: false,\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleUpload = async () => {\r\n    setState({ ...state, uploadLoading: true })\r\n\r\n    if (image.length === 0) {\r\n      return setState({\r\n        ...state,\r\n        uploadLoading: false,\r\n        uploadError: 'Please choose at least one image to upload.',\r\n      })\r\n    }\r\n    for (let i = 0, len = image.length; i < len; i++) {\r\n      const resizeFile = (file) =>\r\n        new Promise((resolve) => {\r\n          Resizer.imageFileResizer(\r\n            file,\r\n            600,\r\n            600,\r\n            'JPEG',\r\n            100,\r\n            0,\r\n            (uri) => {\r\n              resolve(uri)\r\n            },\r\n            'base64'\r\n          )\r\n        })\r\n\r\n      const file = image[i]\r\n      const newFile = await resizeFile(file)\r\n      let imgString = newFile.split('base64,')[1]\r\n      let id = uuidv4()\r\n\r\n      const uploadTask = storage\r\n        .ref(`images/${id}`)\r\n        .putString(imgString, 'base64', { contentType: 'image/jpeg' })\r\n\r\n      uploadTask.on(\r\n        'state_changed',\r\n        (snapshot) => {},\r\n        (error) => {\r\n          console.log(error)\r\n          return setState({\r\n            ...state,\r\n            uploadLoading: false,\r\n            uploadError: 'could not upload the images.',\r\n          })\r\n        },\r\n        () => {\r\n          storage\r\n            .ref('images')\r\n            .child(id)\r\n            .getDownloadURL()\r\n            .then((url) => {\r\n              setImgUrl((imgUrl) => [...imgUrl, url])\r\n              setState({ ...state, uploadLoading: false })\r\n            })\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1 style={{ textAlign: 'center', margin: '30px 0' }}>Admin Dashboard</h1>\r\n\r\n      <Hidden smDown>\r\n        <AdminNav />\r\n      </Hidden>\r\n\r\n      <Hidden mdUp>\r\n        <AdminSideNav />\r\n      </Hidden>\r\n\r\n      <h2 style={{ textAlign: 'center', margin: '30px 0' }}>Create Product</h2>\r\n      {loadCategories && (\r\n        <div style={{ textAlign: 'center', margin: '15px 0' }}>\r\n          <CircularProgress color='black' />\r\n        </div>\r\n      )}\r\n      <div style={{ maxWidth: '500px', margin: 'auto' }}>\r\n        <form onSubmit={handleSubmit}>\r\n          <Paper elevation={1} style={{ padding: '15px' }}>\r\n            <TextField\r\n              onChange={handleChange}\r\n              style={{ margin: '15px 0' }}\r\n              name='name'\r\n              value={name}\r\n              label='Name'\r\n              fullWidth\r\n              type='text'\r\n              helperText='Enter product name'\r\n              required\r\n            ></TextField>\r\n\r\n            <TextField\r\n              onChange={handleChange}\r\n              style={{ margin: '15px 0' }}\r\n              name='description'\r\n              value={description}\r\n              label='Description'\r\n              multiline\r\n              rows={5}\r\n              fullWidth\r\n              type='text'\r\n              helperText='Enter product description'\r\n              required\r\n            ></TextField>\r\n\r\n            <TextField\r\n              onChange={handleChange}\r\n              style={{ margin: '15px 0' }}\r\n              name='price'\r\n              value={price < 0 ? 1 : price}\r\n              label='Price'\r\n              fullWidth\r\n              type='number'\r\n              helperText='Enter product price'\r\n              required\r\n            ></TextField>\r\n\r\n            <TextField\r\n              onChange={handleChange}\r\n              style={{ margin: '15px 0' }}\r\n              name='quantity'\r\n              value={quantity < 0 ? 1 : quantity}\r\n              label='Quantity'\r\n              fullWidth\r\n              type='number'\r\n              helperText='Enter product quantity'\r\n              required\r\n            ></TextField>\r\n\r\n            <FormControl fullWidth required style={{ margin: '15px 0' }}>\r\n              <InputLabel id='demo-simple-select-label'>\r\n                Select Category\r\n              </InputLabel>\r\n              <Select\r\n                onChange={handleCategoryChange}\r\n                labelId='demo-simple-select-label'\r\n                id='demo-simple-select'\r\n                value={category}\r\n              >\r\n                {categories &&\r\n                  categories.map((c) => (\r\n                    <MenuItem key={c._id} value={c._id}>\r\n                      {c.name}\r\n                    </MenuItem>\r\n                  ))}\r\n              </Select>\r\n            </FormControl>\r\n\r\n            <input\r\n              style={{\r\n                fontSize: '16px',\r\n                display: 'flex',\r\n                flexWrap: 'wrap',\r\n                marginTop: '30px',\r\n              }}\r\n              labelId='images'\r\n              type='file'\r\n              accept='image/*'\r\n              multiple\r\n              name='image'\r\n              onChange={handleImageChange}\r\n            />\r\n            {uploadLoading && (\r\n              <div style={{ textAlign: 'center', margin: '15px 0' }}>\r\n                <CircularProgress color='black' />\r\n              </div>\r\n            )}\r\n            {uploadError && (\r\n              <Alert\r\n                style={{ margin: '15px 0' }}\r\n                severity='error'\r\n                onClose={() => {\r\n                  setState({ ...state, uploadError: false })\r\n                }}\r\n              >\r\n                {uploadError}\r\n              </Alert>\r\n            )}\r\n\r\n            <p style={{ color: 'GrayText' }}>\r\n              *Select the images you want to upload, after chosing all the\r\n              images press on upload images button to upload them to the server.\r\n            </p>\r\n            <Button\r\n              onClick={handleUpload}\r\n              startIcon={<CloudUploadIcon />}\r\n              style={{\r\n                backgroundColor: '#0d47a1',\r\n                color: 'white',\r\n                margin: '15px 0',\r\n                padding: '5px 15px',\r\n              }}\r\n            >\r\n              Upload Images\r\n            </Button>\r\n            <div>\r\n              <h4>Uploaded images preview:</h4>\r\n\r\n              {imgUrl.length === 0 ? (\r\n                <h5>No images uploaded</h5>\r\n              ) : (\r\n                <>\r\n                  <div\r\n                    style={{\r\n                      display: 'flex',\r\n                      flexDirection: 'row',\r\n                      flexWrap: 'wrap',\r\n                      justifyContent: 'center',\r\n                      width: '80%',\r\n                      margin: 'auto',\r\n                    }}\r\n                  >\r\n                    {imgUrl.map((img) => (\r\n                      <div style={{ margin: '15px' }}>\r\n                        <Badge\r\n                          onClick={() => {\r\n                            let fileRef = storage.refFromURL(img)\r\n                            fileRef\r\n                              .delete()\r\n                              .then(() => {\r\n                                // File deleted successfully\r\n                                console.log('File Deleted')\r\n                                let newArray = imgUrl.filter(\r\n                                  (image) => image !== img\r\n                                )\r\n\r\n                                setImgUrl(newArray)\r\n                              })\r\n                              .catch((error) => {\r\n                                console.log(error)\r\n                              })\r\n                          }}\r\n                          color='secondary'\r\n                          badgeContent={\r\n                            <Button style={{ color: 'white' }}>Delete</Button>\r\n                          }\r\n                        >\r\n                          <img\r\n                            style={{\r\n                              maxHeight: '80px',\r\n                              width: 'auto',\r\n                            }}\r\n                            src={img}\r\n                          />\r\n                        </Badge>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </>\r\n              )}\r\n            </div>\r\n          </Paper>\r\n\r\n          {loading && (\r\n            <div style={{ textAlign: 'center', margin: '15px 0' }}>\r\n              <CircularProgress color='black' />\r\n            </div>\r\n          )}\r\n          {error && (\r\n            <Alert\r\n              style={{ margin: '15px 0' }}\r\n              severity='error'\r\n              onClose={() => {\r\n                setState({ ...state, error: false })\r\n              }}\r\n            >\r\n              {error}\r\n            </Alert>\r\n          )}\r\n          {success && (\r\n            <Alert\r\n              style={{ margin: '15px 0' }}\r\n              severity='success'\r\n              onClose={() => {\r\n                setState({ ...state, success: false })\r\n              }}\r\n            >\r\n              {success}\r\n            </Alert>\r\n          )}\r\n\r\n          <Button\r\n            style={{\r\n              backgroundColor: 'black',\r\n              color: 'white',\r\n              margin: '40px 0 80px 0',\r\n            }}\r\n            fullWidth\r\n            startIcon={<CreateIcon />}\r\n            type='submit'\r\n            variant='contained'\r\n          >\r\n            Create Product\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CreateProduct\r\n","C:\\Users\\michael\\Desktop\\WEB Full Stack Dev\\Full Stack apps\\Olga-jewelry02\\olga-jewelry-02\\client\\src\\Pages\\adminPages\\AdminProducts.js",["147","148"],"import {\r\n  Button,\r\n  CircularProgress,\r\n  Hidden,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n} from '@material-ui/core'\r\nimport React, { useEffect, useState } from 'react'\r\nimport AdminNav from '../../components/admin/AdminNav'\r\nimport AdminSideNav from '../../components/admin/AdminSideNav'\r\nimport {\r\n  getProducts,\r\n  productRemove,\r\n} from '../../controllers/productControllers'\r\nimport { useSelector } from 'react-redux'\r\nimport { Alert } from '@material-ui/lab'\r\nimport { storage } from '../../firebase'\r\n\r\nconst AdminProducts = ({ history }) => {\r\n  const [state, setState] = useState({\r\n    products: [],\r\n    error: '',\r\n    loading: '',\r\n    deleteLoading: '',\r\n    deleteSuccess: '',\r\n    deleteError: '',\r\n  })\r\n\r\n  const user = useSelector((state) => state.user)\r\n\r\n  const {\r\n    products,\r\n    loading,\r\n    error,\r\n    deleteError,\r\n    deleteLoading,\r\n    deleteSuccess,\r\n  } = state\r\n\r\n  const listProducts = async () => {\r\n    setState({ ...state, loading: true })\r\n    try {\r\n      const { data } = await getProducts(user.token)\r\n      setState({ ...state, products: data, loading: false })\r\n    } catch (error) {\r\n      console.log(error)\r\n      setState({ ...state, error: error.response.data.error, loading: false })\r\n    }\r\n  }\r\n\r\n  useEffect(() => listProducts(), [])\r\n\r\n  const deleteProduct = async (imgs, id) => {\r\n    try {\r\n      const images = imgs\r\n      // return console.log(images, id)\r\n\r\n      for (let i = 0, len = images.length; i < len; i++) {\r\n        let fileRef = await storage.refFromURL(images[i])\r\n        fileRef.delete().then((res) => console.log(images[i], 'deleted'))\r\n      }\r\n\r\n      await productRemove(user.token, id)\r\n      const { data } = await getProducts(user.token)\r\n\r\n      setState({\r\n        ...state,\r\n        products: data,\r\n        deleteLoading: false,\r\n        deleteSuccess: 'Product Deleted succefully.',\r\n        deleteError: false,\r\n      })\r\n    } catch (error) {\r\n      console.log(error)\r\n      setState({\r\n        ...state,\r\n        deleteError: error.response.data.error,\r\n        deleteSuccess: false,\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1 style={{ textAlign: 'center', margin: '30px 0' }}>Admin Dashboard</h1>\r\n\r\n      <Hidden smDown>\r\n        <AdminNav />\r\n      </Hidden>\r\n\r\n      <Hidden mdUp>\r\n        <AdminSideNav />\r\n      </Hidden>\r\n\r\n      <h2 style={{ textAlign: 'center', margin: '30px 0' }}>Products list</h2>\r\n      {loading && (\r\n        <div style={{ textAlign: 'center', margin: '15px 0' }}>\r\n          <CircularProgress color='black' />\r\n        </div>\r\n      )}\r\n\r\n      {error && (\r\n        <Alert\r\n          style={{ margin: '15px 0' }}\r\n          severity='error'\r\n          onClose={() => {\r\n            setState({ ...state, error: false })\r\n          }}\r\n        >\r\n          {error}\r\n        </Alert>\r\n      )}\r\n\r\n      {deleteError && (\r\n        <Alert\r\n          style={{ margin: '15px 0' }}\r\n          severity='error'\r\n          onClose={() => {\r\n            setState({ ...state, deleteError: false })\r\n          }}\r\n        >\r\n          {deleteError}\r\n        </Alert>\r\n      )}\r\n\r\n      {deleteSuccess && (\r\n        <Alert\r\n          style={{ margin: '15px 0' }}\r\n          severity='success'\r\n          onClose={() => {\r\n            setState({ ...state, deleteSuccess: false })\r\n          }}\r\n        >\r\n          {deleteSuccess}\r\n        </Alert>\r\n      )}\r\n\r\n      <TableContainer component={Paper}>\r\n        <Table aria-label='customized table'>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell align='left'>Product name</TableCell>\r\n              <TableCell align='left'>price</TableCell>\r\n              <TableCell align='left'>category</TableCell>\r\n              <TableCell align='left'>quantity</TableCell>\r\n              <TableCell align='left'>Main image</TableCell>\r\n              <TableCell align='left'></TableCell>\r\n              <TableCell align='left'></TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {products &&\r\n              products.map((p) => (\r\n                <TableRow key={p._id}>\r\n                  <TableCell align='left'>{p.name}</TableCell>\r\n                  <TableCell align='left'>{p.price}</TableCell>\r\n                  <TableCell align='left'>\r\n                    {p.category ? p.category.name : 'No category found'}\r\n                  </TableCell>\r\n                  <TableCell align='left'>{p.quantity}</TableCell>\r\n                  <TableCell align='left'>\r\n                    {\r\n                      <img\r\n                        style={{ height: '50px' }}\r\n                        src={p.images[0]}\r\n                        alt='Image not found'\r\n                      />\r\n                    }\r\n                  </TableCell>\r\n                  <TableCell align='left'>\r\n                    <Button\r\n                      onClick={() => history.push(`/admin/product/${p._id}`)}\r\n                      variant='outlined'\r\n                      color='primary'\r\n                    >\r\n                      Update\r\n                    </Button>\r\n                  </TableCell>\r\n                  <TableCell align='left'>\r\n                    <Button\r\n                      onClick={() => deleteProduct(p.images, p._id)}\r\n                      variant='outlined'\r\n                      color='secondary'\r\n                    >\r\n                      {deleteLoading ? <CircularProgress /> : 'Delete'}\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AdminProducts\r\n","C:\\Users\\michael\\Desktop\\WEB Full Stack Dev\\Full Stack apps\\Olga-jewelry02\\olga-jewelry-02\\client\\src\\controllers\\productControllers.js",[],"C:\\Users\\michael\\Desktop\\WEB Full Stack Dev\\Full Stack apps\\Olga-jewelry02\\olga-jewelry-02\\client\\src\\Pages\\adminPages\\UpdateProduct.js",["149","150"],"import {\r\n  Badge,\r\n  Button,\r\n  CircularProgress,\r\n  FormControl,\r\n  Hidden,\r\n  InputLabel,\r\n  MenuItem,\r\n  Paper,\r\n  Select,\r\n  TextField,\r\n} from '@material-ui/core'\r\nimport React, { useState, useEffect } from 'react'\r\nimport AdminNav from '../../components/admin/AdminNav'\r\nimport AdminSideNav from '../../components/admin/AdminSideNav'\r\nimport { listCategories } from '../../controllers/categoryControllers'\r\nimport { useSelector } from 'react-redux'\r\nimport {\r\n  readProduct,\r\n  productUpdate,\r\n} from '../../controllers/productControllers'\r\nimport { storage } from '../../firebase'\r\nimport { Alert } from '@material-ui/lab'\r\nimport Resizer from 'react-image-file-resizer'\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload'\r\nimport CreateIcon from '@material-ui/icons/Create'\r\n\r\nconst UpdateProduct = ({ match, history }) => {\r\n  const user = useSelector((state) => state.user)\r\n\r\n  const id = match.params.id\r\n\r\n  const [state, setState] = useState({\r\n    loading: '',\r\n    uploadLoading: '',\r\n    error: '',\r\n    uploadError: '',\r\n    success: '',\r\n    categories: '',\r\n    loadCategories: '',\r\n    name: '',\r\n    category: '',\r\n    image: [],\r\n    description: '',\r\n    price: '',\r\n    quantity: '',\r\n  })\r\n\r\n  const [imgUrl, setImgUrl] = useState([])\r\n\r\n  const {\r\n    loading,\r\n    uploadLoading,\r\n    error,\r\n    uploadError,\r\n    success,\r\n    categories,\r\n    loadCategories,\r\n    name,\r\n    category,\r\n    image,\r\n    description,\r\n    price,\r\n    quantity,\r\n  } = state\r\n\r\n  const getProduct = async () => {\r\n    setState({ ...state, loading: true })\r\n    try {\r\n      const categories = await listCategories()\r\n      const { data } = await readProduct(id)\r\n      setImgUrl(data.images && data.images)\r\n      setState({\r\n        ...state,\r\n        loading: false,\r\n        name: data.name,\r\n        category: data.category && data.category._id,\r\n        description: data.description,\r\n        price: data.price,\r\n        quantity: data.quantity,\r\n        categories: categories.data,\r\n      })\r\n      // setState({})\r\n    } catch (error) {\r\n      console.log(error)\r\n      setState({ ...state, loading: false, error: error.response.data.error })\r\n    }\r\n  }\r\n\r\n  useEffect(() => getProduct(), [])\r\n\r\n  const handleCategoryChange = (e) => {\r\n    setState({ ...state, category: e.target.value })\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    setState({ ...state, [e.target.name]: e.target.value })\r\n  }\r\n\r\n  const handleImageChange = async (e) => {\r\n    setState({ ...state, image: e.target.files })\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    setState({ ...state, loading: true })\r\n    try {\r\n      await productUpdate(id, user.token, {\r\n        name,\r\n        description,\r\n        category,\r\n        price,\r\n        quantity,\r\n        images: imgUrl,\r\n      })\r\n      setState({\r\n        ...state,\r\n        name: '',\r\n        category: '',\r\n        image: [],\r\n        description: '',\r\n        price: '',\r\n        quantity: '',\r\n        loading: false,\r\n        error: false,\r\n      })\r\n      setImgUrl([])\r\n      history.push('/admin/products')\r\n    } catch (error) {\r\n      setState({\r\n        ...state,\r\n        error: error.response.data.error,\r\n        loading: false,\r\n        success: false,\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleUpload = async () => {\r\n    setState({ ...state, uploadLoading: true })\r\n\r\n    if (image.length === 0) {\r\n      return setState({\r\n        ...state,\r\n        uploadLoading: false,\r\n        uploadError: 'Please choose at least one image to upload.',\r\n      })\r\n    }\r\n    for (let i = 0, len = image.length; i < len; i++) {\r\n      const resizeFile = (file) =>\r\n        new Promise((resolve) => {\r\n          Resizer.imageFileResizer(\r\n            file,\r\n            600,\r\n            600,\r\n            'JPEG',\r\n            100,\r\n            0,\r\n            (uri) => {\r\n              resolve(uri)\r\n            },\r\n            'base64'\r\n          )\r\n        })\r\n\r\n      const file = image[i]\r\n      const newFile = await resizeFile(file)\r\n      let imgString = newFile.split('base64,')[1]\r\n      let id = uuidv4()\r\n\r\n      const uploadTask = storage\r\n        .ref(`images/${id}`)\r\n        .putString(imgString, 'base64', { contentType: 'image/jpeg' })\r\n\r\n      uploadTask.on(\r\n        'state_changed',\r\n        (snapshot) => {},\r\n        (error) => {\r\n          console.log(error)\r\n          return setState({\r\n            ...state,\r\n            uploadLoading: false,\r\n            uploadError: 'could not upload the images.',\r\n          })\r\n        },\r\n        () => {\r\n          storage\r\n            .ref('images')\r\n            .child(id)\r\n            .getDownloadURL()\r\n            .then((url) => {\r\n              setImgUrl((imgUrl) => [...imgUrl, url])\r\n              setState({ ...state, uploadLoading: false })\r\n            })\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1 style={{ textAlign: 'center', margin: '30px 0' }}>Admin Dashboard</h1>\r\n\r\n      <Hidden smDown>\r\n        <AdminNav />\r\n      </Hidden>\r\n\r\n      <Hidden mdUp>\r\n        <AdminSideNav />\r\n      </Hidden>\r\n\r\n      <h2 style={{ textAlign: 'center', margin: '30px 0' }}>Update Product</h2>\r\n      {loadCategories && (\r\n        <div style={{ textAlign: 'center', margin: '15px 0' }}>\r\n          <CircularProgress color='black' />\r\n        </div>\r\n      )}\r\n      <div style={{ maxWidth: '500px', margin: 'auto' }}>\r\n        <form onSubmit={handleSubmit}>\r\n          <Paper elevation={1} style={{ padding: '15px' }}>\r\n            <TextField\r\n              onChange={handleChange}\r\n              style={{ margin: '15px 0' }}\r\n              name='name'\r\n              value={name}\r\n              label='Name'\r\n              fullWidth\r\n              type='text'\r\n              helperText='Enter product name'\r\n              required\r\n            ></TextField>\r\n\r\n            <TextField\r\n              onChange={handleChange}\r\n              style={{ margin: '15px 0' }}\r\n              name='description'\r\n              value={description}\r\n              label='Description'\r\n              multiline\r\n              rows={5}\r\n              fullWidth\r\n              type='text'\r\n              helperText='Enter product description'\r\n              required\r\n            ></TextField>\r\n\r\n            <TextField\r\n              onChange={handleChange}\r\n              style={{ margin: '15px 0' }}\r\n              name='price'\r\n              value={price < 0 ? 1 : price}\r\n              label='Price'\r\n              fullWidth\r\n              type='number'\r\n              helperText='Enter product price'\r\n              required\r\n            ></TextField>\r\n\r\n            <TextField\r\n              onChange={handleChange}\r\n              style={{ margin: '15px 0' }}\r\n              name='quantity'\r\n              value={quantity < 0 ? 1 : quantity}\r\n              label='Quantity'\r\n              fullWidth\r\n              type='number'\r\n              helperText='Enter product quantity'\r\n              required\r\n            ></TextField>\r\n\r\n            <FormControl fullWidth required style={{ margin: '15px 0' }}>\r\n              <InputLabel id='demo-simple-select-label'>\r\n                Select Category\r\n              </InputLabel>\r\n              <Select\r\n                onChange={handleCategoryChange}\r\n                labelId='demo-simple-select-label'\r\n                id='demo-simple-select'\r\n                value={category}\r\n              >\r\n                {categories &&\r\n                  categories.map((c) => (\r\n                    <MenuItem key={c._id} value={c._id}>\r\n                      {c.name}\r\n                    </MenuItem>\r\n                  ))}\r\n              </Select>\r\n            </FormControl>\r\n\r\n            <input\r\n              style={{\r\n                fontSize: '16px',\r\n                display: 'flex',\r\n                flexWrap: 'wrap',\r\n                marginTop: '30px',\r\n              }}\r\n              labelId='images'\r\n              type='file'\r\n              accept='image/*'\r\n              multiple\r\n              name='image'\r\n              onChange={handleImageChange}\r\n            />\r\n            {uploadLoading && (\r\n              <div style={{ textAlign: 'center', margin: '15px 0' }}>\r\n                <CircularProgress color='black' />\r\n              </div>\r\n            )}\r\n            {uploadError && (\r\n              <Alert\r\n                style={{ margin: '15px 0' }}\r\n                severity='error'\r\n                onClose={() => {\r\n                  setState({ ...state, uploadError: false })\r\n                }}\r\n              >\r\n                {uploadError}\r\n              </Alert>\r\n            )}\r\n\r\n            <p style={{ color: 'GrayText' }}>\r\n              *Select the images you want to upload, after chosing all the\r\n              images press on upload images button to upload them to the server.\r\n            </p>\r\n            <Button\r\n              onClick={handleUpload}\r\n              startIcon={<CloudUploadIcon />}\r\n              style={{\r\n                backgroundColor: '#0d47a1',\r\n                color: 'white',\r\n                margin: '15px 0',\r\n                padding: '5px 15px',\r\n              }}\r\n            >\r\n              Upload Images\r\n            </Button>\r\n            <div>\r\n              <h4>Uploaded images preview:</h4>\r\n\r\n              {imgUrl.length === 0 ? (\r\n                <h5>No images uploaded</h5>\r\n              ) : (\r\n                <>\r\n                  <div\r\n                    style={{\r\n                      display: 'flex',\r\n                      flexDirection: 'row',\r\n                      flexWrap: 'wrap',\r\n                      justifyContent: 'center',\r\n                      width: '80%',\r\n                      margin: 'auto',\r\n                    }}\r\n                  >\r\n                    {imgUrl.map((img) => (\r\n                      <div style={{ margin: '15px' }}>\r\n                        <Badge\r\n                          onClick={() => {\r\n                            let fileRef = storage.refFromURL(img)\r\n                            fileRef\r\n                              .delete()\r\n                              .then(() => {\r\n                                // File deleted successfully\r\n                                console.log('File Deleted')\r\n                                let newArray = imgUrl.filter(\r\n                                  (image) => image !== img\r\n                                )\r\n\r\n                                setImgUrl(newArray)\r\n                              })\r\n                              .catch((error) => {\r\n                                console.log(error)\r\n                              })\r\n                          }}\r\n                          color='secondary'\r\n                          badgeContent={\r\n                            <Button style={{ color: 'white' }}>Delete</Button>\r\n                          }\r\n                        >\r\n                          <img\r\n                            style={{\r\n                              maxHeight: '80px',\r\n                              width: 'auto',\r\n                            }}\r\n                            src={img}\r\n                          />\r\n                        </Badge>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </>\r\n              )}\r\n            </div>\r\n          </Paper>\r\n\r\n          {loading && (\r\n            <div style={{ textAlign: 'center', margin: '15px 0' }}>\r\n              <CircularProgress color='black' />\r\n            </div>\r\n          )}\r\n          {error && (\r\n            <Alert\r\n              style={{ margin: '15px 0' }}\r\n              severity='error'\r\n              onClose={() => {\r\n                setState({ ...state, error: false })\r\n              }}\r\n            >\r\n              {error}\r\n            </Alert>\r\n          )}\r\n          {success && (\r\n            <Alert\r\n              style={{ margin: '15px 0' }}\r\n              severity='success'\r\n              onClose={() => {\r\n                setState({ ...state, success: false })\r\n              }}\r\n            >\r\n              {success}\r\n            </Alert>\r\n          )}\r\n\r\n          <Button\r\n            style={{\r\n              backgroundColor: 'black',\r\n              color: 'white',\r\n              margin: '40px 0 80px 0',\r\n            }}\r\n            fullWidth\r\n            startIcon={<CreateIcon />}\r\n            type='submit'\r\n            variant='contained'\r\n          >\r\n            Update Product\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UpdateProduct\r\n",{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","severity":1,"message":"156","line":59,"column":6,"nodeType":"157","endLine":59,"endColumn":8,"suggestions":"158"},{"ruleId":"159","severity":1,"message":"160","line":6,"column":3,"nodeType":"161","messageId":"162","endLine":6,"endColumn":7},{"ruleId":"159","severity":1,"message":"163","line":10,"column":3,"nodeType":"161","messageId":"162","endLine":10,"endColumn":7},{"ruleId":"159","severity":1,"message":"164","line":16,"column":10,"nodeType":"161","messageId":"162","endLine":16,"endColumn":17},{"ruleId":"155","severity":1,"message":"165","line":94,"column":34,"nodeType":"157","endLine":94,"endColumn":36,"suggestions":"166"},{"ruleId":"167","severity":1,"message":"168","line":100,"column":11,"nodeType":"169","endLine":100,"endColumn":56},{"ruleId":"167","severity":1,"message":"168","line":140,"column":21,"nodeType":"169","endLine":144,"endColumn":23},{"ruleId":"167","severity":1,"message":"168","line":187,"column":21,"nodeType":"169","endLine":191,"endColumn":23},{"ruleId":"170","severity":1,"message":"171","line":271,"column":21,"nodeType":"172","endLine":271,"endColumn":36},{"ruleId":"170","severity":1,"message":"171","line":281,"column":21,"nodeType":"172","endLine":281,"endColumn":36},{"ruleId":"159","severity":1,"message":"173","line":51,"column":18,"nodeType":"161","messageId":"162","endLine":51,"endColumn":23},{"ruleId":"159","severity":1,"message":"174","line":4,"column":10,"nodeType":"161","messageId":"162","endLine":4,"endColumn":24},{"ruleId":"159","severity":1,"message":"175","line":21,"column":17,"nodeType":"161","messageId":"162","endLine":21,"endColumn":25},{"ruleId":"159","severity":1,"message":"173","line":27,"column":20,"nodeType":"161","messageId":"162","endLine":27,"endColumn":25},{"ruleId":"155","severity":1,"message":"176","line":65,"column":6,"nodeType":"157","endLine":65,"endColumn":8,"suggestions":"177"},{"ruleId":"151","replacedBy":"178"},{"ruleId":"153","replacedBy":"179"},{"ruleId":"155","severity":1,"message":"180","line":61,"column":36,"nodeType":"157","endLine":61,"endColumn":38,"suggestions":"181"},{"ruleId":"155","severity":1,"message":"180","line":73,"column":36,"nodeType":"157","endLine":73,"endColumn":38,"suggestions":"182"},{"ruleId":"167","severity":1,"message":"168","line":362,"column":27,"nodeType":"169","endLine":368,"endColumn":29},{"ruleId":"155","severity":1,"message":"183","line":56,"column":35,"nodeType":"157","endLine":56,"endColumn":37,"suggestions":"184"},{"ruleId":"185","severity":1,"message":"186","line":168,"column":23,"nodeType":"169","endLine":172,"endColumn":25},{"ruleId":"155","severity":1,"message":"187","line":91,"column":33,"nodeType":"157","endLine":91,"endColumn":35,"suggestions":"188"},{"ruleId":"167","severity":1,"message":"168","line":380,"column":27,"nodeType":"169","endLine":386,"endColumn":29},"no-native-reassign",["189"],"no-negated-in-lhs",["190"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'user'. Either include them or remove the dependency array.","ArrayExpression",["191"],"no-unused-vars","'Card' is defined but never used.","Identifier","unusedVar","'List' is defined but never used.","'NavLink' is defined but never used.","React Hook useEffect has a missing dependency: 'getProducts'. Either include it or remove the dependency array.",["192"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'error' is assigned a value but never used.","'listCategories' is defined but never used.","'setState' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'values'. Either include it or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.",["193"],["189"],["190"],"React Hook useEffect has a missing dependency: 'getCategories'. Either include it or remove the dependency array.",["194"],["195"],"React Hook useEffect has a missing dependency: 'listProducts'. Either include it or remove the dependency array.",["196"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","React Hook useEffect has a missing dependency: 'getProduct'. Either include it or remove the dependency array.",["197"],"no-global-assign","no-unsafe-negation",{"desc":"198","fix":"199"},{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},{"desc":"204","fix":"205"},{"desc":"204","fix":"206"},{"desc":"207","fix":"208"},{"desc":"209","fix":"210"},"Update the dependencies array to be: [dispatch, user]",{"range":"211","text":"212"},"Update the dependencies array to be: [getProducts]",{"range":"213","text":"214"},"Update the dependencies array to be: [values]",{"range":"215","text":"216"},"Update the dependencies array to be: [getCategories]",{"range":"217","text":"218"},{"range":"219","text":"218"},"Update the dependencies array to be: [listProducts]",{"range":"220","text":"221"},"Update the dependencies array to be: [getProduct]",{"range":"222","text":"223"},[2056,2058],"[dispatch, user]",[2173,2175],"[getProducts]",[1480,1482],"[values]",[1497,1499],"[getCategories]",[1782,1784],[1343,1345],"[listProducts]",[2258,2260],"[getProduct]"]